{"version":3,"sources":["firebase.js","components/HomepageSec1.js","components/GlobalStatCard.js","components/HomepageSec2.js","components/CoreMembersCard.js","components/HomepageMembersCard.js","components/HomePageSec3.js","components/EventCard.js","components/HomepageSec4.js","components/AccountMembersCard.js","components/Event.js","components/AnnouncementCard.js","components/Announcements.js","components/DisplayFeedback.js","components/SearchResult.js","components/Search.js","components/MemberUnderMeCard.js","components/MembersUnderMe.js","components/Admin.js","components/Feedback.js","components/Editor.js","components/MemberAccount.js","components/Footer.js","components/Error.js","components/LastEvent.js","components/DisplayAllMembers.js","components/JudgesCard.js","components/PhotographyReloaded.js","components/UpcomingEvent.js","App.js","serviceWorker.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","Section1","events","colorMode","useToast","useState","isOpen","setIsOpen","onClose","style","color","light","dark","ButtonBgColor","ButtonColor","HoverButtonBgColor","HoverButtonColor","style3","backgroundColor","history","useHistory","className","to","Button","borderRadius","leftIcon","MdGroup","variant","borderStyle","onClick","e","push","bg","_hover","marginRight","marginBottom","map","id","event","eventStatus","eventUrl","key","Modal","isCentered","eventName","eventDescription","target","rel","href","MdSend","background","MdClose","IconButton","src","alt","GlobalStatCard","statName","statValue","HomepageSec2","lastEvents","length","lastEvent","lastEventParticipants","lastEventReach","lastEventEngagement","CoreMembersCard","member","image","imageUrl","isDetailOpen","setIsDetailOpen","onDetailClose","Avatar","name","customPosition","department","initialFocusRef","rno","email","dob","course","status","instaUrl","linkedinUrl","HomepageMembersCard","NavbarColor","styleText","Section3","coreMembers","coordinators","members","coremember","coordinator","EventCard","style2","eventId","calledBy","toast","setEventName","eventPoster","setEventPoster","eventPage","setEventPage","setEventDescription","eventDate","setEventDate","setEventStatus","eventGuest","setEventGuest","eventSponsors","setEventSponsors","eventParticipants","setEventParticipants","eventOrganizerCertificate","setEventOrganizerCertificate","eventParticipantCertificate","setEventParticipantCertificate","localStorage","getItem","updatedBy","setEventUrl","display","participationCertificateStyle","participantsStyle","TextFieldBgColor","TextFieldColor","classes","makeStyles","root","useStyles","marginTop","fontWeight","collection","doc","delete","then","currentUser","window","Email","send","SecureToken","To","From","Subject","Body","title","description","duration","isClosable","catch","error","TextField","InputProps","type","label","value","onChange","required","fullWidth","InputLabelProps","shrink","FormControl","InputLabel","htmlFor","Select","native","inputProps","preventDefault","set","timestamp","FieldValue","serverTimestamp","merge","Section4","AccountMembersCard","memberId","backdropIsOpen","setBackdropIsOpen","setStatus","setDob","oldRno","setRno","setName","setEmail","password","setPassword","setCourse","contact","setContact","setDepartment","myCoordinator","setMyCoordinator","admin","setAdmin","editor","setEditor","setImageUrl","setCustomPosition","editPass","setEditPass","setInstaUrl","setLinkedinUrl","successfullyUpdated","ChooseCoordinator","deletedUser","deletedUserDepartment","messageBody","FormGroup","row","FormControlLabel","control","Checkbox","checked","fetch","method","headers","body","JSON","stringify","res","json","data","token","where","get","querySnapshot","docs","setItem","Backdrop","open","CircularProgress","Event","addedBy","successfullyAdded","MdNoteAdd","add","AnnouncementCard","announcementId","announcement","newAnnouncement","setNewAnnouncement","height","fontSize","padding","heading","link","Announcements","i","announcements","allMembers","setHeading","setDescription","setLink","arr","allmember","mail","multiline","console","log","DisplayFeedback","feedback","feedbackId","category","SearchResult","query","style4","searchRno","searchName","searchDepartment","includes","Search","input","setInput","Input","MemberUnderMeCard","boxShadow","MembersUnderMe","styleMember","Admin","feedbacks","isOpen2","setIsOpen2","onClose2","lastEventName","setLastEventName","lastEventDescription","setLastEventDescription","setLastEventParticipants","setLastEventReach","lastEventPic1","setLastEventPic1","lastEventPic2","setLastEventPic2","lastEventPic3","setLastEventPic3","setLastEventEngagement","useEffect","location","forEach","size","MdPersonAdd","Feedback","setCategory","MdFeedback","Editor","styleStatus","updatePass","setUpdatePass","updatePass2","setUpdatePass2","clear","updatePassword","MdLock","MemberAccount","Footer","ThemeProvider","ColorModeProvider","Error","LastEvent","DisplayAllMembers","paddingTop","JudgesCard","url","insta","Faq","question","answer","faq","setFaq","faqStatus","style1","PhotographyReloaded","justifyContent","EventPage","UpcomingEvent","Navbar","user","setUser","setAllMembers","setMembers","setCoreMembers","setCoordinators","setEvents","setAnnouncements","setFeedbacks","setLastEvents","useColorMode","toggleColorMode","onSnapshot","snapshot","orderBy","goHome","reload","bodyStyle","logoStyle1","logoStyle2","MdPerson","exact","path","Home","component","NoMatchPage","App","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.009b6efc.chunk.js","sourcesContent":["// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nimport firebase from 'firebase'\r\nconst firebaseApp = firebase.initializeApp({\r\n    apiKey: \"AIzaSyBIcv_gvm5fOZ489q8tTBZ8oFhFyXV1aQI\",\r\n  authDomain: \"inginnweb.firebaseapp.com\",\r\n  databaseURL: \"https://inginnweb.firebaseio.com\",\r\n  projectId: \"inginnweb\",\r\n  storageBucket: \"inginnweb.appspot.com\",\r\n  messagingSenderId: \"1073818245431\",\r\n  appId: \"1:1073818245431:web:cc5456c567a20fa256e2b2\",\r\n  measurementId: \"G-X5PHG4D6XX\"\r\n  });\r\n  \r\n\r\n  const db = firebaseApp.firestore()\r\n\r\n  export  {db}\r\n","import {\r\n  Button,\r\n  Modal,\r\n  ModalBody,\r\n  ModalContent,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  ModalOverlay,\r\n  useToast,\r\n} from \"@chakra-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport \"../style/HomepageSec1.css\";\r\n\r\nimport { MdClose, MdEventAvailable, MdGroup, MdSend } from \"react-icons/md\"; //material design Icon\r\nimport { BrowserRouter as Router, Link, useHistory } from \"react-router-dom\";\r\nimport { AiFillInstagram } from \"react-icons/ai\";\r\nimport { IconButton } from \"@material-ui/core\";\r\n\r\nfunction Section1({ events, colorMode }) {\r\n  //console.log(\"Color inside sec1 \", colorMode);\r\n  const toast = useToast();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const onOpen = () => {\r\n    setIsOpen(true);\r\n  };\r\n  const onClose = () => {\r\n    setIsOpen(false);\r\n  };\r\n  //console.log(\"event is \",events)\r\n\r\n  const Color = { light: \"#1d1e1f\", dark: \"#ffffff\" };\r\n  var style = {\r\n    color: Color[colorMode],\r\n  };\r\n\r\n  const ButtonBgColor = { light: \"#1d1e1f\", dark: \"#ffffff\" };\r\n  const ButtonColor = { light: \"#ffffff\", dark: \"#1d1e1f\" };\r\n  const HoverButtonBgColor = { light: \"#ffffff\", dark: \"#1d1e1f\" };\r\n  const HoverButtonColor = { light: \"#1d1e1f\", dark: \"#ffffff\" };\r\n\r\n  const NavbarBgColor = { light: \"#ffffff\", dark: \"#1d1e1f\" };\r\n  const NavbarColor = { light: \"#1d1e1f\", dark: \"#ffffff\" };\r\n  var style3 = {\r\n    backgroundColor: NavbarBgColor[colorMode],\r\n    color: NavbarColor[colorMode],\r\n  };\r\n  const history = useHistory()\r\n  \r\n  const gotoAllmembers=(e)=>{\r\n    return history.push(\"/inginnv1/allmembers\");\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <div style={style} className=\"HeroContent\">\r\n        <div className=\"HeroAllContent\">\r\n          <h1>INGINN</h1>\r\n          <div className=\"HeroDescription\">\r\n            <h3>WE CONDUCT 🔥 🔥 EVENTS!!!</h3>\r\n            <p>\r\n              <strong>INGINN </strong>is a student organization under the <br />\r\n              aegis of DSW\r\n              <br /> LPU\r\n            </p>\r\n\r\n            <div className=\"centerButton\">\r\n              <div>\r\n                <Link to=\"/inginnv1/allmembers\">\r\n                  <Button\r\n                    borderRadius=\"0\"\r\n                    leftIcon={MdGroup}\r\n                    variant=\"solid\"\r\n                    borderStyle=\"none\"\r\n                    onClick={gotoAllmembers}\r\n                    bg={ButtonBgColor[colorMode]}\r\n                    color={ButtonColor[colorMode]}\r\n                    _hover={{\r\n                      bg: HoverButtonBgColor[colorMode],\r\n                      color: HoverButtonColor[colorMode],\r\n                    }}\r\n                    marginRight=\"10px\"\r\n                    marginBottom=\"10px\"\r\n                  >\r\n                    All Members\r\n                  </Button>\r\n                </Link>\r\n              </div>\r\n              <div className=\"HomepageSec1Buttons\">\r\n                {events.map(({ id, event }) =>\r\n                  event.eventStatus === \"Upcoming\" && event.eventUrl != \"\" ? (\r\n                    <div key={id}>\r\n                      <Modal isOpen={isOpen} onClose={onClose} isCentered>\r\n                        <ModalOverlay />\r\n                        <ModalContent style={style3}>\r\n                          <ModalHeader>\r\n                            <h3 className=\"ModalHeader\">{event.eventName}</h3>\r\n                          </ModalHeader>\r\n                          <ModalBody className=\"MemberInfo\">\r\n                            <p>{event.eventDescription}</p>\r\n                          </ModalBody>\r\n                          <ModalFooter>\r\n                            <a\r\n                              target=\"_blank\"\r\n                              rel=\"noopener noreferrer\"\r\n                              href={event.eventUrl}\r\n                            >\r\n                              <Button\r\n                                borderRadius=\"0\"\r\n                                className=\"Button\"\r\n                                leftIcon={MdSend}\r\n                                variant=\"solid\"\r\n                                borderStyle=\"none\"\r\n                                bg={ButtonBgColor[colorMode]}\r\n                                color={ButtonColor[colorMode]}\r\n                                _hover={{\r\n                                  bg: HoverButtonBgColor[colorMode],\r\n                                  color: HoverButtonColor[colorMode],\r\n                                }}\r\n                              >\r\n                                Join Event\r\n                              </Button>\r\n                            </a>\r\n\r\n                            <Button\r\n                              borderRadius=\"0\"\r\n                              _hover={{ bg: \"#000\", color: \"#f06567\" }}\r\n                              background=\"#8f0e10\"\r\n                              color=\"#ffffff\"\r\n                              className=\"Button\"\r\n                              leftIcon={MdClose}\r\n                              variant=\"solid\"\r\n                              borderStyle=\"none\"\r\n                              onClick={onClose}\r\n                            >\r\n                              Close\r\n                            </Button>\r\n                          </ModalFooter>\r\n                        </ModalContent>\r\n                      </Modal>\r\n                    </div>\r\n                  ) : (\r\n                    <div key={id}></div>\r\n                  )\r\n                )}\r\n              </div>\r\n              <div className=\"HomepageInstaIcon\">\r\n                <a\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  href=\"https://www.instagram.com/inginn.lpu/\"\r\n                >\r\n                  <IconButton style={style}>\r\n                    <AiFillInstagram />\r\n                  </IconButton>\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"HeroImage\">\r\n          <img src=\"/inginnv1/images/bulb.webp\" alt=\"Inginn\" />\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default Section1;\r\n","import React from 'react'\r\nimport '../style/HomepageSec2.css'\r\n\r\nfunction GlobalStatCard({statName, statValue, colorMode}) {\r\n    const BgColor = {  light: \"#ffffff\", dark: \"#1d1e1f\" };\r\n    const Color = { light: \"#1d1e1f\", dark: \"#ffffff\"};\r\n  var style={\r\n      backgroundColor: BgColor[colorMode],\r\n      color: Color[colorMode]\r\n  }\r\n    return (\r\n            <div style={style} className=\"card\">\r\n                <h3>{statName}</h3>\r\n                 <div className=\"cardValue\">\r\n                    <h4>{statValue+\"+\"}</h4>\r\n                 </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default GlobalStatCard\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"../style/HomepageSec2.css\";\r\n\r\n\r\nimport GlobalStatCard from \"./GlobalStatCard\";\r\n\r\nfunction HomepageSec2({ colorMode, lastEvents }) {\r\n  const [globalstats, setGlobalstats] = useState([]);\r\n\r\n  const Color = { light: \"#1d1e1f\", dark: \"#ffffff\" };\r\n  var style = {\r\n    color: Color[colorMode],\r\n  };\r\n\r\n  return (\r\n    <div className=\"HomepageSec2\">\r\n      <h3 style={style} className=\"DisplayPanelHeading\">\r\n        Analytics\r\n      </h3>\r\n      {lastEvents.length > 0 ? (\r\n        <div>\r\n          {lastEvents.map(({ id, lastEvent }) => (\r\n            <div>\r\n              <div className=\"\">\r\n                <div className=\"CoreMembersContainer\">\r\n                  <GlobalStatCard\r\n                    colorMode={colorMode}\r\n                    statName=\"PARTICIPANTS\"\r\n                    statValue={lastEvent.lastEventParticipants}\r\n                  />\r\n                  <GlobalStatCard\r\n                    colorMode={colorMode}\r\n                    statName=\"REACH\"\r\n                    statValue={lastEvent.lastEventReach}\r\n                  />\r\n                  <GlobalStatCard\r\n                    colorMode={colorMode}\r\n                    statName=\"ENGAGEMENT\"\r\n                    statValue={lastEvent.lastEventEngagement}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default HomepageSec2;","import { Avatar, IconButton } from \"@material-ui/core\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalBody,\r\n  ModalContent,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  ModalOverlay,\r\n} from \"@chakra-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { MdClose } from \"react-icons/md\";\r\nimport { FaInstagram, FaLinkedin } from \"react-icons/fa\";\r\nimport \"../style/CoreMembersCard.css\";\r\n\r\nfunction CoreMembersCard({ member, colorMode }) {\r\n  //console.log(\"Members name = \",member.imageUrl)\r\n  var image = member.imageUrl;\r\n  const [isDetailOpen, setIsDetailOpen] = useState(false);\r\n  const onDetailOpen = () => {\r\n    setIsDetailOpen(true);\r\n  };\r\n  const onDetailClose = () => {\r\n    setIsDetailOpen(false);\r\n  };\r\n\r\n  const NavbarBgColor = {  light: \"#ffffff\", dark: \"#1d1e1f\" };\r\n  const NavbarColor = { light: \"#1d1e1f\", dark: \"#ffffff\" };\r\n  var style = {\r\n    backgroundColor: NavbarBgColor[colorMode],\r\n    color: NavbarColor[colorMode],\r\n  };\r\n  var styleText = {\r\n    color: \"#ffffff\",\r\n  };\r\n  return (\r\n    <div style={style}  onClick={onDetailOpen} className=\"CoreMembersCard\">\r\n      <div className=\"CoreMemberCardContent\">\r\n        <Avatar variant=\"square\" alt={member.name} src={image} />\r\n        <div style={style} className=\"CoreMemberDetails\">\r\n          <h3>{member.name}</h3>\r\n          {member.customPosition != \"\" ? (\r\n            <h3>{member.customPosition}</h3>\r\n          ) : (\r\n            <h3>{member.department}</h3>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <Modal\r\n        initialFocusRef=\"none\"\r\n        isOpen={isDetailOpen}\r\n        onClose={onDetailClose}\r\n        isCentered\r\n      >\r\n        <ModalOverlay />\r\n        <ModalContent style={style}>\r\n          <ModalHeader>\r\n            <h3 className=\"ModalHeader\">{member.name}</h3>\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <div className=\"MemberInfo\">\r\n              <h3>{member.name}</h3>\r\n              <h3>{member.rno}</h3>\r\n              <h3>{member.email}</h3>\r\n              {member.customPosition !== \"\" ? (\r\n                <h3>{member.customPosition}</h3>\r\n              ) : (\r\n                <h3>{member.department}</h3>\r\n              )}\r\n              {member.dob !== \"\" ? <h3>DOB is {member.dob}</h3> : <div></div>}\r\n              <h3>{member.course}</h3>\r\n              <h3>{member.status}</h3>\r\n              {member.instaUrl !== \"\" ? (\r\n                <a\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  href={member.instaUrl}\r\n                >\r\n                  <IconButton style={style}>\r\n                    <FaInstagram />\r\n                  </IconButton>\r\n                </a>\r\n              ) : (\r\n                <div></div>\r\n              )}\r\n              {member.linkedinUrl !== \"\" ? (\r\n                <a\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  href={member.linkedinUrl}\r\n                >\r\n                  <IconButton style={style}>\r\n                    <FaLinkedin />\r\n                  </IconButton>\r\n                </a>\r\n              ) : (\r\n                <div></div>\r\n              )}\r\n            </div>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button\r\n              borderRadius=\"0\"\r\n              _hover={{ bg: \"#000\", color: \"#f06567\" }}\r\n              background=\"#8f0e10\"\r\n              color=\"#ffffff\"\r\n              className=\"Button\"\r\n              leftIcon={MdClose}\r\n              variant=\"solid\"\r\n              borderStyle=\"none\"\r\n              onClick={onDetailClose}\r\n            >\r\n              Close\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CoreMembersCard;\r\n","import {\r\n  Button,\r\n  Modal,\r\n  ModalBody,\r\n  ModalContent,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  ModalOverlay,\r\n} from \"@chakra-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { MdClose } from \"react-icons/md\";\r\n\r\nfunction HomepageMembersCard({ member, colorMode }) {\r\n  const [isDetailOpen, setIsDetailOpen] = useState(false);\r\n  const onDetailOpen = () => {\r\n    setIsDetailOpen(true);\r\n  };\r\n  const onDetailClose = () => {\r\n    setIsDetailOpen(false);\r\n  };\r\n  const NavbarBgColor = { light: \"#ffffff\", dark: \"#1d1e1f\" };\r\n  const NavbarColor = { light: \"#1d1e1f\", dark: \"#ffffff\" };\r\n  var style = {\r\n    backgroundColor: NavbarBgColor[colorMode],\r\n    color: NavbarColor[colorMode],\r\n  };\r\n  var styleText = {\r\n    color: NavbarColor[colorMode],\r\n  };\r\n  return (\r\n    <div style={styleText} onClick={onDetailOpen} className=\"MemberCard\">\r\n      <div className=\"MemberCardContent\">\r\n        <h3>{member.name}</h3>\r\n        <h3>{member.department}</h3>\r\n      </div>\r\n      <Modal isOpen={isDetailOpen} onClose={onDetailClose} isCentered>\r\n        <ModalOverlay />\r\n        <ModalContent style={style}>\r\n          <ModalHeader>\r\n            <h3 className=\"ModalHeader\">{member.name}</h3>\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <div className=\"MemberInfo\">\r\n              <h3>{member.name}</h3>\r\n              <h3>{member.rno}</h3>\r\n              <h3>{member.email}</h3>\r\n              {member.customPosition !== \"\" ? (\r\n                <h3>{member.customPosition}</h3>\r\n              ) : (\r\n                <h3>{member.department}</h3>\r\n              )}\r\n              {member.dob !== \"\" ? <h3>DOB is {member.dob}</h3> : <div></div>}\r\n              <h3>{member.course}</h3>\r\n              <h3>{member.status}</h3>\r\n            </div>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button\r\n              borderRadius=\"0\"\r\n              _hover={{ bg: \"#000\", color: \"#f06567\" }}\r\n              background=\"#8f0e10\"\r\n              color=\"#ffffff\"\r\n              className=\"Button\"\r\n              leftIcon={MdClose}\r\n              variant=\"solid\"\r\n              borderStyle=\"none\"\r\n              onClick={onDetailClose}\r\n            >\r\n              Close\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomepageMembersCard;\r\n","import React from \"react\";\r\nimport \"../style/HomepageSec3.css\";\r\nimport CoreMembersCard from \"../components/CoreMembersCard\";\r\nimport HomepageMembersCard from \"./HomepageMembersCard\";\r\n\r\nfunction Section3({ coreMembers, coordinators, members, colorMode }) {\r\n  const Color = { light: \"#1d1e1f\", dark: \"#ffffff\" };\r\n  var style = {\r\n    color: Color[colorMode],\r\n  };\r\n  return (\r\n    <div style={style} className=\"HomepageSec3\">\r\n      {coreMembers.length > 0 ? (\r\n        <div>\r\n          <h3 className=\"DisplayPanelHeading\">Core Members</h3>\r\n          <div className=\"CoreMembersContainer\">\r\n            {coreMembers.map(({ id, coremember }) => (\r\n              <CoreMembersCard\r\n                key={id}\r\n                colorMode={colorMode}\r\n                member={coremember}\r\n                colorMode={colorMode}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n      {coordinators.length > 0 ? (\r\n        <div>\r\n          <h3 className=\"DisplayPanelHeading\">Coordinators</h3>\r\n          <div className=\"CoreMembersContainer\">\r\n            {coordinators.map(({ id, coordinator }) => (\r\n              <CoreMembersCard\r\n                key={id}\r\n                colorMode={colorMode}\r\n                member={coordinator}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Section3;\r\n","import {\r\n  Button,\r\n  Modal,\r\n  ModalBody,\r\n  ModalContent,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  ModalOverlay,\r\n  useToast,\r\n} from \"@chakra-ui/core\";\r\nimport {\r\n  FormControl,\r\n  IconButton,\r\n  InputLabel,\r\n  makeStyles,\r\n  Select,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { MdClose, MdDelete, MdEdit, MdSend } from \"react-icons/md\";\r\nimport firebase from \"firebase\";\r\nimport { db } from \"../firebase\";\r\nimport \"../style/EventCard.css\";\r\n\r\nfunction EventCard({ eventId, event, colorMode, calledBy }) {\r\n //console.log(\"Event inside event card is \",event)\r\n  const toast = useToast();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const onOpen = () => {\r\n    setIsOpen(true);\r\n  };\r\n  const onClose = () => {\r\n    setIsOpen(false);\r\n  };\r\n\r\n  const [isDetailOpen, setIsDetailOpen] = useState(false);\r\n  const onDetailOpen = () => {\r\n    setIsDetailOpen(true);\r\n  };\r\n  const onDetailClose = () => {\r\n    setIsDetailOpen(false);\r\n  };\r\n\r\n  const successfullyUpdated = () => {\r\n    toast({\r\n      title: \"Event Successfully Updated\",\r\n      description: \"\",\r\n      status: \"success\",\r\n      duration: 3000,\r\n      isClosable: false,\r\n    });\r\n  };\r\n\r\n  const [eventName, setEventName] = useState(event.eventName || \"\");\r\n  const [eventPoster, setEventPoster] = useState(event.eventPoster || \"\");\r\n  const [eventPage, setEventPage] = useState(event.eventPage || \"\");\r\n  const [eventDescription, setEventDescription] = useState(\r\n    event.eventDescription || \"\"\r\n  );\r\n  const [eventDate, setEventDate] = useState(event.eventDate || \"\");\r\n  const [eventStatus, setEventStatus] = useState(\r\n    event.eventStatus || \"Planning\"\r\n  );\r\n  const [eventGuest, setEventGuest] = useState(event.eventGuest || \"\");\r\n  const [eventSponsors, setEventSponsors] = useState(event.eventSponsors || \"\");\r\n  const [eventParticipants, setEventParticipants] = useState(\r\n    event.eventParticipants || \"\"\r\n  );\r\n  const [eventOrganizerCertificate, setEventOrganizerCertificate] = useState(\r\n    event.eventOrganizerCertificate || \"\"\r\n  );\r\n  const [\r\n    eventParticipantCertificate,\r\n    setEventParticipantCertificate,\r\n  ] = useState(event.eventParticipantCertificate || \"\");\r\n  const [updatedBy, setUpdatedBy] = useState(localStorage.getItem(\"UserName\"));\r\n  const [eventUrl, setEventUrl] = useState(event.eventUrl || \"\");\r\n  var style;\r\n\r\n  if (event.eventStatus === \"Cancelled\") {\r\n    style = {\r\n      backgroundColor: \"#730a02\",\r\n      color: \"white\",\r\n    };\r\n  }\r\n  if (event.eventStatus === \"Postponed\") {\r\n    style = {\r\n      backgroundColor: \"#f79a68\",\r\n      color: \"#000000\",\r\n    };\r\n  }\r\n  if (event.eventStatus === \"Upcoming\") {\r\n    style = {\r\n      backgroundColor: \"#f2f261\",\r\n      color: \"#000000\",\r\n    };\r\n  }\r\n  if (event.eventStatus === \"Completed\") {\r\n    style = {\r\n      backgroundColor: \"#61f26b\",\r\n      color: \"#000000\",\r\n    };\r\n  }\r\n  var style2;\r\n  if (event.eventStatus !== \"Completed\" && calledBy == \"Home\") {\r\n    style = {\r\n      display: \"none\",\r\n    };\r\n  }\r\n  if (calledBy == \"Home\") {\r\n    style2 = {\r\n      display: \"none\",\r\n    };\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (eventName != \"\") {\r\n      db.collection(\"events\")\r\n        .doc(eventId)\r\n        .set(\r\n          {\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            eventName,\r\n            eventDescription,\r\n            eventDate,\r\n            eventStatus,\r\n            eventGuest,\r\n            eventSponsors,\r\n            eventParticipants,\r\n            eventOrganizerCertificate,\r\n            eventParticipantCertificate,\r\n            updatedBy,\r\n            eventUrl,\r\n            eventPoster,\r\n            eventPage\r\n          },\r\n          { merge: true }\r\n        )\r\n        .then(() => {\r\n          successfullyUpdated();\r\n        });\r\n    } else {\r\n      toast({\r\n        title: \"Event Name Missing\",\r\n        description: \"\",\r\n        status: \"error\",\r\n        duration: 3000,\r\n        isClosable: false,\r\n      });\r\n    }\r\n  };\r\n  const deleteEvent = (e) => {\r\n    db.collection(\"events\")\r\n      .doc(eventId)\r\n      .delete()\r\n      .then(function () {\r\n        var currentUser=localStorage.getItem(\"UserName\")\r\n        window.Email.send({\r\n          SecureToken : \"004ebacb-e2f1-4e69-afe3-9e02a33c6e25\",\r\n          To : ['ankitpathak143192@gmail.com','inginn.lpu@gmail.com'],\r\n          From : \"admin@inginn.tech\",\r\n          Subject : currentUser+\" Deleted an event\",\r\n          Body : \"The Event heading was \"+event.eventName\r\n        })\r\n        toast({\r\n          title: \"Event Successfully Deleted\",\r\n          description: \"\",\r\n          status: \"success\",\r\n          duration: 3000,\r\n          isClosable: false,\r\n        });\r\n      })\r\n      .catch(function (error) {\r\n        toast({\r\n          title: \"Unable to remove event\",\r\n          description: \"\",\r\n          status: \"error\",\r\n          duration: 3000,\r\n          isClosable: false,\r\n        });\r\n      });\r\n  };\r\n\r\n  const ButtonBgColor = { light: \"#1d1e1f\", dark: \"#ffffff\" };\r\n  const ButtonColor = { light: \"#ffffff\", dark: \"#1d1e1f\" };\r\n  const HoverButtonBgColor = { light: \"#ffffff\", dark: \"#1d1e1f\" };\r\n  const HoverButtonColor = { light: \"#1d1e1f\", dark: \"#ffffff\" };\r\n\r\n\r\n  const TextFieldBgColor = {  light: \"#e8e8e8\", dark: \"#383838\" };\r\n  const TextFieldColor = {light: \"#383838\", dark: \"#e8e8e8\" };\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      \"& label.Mui-focused\": {\r\n        color: TextFieldColor[colorMode],\r\n      },\r\n      \"& label\": {\r\n        color: TextFieldColor[colorMode],\r\n      },\r\n      \"& .MuiSelect-select:not([multiple]) option, .MuiSelect-select:not([multiple]) optgroup\":{\r\n          background:TextFieldBgColor[colorMode],\r\n      },\r\n      backgroundColor: TextFieldBgColor[colorMode],\r\n      color: TextFieldColor[colorMode],\r\n    },\r\n  });\r\n  const classes = useStyles();\r\n\r\n  const NavbarBgColor = { light: \"#ffffff\", dark: \"#1d1e1f\" };\r\n  const NavbarColor = { light: \"#1d1e1f\", dark: \"#ffffff\" };\r\n  var style3 = {\r\n    backgroundColor: NavbarBgColor[colorMode],\r\n    color: NavbarColor[colorMode],\r\n  };\r\n  var styleText = {\r\n    color: NavbarColor[colorMode],\r\n  };\r\n  var participationCertificateStyle\r\n  if(event.eventParticipantCertificate==\"\"|| event.eventParticipantCertificate==\"undefined\"){\r\n    participationCertificateStyle={\r\n      display: \"none\"\r\n    }\r\n  }\r\n  var participantsStyle\r\n  if(event.eventParticipants==\"\"){\r\n    participantsStyle={\r\n      display:\"none\"\r\n    }\r\n  }\r\n  else{\r\n    participantsStyle={\r\n      marginTop:\"10px\",\r\n      fontWeight:\"500\"\r\n    }\r\n  }\r\n  return (\r\n    <div style={style} className=\"EventCard\">\r\n      <div onClick={onDetailOpen} className=\"EventCardContent\">\r\n        <h3>{event.eventName}</h3>\r\n        <h3>{event.eventStatus}</h3>\r\n      </div>\r\n      {calledBy === \"Admin\" || calledBy === \"Editor\" ? (\r\n        <div className=\"ButtonContainer\">\r\n          <IconButton color=\"secondary\" onClick={deleteEvent}>\r\n            <MdDelete />\r\n          </IconButton>\r\n          <IconButton style={style3} onClick={onOpen}>\r\n            <MdEdit />\r\n          </IconButton>\r\n        </div>\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n      <Modal isOpen={isDetailOpen} onClose={onDetailClose} isCentered>\r\n        <ModalOverlay />\r\n        <ModalContent style={style3}>\r\n          <ModalHeader>\r\n            <h3 className=\"ModalHeader\">{event.eventName}</h3>\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <div className=\"MemberInfo\">\r\n              <h3>{event.eventDescription}</h3>\r\n              {event.eventStatus === \"Completed\" ? (\r\n                <div>\r\n                  <h3 style={participantsStyle}>Total Participants: {event.eventParticipants}</h3>\r\n                  <a\r\n                    style={participationCertificateStyle}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                    href={event.eventParticipantCertificate} > <h3>Participants Certificate</h3> </a>\r\n                  <a\r\n                    style={style2}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                    href={event.eventOrganizerCertificate} >  <h3>Organizer Certificate</h3>    </a>\r\n                  \r\n                </div>\r\n              ) : (\r\n                <h3></h3>\r\n              )}\r\n              {event.eventGuest == \"\" ? (\r\n                <div></div>\r\n              ) : (\r\n                <h3>{event.eventGuest}</h3>\r\n              )}\r\n            </div>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button\r\n              borderRadius=\"0\"\r\n              _hover={{ bg: \"#000\", color: \"#f06567\" }}\r\n              background=\"#8f0e10\"\r\n              color=\"#ffffff\"\r\n              className=\"Button\"\r\n              leftIcon={MdClose}\r\n              variant=\"solid\"\r\n              borderStyle=\"none\"\r\n              onClick={onDetailClose}\r\n            >\r\n              Close\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n\r\n      <Modal isOpen={isOpen} onClose={onClose} isCentered>\r\n        <ModalOverlay />\r\n        <form>\r\n          <ModalContent style={style3}>\r\n            <ModalHeader>\r\n              <h3 className=\"ModalHeader\">UPDATE EVENT</h3>\r\n            </ModalHeader>\r\n            <ModalBody>\r\n              <TextField\r\n                className={classes.root}\r\n                InputProps={{ className: classes.root }}\r\n                type=\"text\"\r\n                id=\"filled-basic\"\r\n                label=\"Event Name\"\r\n                value={eventName}\r\n                onChange={(e) => {\r\n                  setEventName(e.target.value);\r\n                }}\r\n                variant=\"filled\"\r\n                required\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                className={classes.root}\r\n                InputProps={{ className: classes.root }}\r\n                type=\"text\"\r\n                id=\"filled-basic\"\r\n                label=\"Description\"\r\n                value={eventDescription}\r\n                onChange={(e) => {\r\n                  setEventDescription(e.target.value);\r\n                }}\r\n                variant=\"filled\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                className={classes.root}\r\n                InputProps={{ className: classes.root }}\r\n                type=\"url\"\r\n                id=\"filled-basic\"\r\n                label=\"Form Link\"\r\n                value={eventUrl}\r\n                onChange={(e) => {\r\n                  setEventUrl(e.target.value);\r\n                }}\r\n                variant=\"filled\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                className={classes.root}\r\n                InputProps={{ className: classes.root }}\r\n                type=\"url\"\r\n                id=\"filled-basic\"\r\n                label=\"Poster Link\"\r\n                value={eventPoster}\r\n                onChange={(e) => {\r\n                  setEventPoster(e.target.value);\r\n                }}\r\n                variant=\"filled\"\r\n                fullWidth\r\n              />\r\n              <TextField \r\n                    className={classes.root}\r\n                    InputProps={{ className: classes.root  }}\r\n                        type=\"text\"\r\n                        id=\"filled-basic\" \r\n                        label=\"Event Page Link\" \r\n                        value={eventPage}\r\n                        onChange={(e)=>{setEventPage(e.target.value)}}\r\n                        variant=\"filled\"\r\n                        fullWidth />\r\n              <TextField\r\n                className={classes.root}\r\n                InputProps={{ className: classes.root }}\r\n                InputLabelProps={{ shrink: true }}\r\n                type=\"Date\"\r\n                id=\"filled-basic\"\r\n                label=\"Date\"\r\n                value={eventDate}\r\n                onChange={(e) => {\r\n                  setEventDate(e.target.value);\r\n                }}\r\n                variant=\"filled\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                className={classes.root}\r\n                InputProps={{ className: classes.root }}\r\n                type=\"text\"\r\n                id=\"filled-basic\"\r\n                label=\"Event Guest\"\r\n                value={eventGuest}\r\n                onChange={(e) => {\r\n                  setEventGuest(e.target.value);\r\n                }}\r\n                variant=\"filled\"\r\n                fullWidth\r\n              />\r\n              <FormControl className={classes.root} variant=\"filled\" fullWidth>\r\n                <InputLabel htmlFor=\"event-status\">Status</InputLabel>\r\n                <Select\r\n                  className={classes.root}\r\n                  InputProps={{ className: classes.root }}\r\n                  value={eventStatus}\r\n                  native\r\n                  onChange={(e) => {\r\n                    //console.log(\"status is \",status)\r\n                    setEventStatus(e.target.value);\r\n                  }}\r\n                  inputProps={{\r\n                    name: \"Status\",\r\n                    id: \"event-status\",\r\n                  }}\r\n                >\r\n                  <option value=\"Planning\">Planning</option>\r\n                  <option value=\"Postponed\">Postponed</option>\r\n                  <option value=\"Completed\">Completed</option>\r\n                  <option value=\"Cancelled\">Cancelled</option>\r\n                  <option value=\"Upcoming\">Upcoming</option>\r\n                </Select>\r\n              </FormControl>\r\n              <TextField\r\n                className={classes.root}\r\n                InputProps={{ className: classes.root }}\r\n                type=\"text\"\r\n                id=\"filled-basic\"\r\n                label=\"Sponsors\"\r\n                value={eventSponsors}\r\n                onChange={(e) => {\r\n                  setEventSponsors(e.target.value);\r\n                }}\r\n                variant=\"filled\"\r\n                fullWidth\r\n              />\r\n              {eventStatus === \"Completed\" ? (\r\n                <div>\r\n                  <TextField\r\n                    className={classes.root}\r\n                    InputProps={{ className: classes.root }}\r\n                    type=\"text\"\r\n                    id=\"filled-basic\"\r\n                    label=\"Participants\"\r\n                    value={eventParticipants}\r\n                    onChange={(e) => {\r\n                      setEventParticipants(e.target.value);\r\n                    }}\r\n                    variant=\"filled\"\r\n                    fullWidth\r\n                  />\r\n                  <TextField\r\n                    className={classes.root}\r\n                    InputProps={{ className: classes.root }}\r\n                    type=\"url\"\r\n                    id=\"filled-basic\"\r\n                    label=\"Participants certificate\"\r\n                    value={eventParticipantCertificate}\r\n                    onChange={(e) => {\r\n                      setEventParticipantCertificate(e.target.value);\r\n                    }}\r\n                    variant=\"filled\"\r\n                    fullWidth\r\n                  />\r\n                  <TextField\r\n                    className={classes.root}\r\n                    InputProps={{ className: classes.root }}\r\n                    type=\"url\"\r\n                    id=\"filled-basic\"\r\n                    label=\"Team certificate\"\r\n                    value={eventOrganizerCertificate}\r\n                    onChange={(e) => {\r\n                      setEventOrganizerCertificate(e.target.value);\r\n                    }}\r\n                    variant=\"filled\"\r\n                    fullWidth\r\n                  />\r\n                </div>\r\n              ) : (\r\n                <div></div>\r\n              )}\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <Button\r\n                borderRadius=\"0\"\r\n                className=\"Button\"\r\n                leftIcon={MdSend}\r\n                variant=\"solid\"\r\n                borderStyle=\"none\"\r\n                bg={ButtonBgColor[colorMode]}\r\n                color={ButtonColor[colorMode]}\r\n                _hover={{\r\n                  bg: HoverButtonBgColor[colorMode],\r\n                  color: HoverButtonColor[colorMode],\r\n                }}\r\n                onClick={handleSubmit}\r\n              >\r\n                SUBMIT\r\n              </Button>\r\n              <Button\r\n                borderRadius=\"0\"\r\n                _hover={{ bg: \"#000\", color: \"#f06567\" }}\r\n                background=\"#8f0e10\"\r\n                color=\"#ffffff\"\r\n                className=\"Button\"\r\n                leftIcon={MdClose}\r\n                variant=\"solid\"\r\n                borderStyle=\"none\"\r\n                onClick={onClose}\r\n              >\r\n                Close\r\n              </Button>\r\n            </ModalFooter>\r\n          </ModalContent>\r\n        </form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EventCard;\r\n","import React from \"react\";\r\nimport EventCard from \"./EventCard\";\r\n\r\nfunction Section4({ events, colorMode }) {\r\n  const NavbarBgColor = { light: \"#ffffff\", dark: \"#1d1e1f\" };\r\n  const NavbarColor = { light: \"#1d1e1f\", dark: \"#ffffff\" };\r\n  var style = {\r\n    backgroundColor: NavbarBgColor[colorMode],\r\n    color: NavbarColor[colorMode],\r\n  };\r\n  var styleText = {\r\n    color: NavbarColor[colorMode],\r\n  };\r\n  return (\r\n    <div>\r\n      {events.length > 0 ? (\r\n        <div>\r\n          <h3 style={styleText} className=\"DisplayPanelHeading\">\r\n            Events\r\n          </h3>\r\n          <div className=\"DisplayPanelCardContainer\">\r\n            {events.map(({ id, event }) => (\r\n              <EventCard\r\n                colorMode={colorMode}\r\n                key={id}\r\n                eventId={id}\r\n                event={event}\r\n                calledBy=\"Home\"\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Section4;\r\n","import React, { useState } from \"react\";\r\nimport \"../style/MyAccount.css\";\r\nimport firebase from \"firebase\";\r\nimport { db } from \"../firebase\";\r\nimport {\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  Button,\r\n  useToast,\r\n  Avatar,\r\n} from \"@chakra-ui/core\";\r\nimport {\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  TextField,\r\n  FormGroup,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  IconButton,\r\n  makeStyles, Backdrop, CircularProgress\r\n} from \"@material-ui/core\";\r\nimport { MdEdit, MdDelete, MdClose, MdSend } from \"react-icons/md\"; //material design Icon\r\n\r\nfunction AccountMembersCard({\r\n  memberId,\r\n  member,\r\n  coordinators,\r\n  calledBy,\r\n  colorMode,\r\n}) {\r\n  const toast = useToast();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const onOpen = () => {\r\n    setIsOpen(true);\r\n    setIsDetailOpen(false);\r\n  };\r\n  const onClose = () => {\r\n    setIsOpen(false);\r\n  };\r\n\r\n  const [backdropIsOpen, setBackdropIsOpen] = useState(false)\r\n\r\n  const [isDetailOpen, setIsDetailOpen] = useState(false);\r\n  const onDetailOpen = () => {\r\n    setIsDetailOpen(true);\r\n  };\r\n  const onDetailClose = () => {\r\n    setIsDetailOpen(false);\r\n  };\r\n\r\n  var style;\r\n\r\n  const [status, setStatus] = useState(member.status || \"\");\r\n  const [dob, setDob] = useState(member.dob || \"\");\r\n  const [oldRno, setOldRno] = useState(member.rno || \"\");\r\n  const [rno, setRno] = useState(member.rno || \"\");\r\n  const [name, setName] = useState(member.name || \"\");\r\n  const [email, setEmail] = useState(member.email || \"\");\r\n  const [password, setPassword] = useState(null);\r\n  const [course, setCourse] = useState(member.course || \"\");\r\n  const [contact, setContact] = useState(member.contact || \"\");\r\n  const [department, setDepartment] = useState(member.department || \"\");\r\n  //console.log(\"Department of \"+name+\" is \"+department)\r\n  const [myCoordinator, setMyCoordinator] = useState(\r\n    member.myCoordinator || \"None\"\r\n  );\r\n  const [admin, setAdmin] = useState(member.admin || false);\r\n  const [editor, setEditor] = useState(member.editor || false);\r\n  const [imageUrl, setImageUrl] = useState(member.imageUrl || \"\");\r\n  const [customPosition, setCustomPosition] = useState(member.customPosition || \"\");\r\n  const [editPass, setEditPass] = useState(false);\r\n  const [updatedBy, setUpdatedBy] = useState(localStorage.getItem(\"UserName\"));\r\n  const [instaUrl, setInstaUrl] = useState(member.instaUrl || \"\");\r\n  const [linkedinUrl, setLinkedinUrl] = useState(member.linkedinUrl || \"\");\r\n\r\n  function deleteMember() {\r\n    db.collection(\"members\")\r\n      .doc(memberId)\r\n      .delete()\r\n      .then(function () {\r\n        var currentUser= localStorage.getItem(\"UserName\")\r\n        var deletedUser= member.name\r\n        var deletedUserDepartment= member.department\r\n        var deletedUserRno= member.rno\r\n        var messageBody= currentUser + \" Deleted \" + deletedUser+\" His Registration number was \"+deletedUserRno+\" His Department was \"+deletedUserDepartment\r\n        window.Email.send({\r\n          SecureToken : \"004ebacb-e2f1-4e69-afe3-9e02a33c6e25\",\r\n          To : 'ankitpathak143192@gmail.com',\r\n          From : \"admin@inginn.tech\",\r\n          Subject : currentUser+\" Deleted \"+deletedUser,\r\n          Body : messageBody\r\n        })\r\n        toast({\r\n          title: \"Member Deleted Successfully\",\r\n          description: \"\",\r\n          status: \"success\",\r\n          duration: 3000,\r\n          isClosable: false,\r\n        });\r\n      })\r\n      .catch(function (error) {\r\n        toast({\r\n          title: \"Unable to delete Member\",\r\n          description: \"\",\r\n          status: \"error\",\r\n          duration: 3000,\r\n          isClosable: false,\r\n        });\r\n      });\r\n  }\r\n\r\n  const successfullyUpdated = () => {\r\n    toast({\r\n      title: \"Member Successfully Updated\",\r\n      description: \"\",\r\n      status: \"success\",\r\n      duration: 3000,\r\n      isClosable: false,\r\n    });\r\n  };\r\n\r\n  const updateMember = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (rno != \"\") {\r\n      setBackdropIsOpen(true)\r\n      if (oldRno === rno) {\r\n        if (password) {\r\n          toast({\r\n            title: \"Do not refresh or close\",\r\n            description: \"We are securing Your password. Sit Back and Relax\",\r\n            status: \"warning\",\r\n            duration: 3000,\r\n            isClosable: false,\r\n          });\r\n          fetch(\"https://inginnapi.herokuapp.com/hashpass\", {\r\n            method: \"post\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n              id: memberId,\r\n              password,\r\n            }),\r\n          })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n              if (data.token === \"100\") {\r\n                db.collection(\"members\")\r\n                  .doc(memberId)\r\n                  .set(\r\n                    {\r\n                      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                      email,\r\n                      rno,\r\n                      name,\r\n                      dob,\r\n                      course,\r\n                      contact,\r\n                      status,\r\n                      department,\r\n                      admin,\r\n                      editor,\r\n                      imageUrl,\r\n                      myCoordinator,\r\n                      customPosition,\r\n                      updatedBy,\r\n                      linkedinUrl,\r\n                      instaUrl,\r\n                    },\r\n                    { merge: true }\r\n                  )\r\n                  .then(() => {\r\n                    //console.log(\"Updated department to \",department)\r\n                    successfullyUpdated();\r\n                    setPassword(null);\r\n                  });\r\n              } else {\r\n                toast({\r\n                  title: \"Some Error Occurred\",\r\n                  description: \"\",\r\n                  status: \"error\",\r\n                  duration: 3000,\r\n                  isClosable: false,\r\n                });\r\n              }\r\n            });\r\n        } else {\r\n          db.collection(\"members\")\r\n            .doc(memberId)\r\n            .set(\r\n              {\r\n                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                email,\r\n                rno,\r\n                name,\r\n                dob,\r\n                course,\r\n                contact,\r\n                status,\r\n                department,\r\n                admin,\r\n                editor,\r\n                imageUrl,\r\n                myCoordinator,\r\n                customPosition,\r\n                linkedinUrl,\r\n                instaUrl,\r\n                updatedBy,\r\n              },\r\n              { merge: true }\r\n            )\r\n            .then(() => {\r\n              //console.log(\"Updated Department to \",department)\r\n              successfullyUpdated();\r\n            });\r\n        }\r\n      } else {\r\n        db.collection(\"members\")\r\n          .where(\"rno\", \"==\", rno)\r\n          .get()\r\n          .then(function (querySnapshot) {\r\n            if (querySnapshot.docs.length > 0) {\r\n              localStorage.setItem(\"rnoExists\", true);\r\n              setIsOpen(true);\r\n              toast({\r\n                title: \"Member already exist\",\r\n                description: \"\",\r\n                status: \"error\",\r\n                duration: 3000,\r\n                isClosable: false,\r\n              });\r\n            } else {\r\n              localStorage.setItem(\"rnoExists\", false);\r\n            }\r\n          })\r\n          .then(function () {\r\n            if (localStorage.getItem(\"rnoExists\") === \"false\") {\r\n              if (password) {\r\n                fetch(\"https://inginnapi.herokuapp.com/hashpass\", {\r\n                  method: \"post\",\r\n                  headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                  },\r\n                  body: JSON.stringify({\r\n                    id: memberId,\r\n                    password,\r\n                  }),\r\n                })\r\n                  .then((res) => res.json())\r\n                  .then((data) => {\r\n                    if (data.token === \"100\") {\r\n                      db.collection(\"members\")\r\n                        .doc(memberId)\r\n                        .set(\r\n                          {\r\n                            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                            email,\r\n                            rno,\r\n                            name,\r\n                            dob,\r\n                            course,\r\n                            contact,\r\n                            status,\r\n                            department,\r\n                            admin,\r\n                            editor,\r\n                            imageUrl,\r\n                            myCoordinator,\r\n                            customPosition,\r\n                            linkedinUrl,\r\n                            instaUrl,\r\n                            updatedBy,\r\n                          },\r\n                          { merge: true }\r\n                        )\r\n                        .then(() => {\r\n                          //console.log(\"Updated Department to \",department)\r\n                          successfullyUpdated();\r\n                        });\r\n                    } else {\r\n                      toast({\r\n                        title: \"Some Error Occurred\",\r\n                        description: \"\",\r\n                        status: \"error\",\r\n                        duration: 3000,\r\n                        isClosable: false,\r\n                      });\r\n                    }\r\n                  });\r\n              } else {\r\n                db.collection(\"members\")\r\n                  .doc(memberId)\r\n                  .set(\r\n                    {\r\n                      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                      email,\r\n                      rno,\r\n                      name,\r\n                      dob,\r\n                      course,\r\n                      contact,\r\n                      status,\r\n                      department,\r\n                      admin,\r\n                      editor,\r\n                      imageUrl,\r\n                      myCoordinator,\r\n                      customPosition,\r\n                      linkedinUrl,\r\n                      instaUrl,\r\n                      updatedBy,\r\n                    },\r\n                    { merge: true }\r\n                  )\r\n                  .then(() => {\r\n                    //console.log(\"Updated Department to \",department)\r\n                    successfullyUpdated()\r\n                  });\r\n              }\r\n            }\r\n          })\r\n      }\r\n      setBackdropIsOpen(false)\r\n    } else {\r\n      toast({\r\n        title: \"Registration Number Missing\",\r\n        description: \"\",\r\n        status: \"error\",\r\n        duration: 3000,\r\n        isClosable: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  function ChooseCoordinator({ coordinators }) {\r\n    return (\r\n      <div>\r\n        <FormControl className={classes.root} variant=\"filled\" fullWidth>\r\n          <InputLabel htmlFor=\"member-coordinator\">Coordinator</InputLabel>\r\n          <Select\r\n            className={classes.root}\r\n            InputProps={{ className: classes.root }}\r\n            native\r\n            value={myCoordinator}\r\n            onChange={(e) => setMyCoordinator(e.target.value)}\r\n            inputProps={{\r\n              name: \"coordinator\",\r\n              id: \"member-coordinator\",\r\n            }}\r\n          >\r\n            <option value=\"None\">None</option>\r\n            {coordinators.map((coordinators) => (\r\n              <option value={coordinators.coordinator.name}>\r\n                {coordinators.coordinator.name}\r\n              </option>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const ButtonBgColor = { light: \"#1d1e1f\", dark: \"#ffffff\" };\r\n  const ButtonColor = { light: \"#ffffff\", dark: \"#1d1e1f\" };\r\n  const HoverButtonBgColor = { light: \"#ffffff\", dark: \"#1d1e1f\" };\r\n  const HoverButtonColor = { light: \"#1d1e1f\", dark: \"#ffffff\" };\r\n\r\n  const TextFieldBgColor = {  light: \"#e8e8e8\", dark: \"#383838\" };\r\n  const TextFieldColor = {light: \"#383838\", dark: \"#e8e8e8\" };\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      \"& label.Mui-focused\": {\r\n        color: TextFieldColor[colorMode],\r\n      },\r\n      \"& label\": {\r\n        color: TextFieldColor[colorMode],\r\n      },\r\n      \"& .MuiSelect-select:not([multiple]) option, .MuiSelect-select:not([multiple]) optgroup\":{\r\n          background:TextFieldBgColor[colorMode],\r\n      },\r\n      backgroundColor: TextFieldBgColor[colorMode],\r\n      color: TextFieldColor[colorMode],\r\n    },\r\n  });\r\n  const classes = useStyles();\r\n\r\n  const NavbarBgColor = { light: \"#ffffff\", dark: \"#1d1e1f\" };\r\n  const NavbarColor = { light: \"#1d1e1f\", dark: \"#ffffff\" };\r\n  var style3 = {\r\n    backgroundColor: NavbarBgColor[colorMode],\r\n    color: NavbarColor[colorMode],\r\n  };\r\n  var styleText = {\r\n    color: NavbarColor[colorMode],\r\n  };\r\n\r\n  var style2;\r\n  if (member.rno === \"11900684\") {\r\n    style2 = {\r\n      display: \"none\",\r\n    };\r\n  }\r\n\r\n  if (status === \"Core\") {\r\n    style = {\r\n      background: \"#b2eced\",\r\n      color: \"#000000\",\r\n    };\r\n  }\r\n  if (status === \"Coordinator\") {\r\n    style = {\r\n      background: \"#14a5a8\",\r\n      color: \"#ffffff\",\r\n    };\r\n  }\r\n  if (status === \"Member\") {\r\n    style = {\r\n      background: \"#034b4d\",\r\n      color: \"#ffffff\",\r\n    };\r\n  }\r\n\r\n  return (\r\n    <div style={style} className=\"MemberCard\">\r\n      <Modal isOpen={isDetailOpen} onClose={onDetailClose} isCentered>\r\n        <ModalOverlay />\r\n        <ModalContent style={style3}>\r\n          <ModalHeader>\r\n            <h3 className=\"ModalHeader\">{member.name}</h3>\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <div className=\"MemberInfo\">\r\n              <h3>{member.name}</h3>\r\n              <h3>{member.rno}</h3>\r\n              <h3>{member.email}</h3>\r\n              {member.customPosition !== \"\" ? (\r\n                <h3>{member.customPosition}</h3>\r\n              ) : (\r\n                <h3>{member.department}</h3>\r\n              )}\r\n              {member.dob !== \"\" ? <h3>DOB is {member.dob}</h3> : <div></div>}\r\n              <h3>{member.course}</h3>\r\n              <h3>{member.status}</h3>\r\n            </div>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button\r\n              borderRadius=\"0\"\r\n              _hover={{ bg: \"#000\", color: \"#f06567\" }}\r\n              background=\"#8f0e10\"\r\n              color=\"#ffffff\"\r\n              className=\"Button\"\r\n              leftIcon={MdClose}\r\n              variant=\"solid\"\r\n              borderStyle=\"none\"\r\n              onClick={onDetailClose}\r\n            >\r\n              Close\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n      <div onClick={onDetailOpen} className=\"MemberCardContent\">\r\n        <Avatar alt=\"profile pic\" src={member.imageUrl} />\r\n        <h3>{member.name}</h3>\r\n        {member.customPosition !== \"\" ? (\r\n          <h3>{member.customPosition}</h3>\r\n        ) : (\r\n          <h3>{member.department}</h3>\r\n        )}\r\n      </div>\r\n      {calledBy === \"Admin\" || calledBy === \"Editor\" ? (\r\n        <div style={style2} className=\"ButtonContainer\">\r\n          <IconButton color=\"secondary\" onClick={deleteMember}>\r\n            <MdDelete />\r\n          </IconButton>\r\n          <IconButton style={style3} onClick={onOpen}>\r\n            <MdEdit />\r\n          </IconButton>\r\n        </div>\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n      <Modal isOpen={isOpen} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <form>\r\n          <ModalContent style={style3}>\r\n            <ModalHeader>\r\n              <h3 className=\"ModalHeader\">UPDATE MEMBER</h3>\r\n            </ModalHeader>\r\n            <ModalCloseButton />\r\n            <ModalBody>\r\n              <TextField\r\n                className={classes.root}\r\n                InputProps={{ className: classes.root }}\r\n                type=\"number\"\r\n                id=\"filled-basic\"\r\n                label=\"Registration Number\"\r\n                value={rno}\r\n                onChange={(e) => {\r\n                  setRno(e.target.value);\r\n                }}\r\n                variant=\"filled\"\r\n                required\r\n                fullWidth\r\n              />\r\n\r\n              <TextField\r\n                className={classes.root}\r\n                InputProps={{ className: classes.root }}\r\n                id=\"filled-basic\"\r\n                variant=\"filled\"\r\n                fullWidth\r\n                type=\"text\"\r\n                label=\"Name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              />\r\n\r\n              <TextField\r\n                className={classes.root}\r\n                InputProps={{ className: classes.root }}\r\n                id=\"filled-basic\"\r\n                variant=\"filled\"\r\n                fullWidth\r\n                type=\"email\"\r\n                label=\"E-Mail\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n              {editPass ? (\r\n                <TextField\r\n                  className={classes.root}\r\n                  InputProps={{ className: classes.root }}\r\n                  id=\"filled-basic\"\r\n                  variant=\"filled\"\r\n                  fullWidth\r\n                  type=\"text\"\r\n                  label=\"Password\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n              ) : (\r\n                <div></div>\r\n              )}\r\n              <TextField\r\n                className={classes.root}\r\n                InputProps={{ className: classes.root }}\r\n                type=\"number\"\r\n                id=\"filled-basic\"\r\n                label=\"Contact\"\r\n                value={contact}\r\n                onChange={(e) => setContact(e.target.value)}\r\n                variant=\"filled\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                className={classes.root}\r\n                InputProps={{ className: classes.root }}\r\n                type=\"text\"\r\n                id=\"filled-basic\"\r\n                label=\"Course\"\r\n                value={course}\r\n                onChange={(e) => setCourse(e.target.value)}\r\n                variant=\"filled\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                className={classes.root}\r\n                InputProps={{ className: classes.root }}\r\n                type=\"text\"\r\n                id=\"filled-basic\"\r\n                label=\"Custom Position\"\r\n                value={customPosition}\r\n                onChange={(e) => setCustomPosition(e.target.value)}\r\n                variant=\"filled\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                className={classes.root}\r\n                InputProps={{ className: classes.root }}\r\n                InputLabelProps={{ shrink: true }}\r\n                id=\"filled-basic\"\r\n                variant=\"filled\"\r\n                fullWidth\r\n                label=\"Date of birth\"\r\n                type=\"date\"\r\n                value={dob}\r\n                onChange={(e) => setDob(e.target.value)}\r\n              />\r\n              <FormControl className={classes.root} variant=\"filled\" fullWidth>\r\n                <InputLabel htmlFor=\"member-status\">Status</InputLabel>\r\n                <Select\r\n                  className={classes.root}\r\n                  InputProps={{ className: classes.root }}\r\n                  native\r\n                  value={status}\r\n                  onChange={(e) => setStatus(e.target.value)}\r\n                  inputProps={{\r\n                    name: \"Status\",\r\n                    id: \"member-status\",\r\n                  }}\r\n                >\r\n                  <option value=\"Member\">Member</option>\r\n                  <option value=\"Core\">Core</option>\r\n                  <option value=\"Coordinator\">Coordinator</option>\r\n                </Select>\r\n              </FormControl>\r\n              <FormControl className={classes.root} variant=\"filled\" fullWidth>\r\n                <InputLabel htmlFor=\"member-department\">Department</InputLabel>\r\n                <Select\r\n                  className={classes.root}\r\n                  InputProps={{ className: classes.root }}\r\n                  native\r\n                  value={department}\r\n                  onChange={(e) => setDepartment(e.target.value)}\r\n                  inputProps={{\r\n                    name: \"Department\",\r\n                    id: \"member-department\",\r\n                  }}\r\n                >\r\n                  <option value=\"None\">None</option>\r\n                  <option value=\"Operations\">Operations</option>\r\n                  <option value=\"Marketing\">Media and Marketing</option>\r\n                  <option value=\"HR\">Human Resource</option>\r\n                  <option value=\"PS\">Public Speaking</option>\r\n                  <option value=\"Sponsorship\">Sponsorship</option>\r\n                </Select>\r\n              </FormControl>\r\n              {status === \"Member\" ? (\r\n                <div>\r\n                  <ChooseCoordinator coordinators={coordinators} />\r\n                </div>\r\n              ) : (\r\n                <div></div>\r\n              )}\r\n\r\n              <TextField\r\n                className={classes.root}\r\n                InputProps={{ className: classes.root }}\r\n                id=\"filled-basic\"\r\n                variant=\"filled\"\r\n                fullWidth\r\n                type=\"url\"\r\n                label=\"imageUrl\"\r\n                value={imageUrl}\r\n                onChange={(e) => setImageUrl(e.target.value)}\r\n              />\r\n              <TextField\r\n                className={classes.root}\r\n                InputProps={{ className: classes.root }}\r\n                id=\"filled-basic\"\r\n                variant=\"filled\"\r\n                fullWidth\r\n                type=\"url\"\r\n                label=\"Instagram URL\"\r\n                value={instaUrl}\r\n                onChange={(e) => setInstaUrl(e.target.value)}\r\n              />\r\n              <TextField\r\n                className={classes.root}\r\n                InputProps={{ className: classes.root }}\r\n                id=\"filled-basic\"\r\n                variant=\"filled\"\r\n                fullWidth\r\n                type=\"url\"\r\n                label=\"LinkedIn URL\"\r\n                value={linkedinUrl}\r\n                onChange={(e) => setLinkedinUrl(e.target.value)}\r\n              />\r\n              {calledBy === \"Admin\" ? (\r\n                <div>\r\n                  <FormGroup row>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={editPass}\r\n                          onChange={(e) => setEditPass(!editPass)}\r\n                          name=\"Edit Password\"\r\n                        />\r\n                      }\r\n                      label=\"Edit Password?\"\r\n                    />\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={admin}\r\n                          onChange={(e) => setAdmin(!admin)}\r\n                          name=\"Admin\"\r\n                        />\r\n                      }\r\n                      label=\"Admin\"\r\n                    />\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={editor}\r\n                          onChange={(e) => setEditor(!editor)}\r\n                          name=\"Editor\"\r\n                        />\r\n                      }\r\n                      label=\"Editor\"\r\n                    />\r\n                  </FormGroup>\r\n                </div>\r\n              ) : (\r\n                <div></div>\r\n              )}\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <Button\r\n                borderRadius=\"0\"\r\n                className=\"Button\"\r\n                leftIcon={MdSend}\r\n                variant=\"solid\"\r\n                borderStyle=\"none\"\r\n                bg={ButtonBgColor[colorMode]}\r\n                color={ButtonColor[colorMode]}\r\n                _hover={{\r\n                  bg: HoverButtonBgColor[colorMode],\r\n                  color: HoverButtonColor[colorMode],\r\n                }}\r\n                onClick={updateMember}\r\n              >\r\n                UPDATE\r\n              </Button>\r\n              <Button\r\n                borderRadius=\"0\"\r\n                _hover={{ bg: \"#000\", color: \"#f06567\" }}\r\n                background=\"#8f0e10\"\r\n                color=\"#ffffff\"\r\n                className=\"Button\"\r\n                leftIcon={MdClose}\r\n                variant=\"solid\"\r\n                borderStyle=\"none\"\r\n                onClick={onClose}\r\n              >\r\n                Close\r\n              </Button>\r\n            </ModalFooter>\r\n          </ModalContent>\r\n        </form>\r\n      </Modal>\r\n      <Backdrop style={styleText} open={backdropIsOpen} >\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AccountMembersCard;\r\n","import { Button, Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay, useToast } from '@chakra-ui/core'\r\nimport { FormControl, InputLabel, makeStyles, Select, TextField } from '@material-ui/core';\r\nimport React, { useState } from 'react'\r\nimport { MdClose, MdNoteAdd, MdSend } from 'react-icons/md'\r\nimport firebase from \"firebase\"\r\nimport {db} from \"../firebase\"\r\n\r\nfunction Event({colorMode}) {\r\n    const toast = useToast();\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const onOpen=()=>{\r\n        setIsOpen(true)\r\n    }\r\n    const onClose=()=>{\r\n        setIsOpen(false)\r\n    }\r\n    \r\n  \r\n\r\n    const [eventName, setEventName] = useState('')\r\n    const [eventPage, setEventPage] = useState('')\r\n    const [eventPoster, setEventPoster] = useState('')\r\n    const [eventDescription, setEventDescription] = useState('')\r\n    const [eventDate, setEventDate] = useState('')\r\n    const [eventStatus, setEventStatus] = useState('Planning')\r\n    const [eventUrl, setEventUrl] = useState('')\r\n    const [eventGuest, setEventGuest] = useState('')\r\n    const [eventSponsors, setEventSponsors] = useState('')\r\n    const [eventParticipants, setEventParticipants] = useState('')\r\n    const [eventOrganizerCertificate, setEventOrganizerCertificate] = useState('')\r\n    const [eventParticipantCertificate, setEventParticipantCertificate] = useState('')\r\n    const [addedBy, setAddedBy]=useState(localStorage.getItem(\"UserName\"))\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault()\r\n        setIsOpen(true )\r\n        if(eventName!='' ){\r\n            db.collection(\"events\").add({\r\n                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                eventName,\r\n                eventDescription,\r\n                eventDate,\r\n                eventStatus,\r\n                eventGuest,\r\n                eventSponsors,\r\n                eventParticipants,\r\n                eventOrganizerCertificate,\r\n                eventParticipantCertificate,\r\n                addedBy,\r\n                eventUrl,\r\n                eventPoster,\r\n                eventPage\r\n            })\r\n            .then(()=>{\r\n                successfullyAdded()                                   \r\n            })\r\n        }\r\n        else{\r\n            toast({\r\n                title: \"Add Event Name\",\r\n                description: \"\",\r\n                status: \"error\",\r\n                duration: 3000,\r\n                isClosable: false,\r\n                })\r\n        }\r\n                   \r\n\r\n    }\r\n    \r\n    const successfullyAdded=()=>{\r\n        setEventDate('')\r\n        setEventDescription('')\r\n        setEventGuest('')\r\n        setEventName('')\r\n        setEventOrganizerCertificate('')\r\n        setEventParticipantCertificate('')\r\n        setEventParticipants('')\r\n        setEventSponsors('')\r\n        setEventStatus('Planning')\r\n        setEventUrl('')\r\n        setEventPoster('')\r\n        setEventPage('')\r\n        toast({\r\n        title: \"Event Successfully Added\",\r\n        description: \"\",\r\n        status: \"success\",\r\n        duration: 3000,\r\n        isClosable: false,\r\n        })\r\n    }\r\n   \r\n    const ButtonBgColor = { light: \"#1d1e1f\", dark: \"#ffffff\" };\r\n    const ButtonColor = { light: \"#ffffff\", dark: \"#1d1e1f\" };\r\n    const HoverButtonBgColor = { light: \"#ffffff\", dark: \"#1d1e1f\" };\r\n    const HoverButtonColor = { light: \"#1d1e1f\", dark: \"#ffffff\" };\r\n    \r\n\r\n    const TextFieldBgColor = {  light: \"#e8e8e8\", dark: \"#383838\" };\r\n    const TextFieldColor = {light: \"#383838\", dark: \"#e8e8e8\" };\r\n    const useStyles = makeStyles({\r\n      root: {\r\n        \"& label.Mui-focused\": {\r\n          color: TextFieldColor[colorMode],\r\n        },\r\n        \"& label\": {\r\n          color: TextFieldColor[colorMode],\r\n        },\r\n        \"& .MuiSelect-select:not([multiple]) option, .MuiSelect-select:not([multiple]) optgroup\":{\r\n            background:TextFieldBgColor[colorMode],\r\n        },\r\n        backgroundColor: TextFieldBgColor[colorMode],\r\n        color: TextFieldColor[colorMode],\r\n      },\r\n    });\r\n    const classes = useStyles();\r\n\r\n  const NavbarBgColor = {  light: \"#ffffff\", dark: \"#1d1e1f\" };\r\n    const NavbarColor = { light: \"#1d1e1f\", dark: \"#ffffff\"};\r\n    var style={\r\n        backgroundColor: NavbarBgColor[colorMode],\r\n        color: NavbarColor[colorMode]\r\n    }\r\n    var styleText={\r\n        color: NavbarColor[colorMode]\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n            bg={ButtonBgColor[colorMode]}\r\n            color={ButtonColor[colorMode]}\r\n            _hover={{ bg: HoverButtonBgColor[colorMode], \r\n            color: HoverButtonColor[colorMode] }}\r\n            borderRadius=\"0\" \r\n            className=\"Button\"\r\n            leftIcon={MdNoteAdd} \r\n            variant=\"solid\" \r\n            borderStyle=\"none\"\r\n            onClick={onOpen}>Add Event</Button>\r\n             <Modal isOpen={isOpen} onClose={onClose} isCentered>\r\n                    <ModalOverlay />\r\n                    <form>\r\n                    <ModalContent style={style}>\r\n                    <ModalHeader><h3 className=\"ModalHeader\">ADD EVENT</h3></ModalHeader>\r\n                    <ModalBody>\r\n                    <TextField \r\n                        className={classes.root}\r\n                        InputProps={{ className: classes.root  }}\r\n                        type=\"text\"\r\n                        id=\"filled-basic\" \r\n                        label=\"Event Name\" \r\n                        value={eventName}\r\n                        onChange={(e)=>{setEventName(e.target.value)}}\r\n                        variant=\"filled\" \r\n                        required \r\n                        fullWidth />\r\n                    <TextField \r\n                    className={classes.root}\r\n                    InputProps={{ className: classes.root  }}\r\n                        type=\"text\"\r\n                        id=\"filled-basic\" \r\n                        label=\"Description\" \r\n                        value={eventDescription}\r\n                        onChange={(e)=>{setEventDescription(e.target.value)}}\r\n                        variant=\"filled\"\r\n                        fullWidth />\r\n                    <TextField \r\n                    className={classes.root}\r\n                    InputProps={{ className: classes.root  }}\r\n                        type=\"url\"\r\n                        id=\"filled-basic\" \r\n                        label=\"Form Link\" \r\n                        value={eventUrl}\r\n                        onChange={(e)=>{setEventUrl(e.target.value)}}\r\n                        variant=\"filled\"\r\n                        fullWidth />\r\n                        <TextField \r\n                    className={classes.root}\r\n                    InputProps={{ className: classes.root  }}\r\n                        type=\"url\"\r\n                        id=\"filled-basic\" \r\n                        label=\"Poster Link\" \r\n                        value={eventPoster}\r\n                        onChange={(e)=>{setEventPoster(e.target.value)}}\r\n                        variant=\"filled\"\r\n                        fullWidth />\r\n                        <TextField \r\n                    className={classes.root}\r\n                    InputProps={{ className: classes.root  }}\r\n                        type=\"text\"\r\n                        id=\"filled-basic\" \r\n                        label=\"Event Page Link\" \r\n                        value={eventPage}\r\n                        onChange={(e)=>{setEventPage(e.target.value)}}\r\n                        variant=\"filled\"\r\n                        fullWidth />\r\n                    <TextField\r\n                    className={classes.root}\r\n                    InputProps={{ className: classes.root  }}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        type=\"Date\"\r\n                        id=\"filled-basic\" \r\n                        label=\"Date\" \r\n                        value={eventDate}\r\n                        onChange={(e)=>{setEventDate(e.target.value)}}\r\n                        variant=\"filled\"\r\n                        fullWidth />\r\n                    <TextField \r\n                    className={classes.root}\r\n                    InputProps={{ className: classes.root  }}\r\n                        type=\"text\"\r\n                        id=\"filled-basic\" \r\n                        label=\"Event Guest\" \r\n                        value={eventGuest}\r\n                        onChange={(e)=>{setEventGuest(e.target.value)}}\r\n                        variant=\"filled\" \r\n                        fullWidth />\r\n                    <FormControl variant=\"filled\" className={classes.root} fullWidth>\r\n                            <InputLabel className={classes.root} htmlFor=\"event-status\">Status</InputLabel>\r\n                            <Select\r\n                            className={classes.root}\r\n                            value={eventStatus}\r\n                            native\r\n                            onChange={(e)=>{\r\n                                //console.log(\"status is \",status)\r\n                                setEventStatus(e.target.value)}}\r\n                                inputProps={{\r\n                                    name: 'Status',\r\n                                    id: 'event-status',\r\n                                }}\r\n                            >\r\n                            <option className={classes.root} value=\"Planning\">Planning</option>\r\n                            <option className={classes.root} value=\"Upcoming\">Upcoming</option>\r\n                            <option className={classes.root} value=\"Postponed\">Postponed</option>\r\n                            <option className={classes.root} value=\"Completed\">Completed</option>\r\n                            <option className={classes.root} value=\"Cancelled\">Cancelled</option>\r\n                            </Select>\r\n                        </FormControl>\r\n                        <TextField\r\n                        className={classes.root}\r\n                        InputProps={{ className: classes.root  }}\r\n                        type=\"text\"\r\n                        id=\"filled-basic\" \r\n                        label=\"Sponsors\" \r\n                        value={eventSponsors}\r\n                        onChange={(e)=>{setEventSponsors(e.target.value)}}\r\n                        variant=\"filled\" \r\n                        fullWidth /> \r\n                        {\r\n                           eventStatus==\"Completed\"?(\r\n                            <div>\r\n                                <TextField\r\n                                className={classes.root}\r\n                                InputProps={{ className: classes.root  }}\r\n                                type=\"text\"\r\n                                id=\"filled-basic\" \r\n                                label=\"Participants\" \r\n                                value={eventParticipants}\r\n                                onChange={(e)=>{setEventParticipants(e.target.value)}}\r\n                                variant=\"filled\"\r\n                                fullWidth />\r\n                                <TextField\r\n                                className={classes.root}\r\n                                InputProps={{ className: classes.root  }}\r\n                                type=\"url\"\r\n                                id=\"filled-basic\" \r\n                                label=\"Participants certificate\" \r\n                                value={eventParticipantCertificate}\r\n                                onChange={(e)=>{setEventParticipantCertificate(e.target.value)}}\r\n                                variant=\"filled\"\r\n                                fullWidth />\r\n                                <TextField\r\n                                className={classes.root}\r\n                                InputProps={{ className: classes.root  }}\r\n                                type=\"url\"\r\n                                id=\"filled-basic\" \r\n                                label=\"Team certificate\" \r\n                                value={eventOrganizerCertificate}\r\n                                onChange={(e)=>{setEventOrganizerCertificate(e.target.value)}}\r\n                                variant=\"filled\"\r\n                                fullWidth />\r\n                            </div>\r\n\r\n                           ):(\r\n                               <div></div>\r\n                           )\r\n                        }                   \r\n                        \r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                    <Button \r\n                        borderRadius=\"0\" \r\n                        bg={ButtonBgColor[colorMode]}\r\n                        color={ButtonColor[colorMode]}\r\n                        _hover={{ bg: HoverButtonBgColor[colorMode], \r\n                        color: HoverButtonColor[colorMode] }}\r\n                        className=\"Button\" \r\n                        leftIcon={MdSend} \r\n                        variant=\"solid\" \r\n                        borderStyle=\"none\"\r\n                        onClick={handleSubmit}>SUBMIT</Button>\r\n                        <Button \r\n                            borderRadius=\"0\" \r\n                            _hover={{ bg: \"#000\", color:\"#f06567\" }}\r\n                            background=\"#8f0e10\" \r\n                            color=\"#ffffff\"\r\n                            className=\"Button\" \r\n                            leftIcon={MdClose} \r\n                            variant=\"solid\" \r\n                            borderStyle=\"none\"\r\n                            onClick={onClose}>Close</Button>\r\n                    </ModalFooter>\r\n                    </ModalContent>\r\n                    </form>\r\n                </Modal>\r\n                \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Event\r\n","import {\r\n  Button,\r\n  Modal,\r\n  ModalBody,\r\n  ModalContent,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  ModalOverlay,\r\n  useToast,\r\n} from \"@chakra-ui/core\";\r\nimport {\r\n  Checkbox,\r\n  FormControlLabel,\r\n  IconButton,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { MdClose, MdDelete, MdEdit, MdSend } from \"react-icons/md\";\r\nimport firebase from \"firebase\";\r\nimport { db } from \"../firebase\";\r\nimport \"../style/AnnouncementCard.css\";\r\n\r\nfunction AnnouncementCard({\r\n  announcementId,\r\n  announcement,\r\n  calledBy,\r\n  colorMode,\r\n}) {\r\n  const toast = useToast();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const onOpen = () => {\r\n    setIsOpen(true);\r\n  };\r\n  const onClose = () => {\r\n    setIsOpen(false);\r\n  };\r\n\r\n  const [isDetailOpen, setIsDetailOpen] = useState(false);\r\n  const onDetailOpen = () => {\r\n    setIsDetailOpen(true);\r\n  };\r\n  const onDetailClose = () => {\r\n    setIsDetailOpen(false);\r\n  };\r\n\r\n  var style;\r\n  if (announcement.newAnnouncement === true) {\r\n    style = {\r\n      backgroundColor: \"#d5f2f2\",\r\n    };\r\n  }\r\n  const [updatedBy, setUpdatedBy] = useState(localStorage.getItem(\"UserName\"));\r\n  const [newAnnouncement, setNewAnnouncement] = useState(\r\n    announcement.newAnnouncement || \"\"\r\n  );\r\n  const AnnouncementSuccessfullyUpdated = () => {\r\n    toast({\r\n      title: \"Announcement Successfully Updated\",\r\n      description: \"\",\r\n      status: \"success\",\r\n      duration: 3000,\r\n      isClosable: false,\r\n    });\r\n  };\r\n\r\n  const updateAnnouncement = (e) => {\r\n    e.preventDefault();\r\n\r\n    db.collection(\"announcements\")\r\n      .doc(announcementId)\r\n      .set(\r\n        {\r\n          timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n          newAnnouncement,\r\n          updatedBy,\r\n        },\r\n        { merge: true }\r\n      )\r\n      .then(() => {\r\n        AnnouncementSuccessfullyUpdated();\r\n      });\r\n  };\r\n\r\n  const deleteAnnouncement = (e) => {\r\n    db.collection(\"announcements\")\r\n      .doc(announcementId)\r\n      .delete()\r\n      .then(function () {\r\n        var currentUser=localStorage.getItem(\"UserName\")\r\n        window.Email.send({\r\n          SecureToken : \"004ebacb-e2f1-4e69-afe3-9e02a33c6e25\",\r\n          To : 'ankitpathak143192@gmail.com',\r\n          From : \"admin@inginn.tech\",\r\n          Subject : currentUser+\" Deleted an announcement\",\r\n          Body : \"The announcement heading was \"+announcement.heading\r\n        })\r\n        toast({\r\n          title: \"Announcement Successfully Deleted\",\r\n          description: \"\",\r\n          status: \"success\",\r\n          duration: 3000,\r\n          isClosable: false,\r\n        });\r\n      })\r\n      .catch(function (error) {\r\n        toast({\r\n          title: \"Unable to remove Announcement\",\r\n          description: \"\",\r\n          status: \"error\",\r\n          duration: 3000,\r\n          isClosable: false,\r\n        });\r\n      });\r\n  };\r\n\r\n  const ButtonBgColor = { light: \"#1d1e1f\", dark: \"#ffffff\" };\r\n  const ButtonColor = { light: \"#ffffff\", dark: \"#1d1e1f\" };\r\n  const HoverButtonBgColor = { light: \"#ffffff\", dark: \"#1d1e1f\" };\r\n  const HoverButtonColor = { light: \"#1d1e1f\", dark: \"#ffffff\" };\r\n\r\n\r\n  const TextFieldBgColor = {  light: \"#e8e8e8\", dark: \"#383838\" };\r\n  const TextFieldColor = {light: \"#383838\", dark: \"#e8e8e8\" };\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      \"& label.Mui-focused\": {\r\n        color: TextFieldColor[colorMode],\r\n      },\r\n      \"& label\": {\r\n        color: TextFieldColor[colorMode],\r\n      },\r\n      \"& .MuiSelect-select:not([multiple]) option, .MuiSelect-select:not([multiple]) optgroup\":{\r\n          background:TextFieldBgColor[colorMode],\r\n      },\r\n      backgroundColor: TextFieldBgColor[colorMode],\r\n      color: TextFieldColor[colorMode],\r\n    },\r\n  });\r\n  const classes = useStyles();\r\n\r\n  const NavbarBgColor = { light: \"#ffffff\", dark: \"#1d1e1f\" };\r\n  const NavbarColor = { light: \"#1d1e1f\", dark: \"#ffffff\" };\r\n  var style = {\r\n    backgroundColor: NavbarBgColor[colorMode],\r\n    color: NavbarColor[colorMode],\r\n  };\r\n  var styleText = {\r\n    color: NavbarColor[colorMode],\r\n  };\r\n\r\n  return (\r\n    <div style={style} className=\"AnnouncementCard\">\r\n      <div onClick={onDetailOpen} className=\"AnnouncementCardContent\">\r\n        {announcement.newAnnouncement === true ? (\r\n          <h3\r\n            style={{\r\n              height: \"100%\",\r\n              fontSize: \"1rem\",\r\n              padding: \"10px\",\r\n              marginRight: \"30px\",\r\n              background: \"#1f5903\",\r\n              color: \"#fff\",\r\n            }}\r\n          >\r\n            New\r\n          </h3>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n        <h3>{announcement.heading}</h3>\r\n      </div>\r\n      {calledBy === \"Admin\" || calledBy === \"Editor\" ? (\r\n        <div className=\"ButtonContainer\">\r\n          <IconButton color=\"secondary\" onClick={deleteAnnouncement}>\r\n            <MdDelete />\r\n          </IconButton>\r\n          {announcement.newAnnouncement === true ? (\r\n            <IconButton style={style} onClick={onOpen}>\r\n              <MdEdit />\r\n            </IconButton>\r\n          ) : (\r\n            <div></div>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n      <Modal isOpen={isDetailOpen} onClose={onDetailClose} >\r\n        <ModalOverlay />\r\n        <ModalContent style={style}>\r\n          <ModalHeader>\r\n            <h3 className=\"ModalHeader\">{announcement.heading}</h3>\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <div className=\"MemberInfo\">\r\n              <h3>{announcement.description} </h3>\r\n              {announcement.link !== \"\" ? (\r\n                <a\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  href={announcement.link}\r\n                >\r\n                  <h3>Attachment</h3>\r\n                </a>\r\n              ) : (\r\n                <h3></h3>\r\n              )}\r\n            </div>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button\r\n              borderRadius=\"0\"\r\n              _hover={{ bg: \"#000\", color: \"#f06567\" }}\r\n              background=\"#8f0e10\"\r\n              color=\"#ffffff\"\r\n              className=\"Button\"\r\n              leftIcon={MdClose}\r\n              variant=\"solid\"\r\n              borderStyle=\"none\"\r\n              onClick={onDetailClose}\r\n            >\r\n              Close\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n\r\n      <Modal isOpen={isOpen} onClose={onClose} isCentered>\r\n        <ModalOverlay />\r\n        <form>\r\n          <ModalContent style={style}>\r\n            <ModalHeader>\r\n              <h3 className=\"ModalHeader\">UPDATE ANNOUNCEMENT</h3>\r\n            </ModalHeader>\r\n            <ModalBody>\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={newAnnouncement}\r\n                    onChange={(e) => setNewAnnouncement(!newAnnouncement)}\r\n                    name=\"checkedA\"\r\n                  />\r\n                }\r\n                label=\"New Announcement\"\r\n              />\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <Button\r\n                borderRadius=\"0\"\r\n                bg={ButtonBgColor[colorMode]}\r\n                color={ButtonColor[colorMode]}\r\n                _hover={{\r\n                  bg: HoverButtonBgColor[colorMode],\r\n                  color: HoverButtonColor[colorMode],\r\n                }}\r\n                className=\"Button\"\r\n                leftIcon={MdSend}\r\n                variant=\"solid\"\r\n                borderStyle=\"none\"\r\n                onClick={updateAnnouncement}\r\n              >\r\n                UPDATE\r\n              </Button>\r\n              <Button\r\n                borderRadius=\"0\"\r\n                _hover={{ bg: \"#000\", color: \"#f06567\" }}\r\n                background=\"#8f0e10\"\r\n                color=\"#ffffff\"\r\n                className=\"Button\"\r\n                leftIcon={MdClose}\r\n                variant=\"solid\"\r\n                borderStyle=\"none\"\r\n                onClick={onClose}\r\n              >\r\n                Close\r\n              </Button>\r\n            </ModalFooter>\r\n          </ModalContent>\r\n        </form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AnnouncementCard;\r\n","import { Button, useToast } from \"@chakra-ui/core\";\r\nimport { makeStyles, TextField } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { MdSend } from \"react-icons/md\";\r\nimport \"../style/Announcements.css\";\r\n\r\nimport AnnouncementCard from \"./AnnouncementCard\";\r\nimport { db } from \"../firebase\";\r\nimport firebase from \"firebase\";\r\n\r\nfunction Announcements({ calledBy, colorMode, announcements, allMembers }) {\r\n  const toast = useToast();\r\n  const [addedBy, setAddedBy] = useState(localStorage.getItem(\"UserName\"));\r\n  const [heading, setHeading] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [link, setLink] = useState(\"\");\r\n  const [newAnnouncement, setNewAnnouncement] = useState(true);  \r\n  //const [emailList, setEmailList] = useState([])\r\n  var arr=[]\r\n  var i;\r\n  if(arr.length===0){\r\n    for(i=0;i<allMembers.length;i++)\r\n  {\r\n    if(allMembers[i].allmember.email!==\"\"){\r\n      var mail=allMembers[i].allmember.email\r\n      arr.push(mail)\r\n    }\r\n  }\r\n  }\r\n\r\n  \r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (heading !== \"\") {\r\n      db.collection(\"announcements\")\r\n        .add({\r\n          timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n          addedBy,\r\n          heading,\r\n          description,\r\n          link,\r\n          newAnnouncement,\r\n        })\r\n        .then(() => { \r\n          console.log(\"Final Email list is \",arr)\r\n          for(i=0;i<arr.length;i++){\r\n            window.Email.send({\r\n              SecureToken : \"004ebacb-e2f1-4e69-afe3-9e02a33c6e25\",\r\n              To : arr[i],\r\n              From : \"admin@inginn.tech\",\r\n              Subject : \"New Announcement: \"+heading,\r\n              Body : description\r\n            })\r\n          }  \r\n          successfullyAdded();\r\n        });\r\n    } else {\r\n      toast({\r\n        title: \"Fill The Heading\",\r\n        description: \"\",\r\n        status: \"error\",\r\n        duration: 3000,\r\n        isClosable: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  const successfullyAdded = () => {\r\n    setHeading(\"\");\r\n    setDescription(\"\");\r\n    setLink(\"\");\r\n    toast({\r\n      title: \"Announcement Successfully Added\",\r\n      description: \"\",\r\n      status: \"success\",\r\n      duration: 3000,\r\n      isClosable: false,\r\n    });\r\n  };\r\n\r\n  const ButtonBgColor = { light: \"#1d1e1f\", dark: \"#ffffff\" };\r\n  const ButtonColor = { light: \"#ffffff\", dark: \"#1d1e1f\" };\r\n  const HoverButtonBgColor = { light: \"#ffffff\", dark: \"#1d1e1f\" };\r\n  const HoverButtonColor = { light: \"#1d1e1f\", dark: \"#ffffff\" };\r\n\r\n  const TextFieldBgColor = {  light: \"#e8e8e8\", dark: \"#383838\" };\r\n  const TextFieldColor = {light: \"#383838\", dark: \"#e8e8e8\" };\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      \"& label.Mui-focused\": {\r\n        color: TextFieldColor[colorMode],\r\n      },\r\n      \"& label\": {\r\n        color: TextFieldColor[colorMode],\r\n      },\r\n      \"& .MuiSelect-select:not([multiple]) option, .MuiSelect-select:not([multiple]) optgroup\":{\r\n          background:TextFieldBgColor[colorMode],\r\n      },\r\n      backgroundColor: TextFieldBgColor[colorMode],\r\n      color: TextFieldColor[colorMode],\r\n    },\r\n  });\r\n  const classes = useStyles();\r\n\r\n  const NavbarBgColor = { light: \"#ffffff\", dark: \"#1d1e1f\" };\r\n  const NavbarColor = { light: \"#1d1e1f\", dark: \"#ffffff\" };\r\n  var style = {\r\n    backgroundColor: NavbarBgColor[colorMode],\r\n    color: NavbarColor[colorMode],\r\n  };\r\n  var styleText = {\r\n    color: NavbarColor[colorMode],\r\n  };\r\n\r\n  return (\r\n    <div className=\"Announcements\">\r\n      {calledBy === \"Admin\" || calledBy === \"Editor\" ? (\r\n        <div className=\"AddAnnouncement\">\r\n          <form>\r\n            <TextField\r\n              className={classes.root}\r\n              InputProps={{ className: classes.root }}\r\n              id=\"filled-basic\"\r\n              variant=\"filled\"\r\n              fullWidth\r\n              required\r\n              type=\"text\"\r\n              label=\"Heading\"\r\n              value={heading}\r\n              onChange={(e) => setHeading(e.target.value)}\r\n            />\r\n            <TextField\r\n              className={classes.root}\r\n              InputProps={{ className: classes.root }}\r\n              id=\"filled-basic\"\r\n              variant=\"filled\"\r\n              fullWidth\r\n              multiline\r\n              type=\"text\"\r\n              label=\"Description\"\r\n              value={description}\r\n              onChange={(e) => setDescription(e.target.value)}\r\n            />\r\n            <TextField\r\n              className={classes.root}\r\n              InputProps={{ className: classes.root }}\r\n              id=\"filled-basic\"\r\n              variant=\"filled\"\r\n              fullWidth\r\n              type=\"url\"\r\n              label=\"Link\"\r\n              value={link}\r\n              onChange={(e) => setLink(e.target.value)}\r\n            />\r\n            <Button\r\n              marginTop=\"10px\"\r\n              bg={ButtonBgColor[colorMode]}\r\n              color={ButtonColor[colorMode]}\r\n              _hover={{\r\n                bg: HoverButtonBgColor[colorMode],\r\n                color: HoverButtonColor[colorMode],\r\n              }}\r\n              borderRadius=\"0\"\r\n              className=\"Button\"\r\n              leftIcon={MdSend}\r\n              variant=\"solid\"\r\n              borderStyle=\"none\"\r\n              onClick={handleSubmit}\r\n            >\r\n              SUBMIT\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n      <div className=\"AnnouncementsContainer\">\r\n        {announcements.map(({ id, announcement }) => (\r\n          <AnnouncementCard\r\n            colorMode={colorMode}\r\n            key={id}\r\n            announcementId={id}\r\n            announcement={announcement}\r\n            calledBy={calledBy}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Announcements;\r\n","import {\r\n  Button,\r\n  Modal,\r\n  ModalBody,\r\n  ModalContent,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  ModalOverlay,\r\n  useToast,\r\n} from \"@chakra-ui/core\";\r\nimport {\r\n  FormControl,\r\n  IconButton,\r\n  InputLabel,\r\n  Select,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { MdClose, MdDelete}from \"react-icons/md\";\r\nimport firebase from \"firebase\";\r\nimport { db } from \"../firebase\";\r\nimport \"../style/Feedback.css\";\r\n\r\nfunction DisplayFeedback({ feedback, feedbackId ,calledBy, colorMode }) {\r\n  const toast = useToast();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const onOpen = () => {\r\n    setIsOpen(true);\r\n  };\r\n  const onClose = () => {\r\n    setIsOpen(false);\r\n  };\r\n  var style;\r\n  if (feedback.category === \"Suggestion\") {\r\n    style = {\r\n      background: \"#d5f2f2\",\r\n      color: \"#000\",\r\n    };\r\n  }\r\n  if (feedback.category === \"Complaint\") {\r\n    style = {\r\n      background: \"#f7a799\",\r\n      color: \"#000\",\r\n    };\r\n  }\r\n  if (feedback.category === \"EventSuggestion\") {\r\n    style = {\r\n      background: \"#9df797\",\r\n      color: \"#000\",\r\n    };\r\n  }\r\n  if (feedback.category === \"Feedback\") {\r\n    style = {\r\n      background: \"#fff\",\r\n      color: \"#000\",\r\n    };\r\n  }\r\n  const NavbarBgColor = { light: \"#ffffff\", dark: \"#1d1e1f\" };\r\n  const NavbarColor = { light: \"#1d1e1f\", dark: \"#ffffff\" };\r\n  var style3 = {\r\n    backgroundColor: NavbarBgColor[colorMode],\r\n    color: NavbarColor[colorMode],\r\n  };\r\n\r\n  const deleteFeedback = (e) => {\r\n    db.collection(\"feedbacks\")\r\n      .doc(feedbackId)\r\n      .delete()\r\n      .then(function () {\r\n        \r\n        toast({\r\n          title: \"Feedback Successfully Deleted\",\r\n          description: \"\",\r\n          status: \"success\",\r\n          duration: 3000,\r\n          isClosable: false,\r\n        });\r\n      })\r\n      .catch(function (error) {\r\n        toast({\r\n          title: \"Feedback to remove event\",\r\n          description: \"\",\r\n          status: \"error\",\r\n          duration: 3000,\r\n          isClosable: false,\r\n        });\r\n      });\r\n  };\r\n\r\n\r\n  return (\r\n    <div style={style} className=\"DisplayFeedback\">\r\n      <div onClick={onOpen} className=\"DisplayFeedbackContent\">\r\n        <h3>{feedback.category}</h3>\r\n        <h3>{feedback.description}</h3>\r\n      </div>\r\n      {calledBy === \"Admin\"  ? (\r\n        <div className=\"ButtonContainer\">\r\n          <IconButton color=\"secondary\" onClick={deleteFeedback}>\r\n            <MdDelete />\r\n          </IconButton>\r\n        </div>\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n      <Modal isOpen={isOpen} onClose={onClose} isCentered>\r\n        <ModalOverlay />\r\n        <ModalContent style={style3}>\r\n          <ModalHeader>\r\n            <h3 className=\"ModalHeader\">{feedback.category}</h3>\r\n          </ModalHeader>\r\n          <ModalBody className=\"MemberInfo\">{feedback.description}</ModalBody>\r\n          <ModalFooter>\r\n            <Button\r\n              borderRadius=\"0\"\r\n              _hover={{ bg: \"#000\", color: \"#f06567\" }}\r\n              background=\"#8f0e10\"\r\n              color=\"#ffffff\"\r\n              className=\"Button\"\r\n              leftIcon={MdClose}\r\n              variant=\"solid\"\r\n              borderStyle=\"none\"\r\n              onClick={onClose}\r\n            >\r\n              Close\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DisplayFeedback;\r\n","import React, { useState } from \"react\";\r\nimport \"../style/SearchResult.css\";\r\nimport firebase from \"firebase\";\r\nimport { db } from \"../firebase\";\r\nimport {\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  Button,\r\n  useToast,\r\n  Avatar,\r\n} from \"@chakra-ui/core\";\r\nimport {\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  TextField,\r\n  FormGroup,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  IconButton,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport { MdEdit, MdDelete, MdClose, MdSend } from \"react-icons/md\"; //material design Icon\r\n\r\nfunction SearchResult({\r\n  memberId,\r\n  member,\r\n  coordinators,\r\n  calledBy,\r\n  colorMode,\r\n  query\r\n}) {\r\n  console.log(\"Member is \", member)\r\n  const toast = useToast();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const onOpen = () => {\r\n    setIsOpen(true);\r\n    setIsDetailOpen(false);\r\n  };\r\n  const onClose = () => {\r\n    setIsOpen(false);\r\n  };\r\n\r\n  const [isDetailOpen, setIsDetailOpen] = useState(false);\r\n  const onDetailOpen = () => {\r\n    setIsDetailOpen(true);\r\n  };\r\n  const onDetailClose = () => {\r\n    setIsDetailOpen(false);\r\n  };\r\n\r\n  var style;\r\n\r\n  const [status, setStatus] = useState(member.status || \"\");\r\n  const [dob, setDob] = useState(member.dob || \"\");\r\n  const [oldRno, setOldRno] = useState(member.rno || \"\");\r\n  const [rno, setRno] = useState(member.rno || \"\");\r\n  const [name, setName] = useState(member.name || \"\");\r\n  const [email, setEmail] = useState(member.email || \"\");\r\n  const [password, setPassword] = useState(null);\r\n  const [course, setCourse] = useState(member.course || \"\");\r\n  const [contact, setContact] = useState(member.contact || \"\");\r\n  const [department, setDepartment] = useState(member.department || \"\");\r\n  const [myCoordinator, setMyCoordinator] = useState(\r\n    member.myCoordinator || \"None\"\r\n  );\r\n  const [admin, setAdmin] = useState(member.admin || false);\r\n  const [editor, setEditor] = useState(member.editor || false);\r\n  const [imageUrl, setImageUrl] = useState(member.imageUrl || \"\");\r\n  const [customPosition, setCustomPosition] = useState(\r\n    member.customPosition || \"\"\r\n  );\r\n  const [editPass, setEditPass] = useState(false);\r\n  const [updatedBy, setUpdatedBy] = useState(localStorage.getItem(\"UserName\"));\r\n  const [instaUrl, setInstaUrl] = useState(\"\");\r\n  const [linkedinUrl, setLinkedinUrl] = useState(\"\");\r\n\r\n  function deleteMember() {\r\n    db.collection(\"members\")\r\n      .doc(memberId)\r\n      .delete()\r\n      .then(function () {\r\n        toast({\r\n          title: \"Member Deleted Successfully\",\r\n          description: \"\",\r\n          status: \"success\",\r\n          duration: 3000,\r\n          isClosable: false,\r\n        });\r\n      })\r\n      .catch(function (error) {\r\n        toast({\r\n          title: \"Unable to delete Member\",\r\n          description: \"\",\r\n          status: \"error\",\r\n          duration: 3000,\r\n          isClosable: false,\r\n        });\r\n      });\r\n  }\r\n\r\n  const successfullyUpdated = () => {\r\n    toast({\r\n      title: \"Member Successfully Updated\",\r\n      description: \"\",\r\n      status: \"success\",\r\n      duration: 3000,\r\n      isClosable: false,\r\n    });\r\n  };\r\n\r\n  const updateMember = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (rno != \"\") {\r\n      if (oldRno === rno) {\r\n        if (password) {\r\n          toast({\r\n            title: \"Do not refresh or close\",\r\n            description: \"We are securing Your password. Sit Back and Relax\",\r\n            status: \"warning\",\r\n            duration: 3000,\r\n            isClosable: false,\r\n          });\r\n          fetch(\"https://inginnapi.herokuapp.com/hashpass\", {\r\n            method: \"post\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n              id: memberId,\r\n              password,\r\n            }),\r\n          })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n              if (data.token === \"100\") {\r\n                db.collection(\"members\")\r\n                  .doc(memberId)\r\n                  .set(\r\n                    {\r\n                      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                      email,\r\n                      rno,\r\n                      name,\r\n                      dob,\r\n                      course,\r\n                      contact,\r\n                      status,\r\n                      department,\r\n                      admin,\r\n                      editor,\r\n                      imageUrl,\r\n                      myCoordinator,\r\n                      customPosition,\r\n                      updatedBy,\r\n                      linkedinUrl,\r\n                      instaUrl,\r\n                    },\r\n                    { merge: true }\r\n                  )\r\n                  .then(() => {\r\n                    successfullyUpdated();\r\n                    setPassword(null);\r\n                  });\r\n              } else {\r\n                toast({\r\n                  title: \"Some Error Occurred\",\r\n                  description: \"\",\r\n                  status: \"error\",\r\n                  duration: 3000,\r\n                  isClosable: false,\r\n                });\r\n              }\r\n            });\r\n        } else {\r\n          db.collection(\"members\")\r\n            .doc(memberId)\r\n            .set(\r\n              {\r\n                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                email,\r\n                rno,\r\n                name,\r\n                dob,\r\n                course,\r\n                contact,\r\n                status,\r\n                department,\r\n                admin,\r\n                editor,\r\n                imageUrl,\r\n                myCoordinator,\r\n                customPosition,\r\n                linkedinUrl,\r\n                instaUrl,\r\n                updatedBy,\r\n              },\r\n              { merge: true }\r\n            )\r\n            .then(() => {\r\n              successfullyUpdated();\r\n            });\r\n        }\r\n      } else {\r\n        db.collection(\"members\")\r\n          .where(\"rno\", \"==\", rno)\r\n          .get()\r\n          .then(function (querySnapshot) {\r\n            if (querySnapshot.docs.length > 0) {\r\n              localStorage.setItem(\"rnoExists\", true);\r\n              setIsOpen(true);\r\n              toast({\r\n                title: \"Member already exist\",\r\n                description: \"\",\r\n                status: \"error\",\r\n                duration: 3000,\r\n                isClosable: false,\r\n              });\r\n            } else {\r\n              localStorage.setItem(\"rnoExists\", false);\r\n            }\r\n          })\r\n          .then(function () {\r\n            if (localStorage.getItem(\"rnoExists\") === \"false\") {\r\n              // //console.log(\"Update button clicked and data submitted and RNO not updated\")\r\n              if (password) {\r\n                //console.log(\"Going to call pass hash api\")\r\n                fetch(\"https://inginnapi.herokuapp.com/hashpass\", {\r\n                  method: \"post\",\r\n                  headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                  },\r\n                  body: JSON.stringify({\r\n                    id: memberId,\r\n                    password,\r\n                  }),\r\n                })\r\n                  .then((res) => res.json())\r\n                  .then((data) => {\r\n                    //console.log(data)\r\n                    if (data.token === \"100\") {\r\n                      db.collection(\"members\")\r\n                        .doc(memberId)\r\n                        .set(\r\n                          {\r\n                            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                            email,\r\n                            rno,\r\n                            name,\r\n                            dob,\r\n                            course,\r\n                            contact,\r\n                            status,\r\n                            department,\r\n                            admin,\r\n                            editor,\r\n                            imageUrl,\r\n                            myCoordinator,\r\n                            customPosition,\r\n                            linkedinUrl,\r\n                            instaUrl,\r\n                            updatedBy,\r\n                          },\r\n                          { merge: true }\r\n                        )\r\n                        .then(() => {\r\n                          successfullyUpdated();\r\n                        });\r\n                    } else {\r\n                      toast({\r\n                        title: \"Some Error Occurred\",\r\n                        description: \"\",\r\n                        status: \"error\",\r\n                        duration: 3000,\r\n                        isClosable: false,\r\n                      });\r\n                    }\r\n                  });\r\n              } else {\r\n                //console.log(\"Password not updated\")\r\n                db.collection(\"members\")\r\n                  .doc(memberId)\r\n                  .set(\r\n                    {\r\n                      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                      email,\r\n                      rno,\r\n                      name,\r\n                      dob,\r\n                      course,\r\n                      contact,\r\n                      status,\r\n                      department,\r\n                      admin,\r\n                      editor,\r\n                      imageUrl,\r\n                      myCoordinator,\r\n                      customPosition,\r\n                      linkedinUrl,\r\n                      instaUrl,\r\n                      updatedBy,\r\n                    },\r\n                    { merge: true }\r\n                  )\r\n                  .then(() => {\r\n                    successfullyUpdated();\r\n                  });\r\n              }\r\n            }\r\n          });\r\n      }\r\n    } else {\r\n      toast({\r\n        title: \"Registration Number Missing\",\r\n        description: \"\",\r\n        status: \"error\",\r\n        duration: 3000,\r\n        isClosable: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  function ChooseCoordinator({ coordinators }) {\r\n    //console.log(myCoordinator)\r\n    return (\r\n      <div>\r\n        <FormControl className={classes.root} variant=\"filled\" fullWidth>\r\n          <InputLabel htmlFor=\"member-coordinator\">Coordinator</InputLabel>\r\n          <Select\r\n            className={classes.root}\r\n            InputProps={{ className: classes.root }}\r\n            native\r\n            value={myCoordinator}\r\n            onChange={(e) => setMyCoordinator(e.target.value)}\r\n            inputProps={{\r\n              name: \"coordinator\",\r\n              id: \"member-coordinator\",\r\n            }}\r\n          >\r\n            <option value=\"None\">None</option>\r\n            {coordinators.map((coordinators) => (\r\n              <option value={coordinators.coordinator.name}>\r\n                {coordinators.coordinator.name}\r\n              </option>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const ButtonBgColor = { light: \"#1d1e1f\", dark: \"#ffffff\" };\r\n  const ButtonColor = { light: \"#ffffff\", dark: \"#1d1e1f\" };\r\n  const HoverButtonBgColor = { light: \"#ffffff\", dark: \"#1d1e1f\" };\r\n  const HoverButtonColor = { light: \"#1d1e1f\", dark: \"#ffffff\" };\r\n\r\n  \r\n  const TextFieldBgColor = {  light: \"#e8e8e8\", dark: \"#383838\" };\r\n  const TextFieldColor = {light: \"#383838\", dark: \"#e8e8e8\" };\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      \"& label.Mui-focused\": {\r\n        color: TextFieldColor[colorMode],\r\n      },\r\n      \"& label\": {\r\n        color: TextFieldColor[colorMode],\r\n      },\r\n      \"& .MuiSelect-select:not([multiple]) option, .MuiSelect-select:not([multiple]) optgroup\":{\r\n          background:TextFieldBgColor[colorMode],\r\n      },\r\n      backgroundColor: TextFieldBgColor[colorMode],\r\n      color: TextFieldColor[colorMode],\r\n    },\r\n  });\r\n  const classes = useStyles();\r\n\r\n  const NavbarBgColor = { light: \"#ffffff\", dark: \"#1d1e1f\" };\r\n  const NavbarColor = { light: \"#1d1e1f\", dark: \"#ffffff\" };\r\n  var style3 = {\r\n    backgroundColor: NavbarBgColor[colorMode],\r\n    color: NavbarColor[colorMode],\r\n  };\r\n  var styleText = {\r\n    color: NavbarColor[colorMode],\r\n  };\r\n\r\n  var style2;\r\n  if (member.rno === \"11900684\") {\r\n    style2 = {\r\n      display: \"none\",\r\n    };\r\n  }\r\n\r\n\r\n  var style4\r\n  var searchRno=member.rno;\r\n  var searchName=member.name;\r\n  var searchDepartment=member.department;\r\n  if(searchRno.includes(query)||searchName.includes(query)||searchDepartment.includes(query)){\r\n      style4={\r\n          display:\"flex\"\r\n      }\r\n  }\r\n  else{\r\n      style4={\r\n          display: \"none\"\r\n      }\r\n  }\r\n  return (\r\n    <div style={style4} className=\"SearchMemberCard\">\r\n      <Modal isOpen={isDetailOpen} onClose={onDetailClose} isCentered>\r\n        <ModalOverlay />\r\n        <ModalContent style={style3}>\r\n          <ModalHeader>\r\n            <h3 className=\"SearchModalHeader\">{member.name}</h3>\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <div className=\"SearchMemberInfo\">\r\n              <h3>{member.name}</h3>\r\n              <h3>{member.rno}</h3>\r\n              <h3>{member.email}</h3>\r\n              {member.customPosition !== \"\" ? (\r\n                <h3>{member.customPosition}</h3>\r\n              ) : (\r\n                <h3>{member.department}</h3>\r\n              )}\r\n              {member.dob !== \"\" ? <h3>DOB is {member.dob}</h3> : <div></div>}\r\n              <h3>{member.course}</h3>\r\n              <h3>{member.status}</h3>\r\n            </div>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button\r\n              borderRadius=\"0\"\r\n              _hover={{ bg: \"#000\", color: \"#f06567\" }}\r\n              background=\"#8f0e10\"\r\n              color=\"#ffffff\"\r\n              className=\"SearchButton\"\r\n              leftIcon={MdClose}\r\n              variant=\"solid\"\r\n              borderStyle=\"none\"\r\n              onClick={onDetailClose}\r\n            >\r\n              Close\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n      <div onClick={onDetailOpen} className=\"SearchMemberCardContent\">\r\n        <Avatar alt=\"profile pic\" src={member.imageUrl} />\r\n        <h3>{member.name}</h3>\r\n      </div>\r\n      {calledBy === \"Admin\" || calledBy === \"Editor\" ? (\r\n        <div style={style2} className=\"SearchButtonContainer\">\r\n          <IconButton color=\"secondary\" onClick={deleteMember}>\r\n            <MdDelete />\r\n          </IconButton>\r\n          <IconButton style={style3} onClick={onOpen}>\r\n            <MdEdit />\r\n          </IconButton>\r\n        </div>\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n      <Modal isOpen={isOpen} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <form>\r\n          <ModalContent style={style3}>\r\n            <ModalHeader>\r\n              <h3 className=\"SearchModalHeader\">UPDATE MEMBER</h3>\r\n            </ModalHeader>\r\n            <ModalCloseButton />\r\n            <ModalBody>\r\n              <TextField\r\n                className={classes.root}\r\n                InputProps={{ className: classes.root }}\r\n                type=\"number\"\r\n                id=\"filled-basic\"\r\n                label=\"Registration Number\"\r\n                value={rno}\r\n                onChange={(e) => {\r\n                  setRno(e.target.value);\r\n                }}\r\n                variant=\"filled\"\r\n                required\r\n                fullWidth\r\n              />\r\n\r\n              <TextField\r\n                className={classes.root}\r\n                InputProps={{ className: classes.root }}\r\n                id=\"filled-basic\"\r\n                variant=\"filled\"\r\n                fullWidth\r\n                type=\"text\"\r\n                label=\"Name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              />\r\n\r\n              <TextField\r\n                className={classes.root}\r\n                InputProps={{ className: classes.root }}\r\n                id=\"filled-basic\"\r\n                variant=\"filled\"\r\n                fullWidth\r\n                type=\"email\"\r\n                label=\"E-Mail\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n              {editPass ? (\r\n                <TextField\r\n                  className={classes.root}\r\n                  InputProps={{ className: classes.root }}\r\n                  id=\"filled-basic\"\r\n                  variant=\"filled\"\r\n                  fullWidth\r\n                  type=\"text\"\r\n                  label=\"Password\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n              ) : (\r\n                <div></div>\r\n              )}\r\n              <TextField\r\n                className={classes.root}\r\n                InputProps={{ className: classes.root }}\r\n                type=\"number\"\r\n                id=\"filled-basic\"\r\n                label=\"Contact\"\r\n                value={contact}\r\n                onChange={(e) => setContact(e.target.value)}\r\n                variant=\"filled\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                className={classes.root}\r\n                InputProps={{ className: classes.root }}\r\n                type=\"text\"\r\n                id=\"filled-basic\"\r\n                label=\"Course\"\r\n                value={course}\r\n                onChange={(e) => setCourse(e.target.value)}\r\n                variant=\"filled\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                className={classes.root}\r\n                InputProps={{ className: classes.root }}\r\n                type=\"text\"\r\n                id=\"filled-basic\"\r\n                label=\"Custom Position\"\r\n                value={customPosition}\r\n                onChange={(e) => setCustomPosition(e.target.value)}\r\n                variant=\"filled\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                className={classes.root}\r\n                InputProps={{ className: classes.root }}\r\n                InputLabelProps={{ shrink: true }}\r\n                id=\"filled-basic\"\r\n                variant=\"filled\"\r\n                fullWidth\r\n                label=\"Date of birth\"\r\n                type=\"date\"\r\n                value={dob}\r\n                onChange={(e) => setDob(e.target.value)}\r\n              />\r\n              <FormControl className={classes.root} variant=\"filled\" fullWidth>\r\n                <InputLabel htmlFor=\"member-status\">Status</InputLabel>\r\n                <Select\r\n                  className={classes.root}\r\n                  InputProps={{ className: classes.root }}\r\n                  native\r\n                  value={status}\r\n                  onChange={(e) => setStatus(e.target.value)}\r\n                  inputProps={{\r\n                    name: \"Status\",\r\n                    id: \"member-status\",\r\n                  }}\r\n                >\r\n                  <option value=\"Member\">Member</option>\r\n                  <option value=\"Core\">Core</option>\r\n                  <option value=\"Coordinator\">Coordinator</option>\r\n                </Select>\r\n              </FormControl>\r\n              <FormControl className={classes.root} variant=\"filled\" fullWidth>\r\n                <InputLabel htmlFor=\"member-department\">Department</InputLabel>\r\n                <Select\r\n                  className={classes.root}\r\n                  InputProps={{ className: classes.root }}\r\n                  native\r\n                  value={department}\r\n                  onChange={(e) => setDepartment(e.target.value)}\r\n                  inputProps={{\r\n                    name: \"Department\",\r\n                    id: \"member-department\",\r\n                  }}\r\n                >\r\n                  <option value=\"Operations\">Operations</option>\r\n                  <option value=\"Marketing\">Media and Marketing</option>\r\n                  <option value=\"HR\">Human Resource</option>\r\n                  <option value=\"PS\">Public Speaking</option>\r\n                  <option value=\"None\">None</option>\r\n                </Select>\r\n              </FormControl>\r\n              {status === \"Member\" ? (\r\n                <div>\r\n                  <ChooseCoordinator coordinators={coordinators} />\r\n                </div>\r\n              ) : (\r\n                <div></div>\r\n              )}\r\n\r\n              <TextField\r\n                className={classes.root}\r\n                InputProps={{ className: classes.root }}\r\n                id=\"filled-basic\"\r\n                variant=\"filled\"\r\n                fullWidth\r\n                type=\"url\"\r\n                label=\"imageUrl\"\r\n                value={imageUrl}\r\n                onChange={(e) => setImageUrl(e.target.value)}\r\n              />\r\n              <TextField\r\n                className={classes.root}\r\n                InputProps={{ className: classes.root }}\r\n                id=\"filled-basic\"\r\n                variant=\"filled\"\r\n                fullWidth\r\n                type=\"url\"\r\n                label=\"Instagram URL\"\r\n                value={instaUrl}\r\n                onChange={(e) => setInstaUrl(e.target.value)}\r\n              />\r\n              <TextField\r\n                className={classes.root}\r\n                InputProps={{ className: classes.root }}\r\n                id=\"filled-basic\"\r\n                variant=\"filled\"\r\n                fullWidth\r\n                type=\"url\"\r\n                label=\"LinkedIn URL\"\r\n                value={linkedinUrl}\r\n                onChange={(e) => setLinkedinUrl(e.target.value)}\r\n              />\r\n              {calledBy === \"Admin\" ? (\r\n                <div>\r\n                  <FormGroup row>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={editPass}\r\n                          onChange={(e) => setEditPass(!editPass)}\r\n                          name=\"Edit Password\"\r\n                        />\r\n                      }\r\n                      label=\"Edit Password?\"\r\n                    />\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={admin}\r\n                          onChange={(e) => setAdmin(!admin)}\r\n                          name=\"Admin\"\r\n                        />\r\n                      }\r\n                      label=\"Admin\"\r\n                    />\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={editor}\r\n                          onChange={(e) => setEditor(!editor)}\r\n                          name=\"Editor\"\r\n                        />\r\n                      }\r\n                      label=\"Editor\"\r\n                    />\r\n                  </FormGroup>\r\n                </div>\r\n              ) : (\r\n                <div></div>\r\n              )}\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <Button\r\n                borderRadius=\"0\"\r\n                className=\"SearchButton\"\r\n                leftIcon={MdSend}\r\n                variant=\"solid\"\r\n                borderStyle=\"none\"\r\n                bg={ButtonBgColor[colorMode]}\r\n                color={ButtonColor[colorMode]}\r\n                _hover={{\r\n                  bg: HoverButtonBgColor[colorMode],\r\n                  color: HoverButtonColor[colorMode],\r\n                }}\r\n                onClick={updateMember}\r\n              >\r\n                UPDATE\r\n              </Button>\r\n              <Button\r\n                borderRadius=\"0\"\r\n                _hover={{ bg: \"#000\", color: \"#f06567\" }}\r\n                background=\"#8f0e10\"\r\n                color=\"#ffffff\"\r\n                className=\"SearchButton\"\r\n                leftIcon={MdClose}\r\n                variant=\"solid\"\r\n                borderStyle=\"none\"\r\n                onClick={onClose}\r\n              >\r\n                Close\r\n              </Button>\r\n            </ModalFooter>\r\n          </ModalContent>\r\n        </form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchResult;\r\n","import { Input, makeStyles, TextField } from '@material-ui/core'\r\nimport React, { useState } from 'react'\r\nimport { MdSearch } from 'react-icons/md'\r\nimport \"../style/Search.css\"\r\nimport AccountMembersCard from './AccountMembersCard'\r\nimport SearchResult from './SearchResult'\r\n\r\nfunction Search({allMembers,colorMode, calledBy, coordinators}) {\r\n    \r\n    const ButtonBgColor = { light: \"#1d1e1f\", dark: \"#ffffff\" };\r\n    const ButtonColor = { light: \"#ffffff\", dark: \"#1d1e1f\" };\r\n    const HoverButtonBgColor = { light: \"#ffffff\", dark: \"#1d1e1f\" };\r\n    const HoverButtonColor = { light: \"#1d1e1f\", dark: \"#ffffff\" };\r\n\r\n   \r\n  const TextFieldBgColor = {  light: \"#e8e8e8\", dark: \"#383838\" };\r\n  const TextFieldColor = {light: \"#383838\", dark: \"#e8e8e8\" };\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      \"& label.Mui-focused\": {\r\n        color: TextFieldColor[colorMode],\r\n      },\r\n      \"& label\": {\r\n        color: TextFieldColor[colorMode],\r\n      },\r\n      \"& .MuiSelect-select:not([multiple]) option, .MuiSelect-select:not([multiple]) optgroup\":{\r\n          background:TextFieldBgColor[colorMode],\r\n      },\r\n      backgroundColor: TextFieldBgColor[colorMode],\r\n      color: TextFieldColor[colorMode],\r\n    },\r\n  });\r\n  const classes = useStyles();\r\n    const NavbarBgColor = {  light: \"#ffffff\", dark: \"#1d1e1f\" };\r\n    const NavbarColor = { light: \"#1d1e1f\", dark: \"#ffffff\"};\r\n    var style3={\r\n        backgroundColor: NavbarBgColor[colorMode],\r\n        color: NavbarColor[colorMode]\r\n    }\r\n    var styleText={\r\n        color: NavbarColor[colorMode]\r\n    }\r\n    const [input, setInput] = useState(\"\")\r\n    const [searching, setSearching] = useState(false)\r\n    //console.log(\"Searching is \",searching)\r\n    \r\n    return (\r\n        <div className=\"Search\">\r\n            <form>\r\n               <div className=\"SearchBar\">\r\n                   <div className=\"Icon\">\r\n                   <MdSearch style={styleText}/>\r\n                   </div>\r\n                   <Input className=\"SearchInput\"\r\n                   type=\"text\"\r\n                   value={input}\r\n                   className={classes.root}\r\n                   InputProps={{ className: classes.root  }}\r\n                   placeholder=\"Registeration Number/Name/Department\"\r\n                   fullWidth\r\n                   variant=\"standard\"\r\n                   onChange={(e)=>{\r\n                    setInput(e.target.value)\r\n                   }}\r\n                   label=\"Registration Number\"/>\r\n               </div>\r\n            </form>\r\n            <div className=\"SearchResult\">\r\n            {\r\n              (input!=\"\")?(\r\n                allMembers.map(({ id, allmember }) => (\r\n                    <SearchResult\r\n                        coordinators={coordinators}\r\n                        query={input}\r\n                        colorMode={colorMode}\r\n                        key={id}\r\n                        memberId={id}\r\n                        member={allmember}\r\n                        calledBy={calledBy} />\r\n                ))\r\n              ):(<div></div>)\r\n            }\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import React, { useState } from \"react\";\r\nimport \"../style/Feedback.css\";\r\n\r\nfunction MemberUnderMeCard({ allmember, colorMode }) {\r\n  var style;\r\n  if (allmember.myCoordinator !== localStorage.getItem(\"UserName\")) {\r\n    style = {\r\n      display: \"none\",\r\n    };\r\n  }\r\n  if (\r\n    allmember.department == localStorage.getItem(\"UserDepartment\") &&\r\n    localStorage.getItem(\"UserStatus\") == \"Core\"\r\n  ) {\r\n    style = {\r\n      display: \"block\",\r\n      backgroundColor: \"#fff\",\r\n      color: \"#000\",\r\n      padding: \"20px\",\r\n      boxShadow: \"5px 5px 20px rgba(0, 0, 0, 0.4)\"\r\n    };\r\n  }\r\n  return (\r\n    <div style={style} className=\"DisplayFeedback\">\r\n      <div className=\"DisplayFeedbackContent\">\r\n        <h3>{allmember.name}</h3>\r\n        {allmember.contact != \"\" ? (\r\n          <h3>Phone: {allmember.contact}</h3>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MemberUnderMeCard;\r\n","import React from \"react\";\r\nimport MemberUnderMeCard from \"./MemberUnderMeCard\";\r\n\r\nfunction MembersUnderMe({ allMembers, colorMode, calledBy }) {\r\n  var styleMember;\r\n  if (localStorage.getItem(\"UserStatus\") == \"Member\") {\r\n    styleMember = {\r\n      display: \"none\",\r\n    };\r\n  }\r\n  return (\r\n    <div style={styleMember}>\r\n      <h3 className=\"DisplayPanelHeading\">Members Under Me</h3>\r\n      <div className=\"DisplayPanelCardContainer\">\r\n        {allMembers.map(({ id, allmember }) => (\r\n          <MemberUnderMeCard\r\n            colorMode={colorMode}\r\n            key={id}\r\n            memberId={id}\r\n            allmember={allmember}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MembersUnderMe;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../style/MyAccount.css\";\r\nimport firebase from \"firebase\";\r\nimport { db } from \"../firebase\";\r\nimport {\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  Button,\r\n  useToast,\r\n  Avatar,\r\n} from \"@chakra-ui/core\";\r\nimport {\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  TextField,\r\n  FormGroup,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  makeStyles, Backdrop, CircularProgress\r\n} from \"@material-ui/core\";\r\nimport { MdPersonAdd, MdClose, MdSend } from \"react-icons/md\"; //material design Icon\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AccountMembersCard from \"./AccountMembersCard\";\r\nimport Event from \"./Event\";\r\nimport EventCard from \"./EventCard\";\r\nimport Announcements from \"./Announcements\";\r\nimport DisplayFeedback from \"./DisplayFeedback\";\r\nimport Search from \"./Search\"\r\nimport MembersUnderMe from \"./MembersUnderMe\";\r\n\r\nfunction Admin({\r\n  coordinators,\r\n  coreMembers,\r\n  members,\r\n  events,\r\n  announcements,\r\n  feedbacks,\r\n  lastEvents,\r\n  colorMode,\r\n  allMembers\r\n}) {\r\n  const toast = useToast();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const onOpen = () => {\r\n    setIsOpen(true);\r\n  };\r\n  const onClose = () => {\r\n    setIsOpen(false);\r\n  };\r\n\r\n  const [backdropIsOpen, setBackdropIsOpen] = useState(false)\r\n\r\n  const [isOpen2, setIsOpen2] = useState(false);\r\n  const onOpen2 = () => {\r\n    if (lastEvents.length > 0) {\r\n      setLastEventName(lastEvents[0].lastEvent.lastEventName);\r\n      setLastEventEngagement(lastEvents[0].lastEvent.lastEventEngagement);\r\n      setLastEventDescription(lastEvents[0].lastEvent.lastEventDescription);\r\n      setLastEventParticipants(lastEvents[0].lastEvent.lastEventParticipants);\r\n      setLastEventReach(lastEvents[0].lastEvent.lastEventReach);\r\n      setLastEventPic1(lastEvents[0].lastEvent.lastEventPic1);\r\n      setLastEventPic2(lastEvents[0].lastEvent.lastEventPic2);\r\n      setLastEventPic3(lastEvents[0].lastEvent.lastEventPic3);\r\n    }\r\n    setIsOpen2(true);\r\n  };\r\n  const onClose2 = () => {\r\n    setIsOpen2(false);\r\n  };\r\n\r\n  const [status, setStatus] = useState(\"Member\");\r\n  const [dob, setDob] = useState(\"\");\r\n  const [rno, setRno] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState();\r\n  const [course, setCourse] = useState(\"\");\r\n  const [contact, setContact] = useState(\"\");\r\n  const [department, setDepartment] = useState(\"None\");\r\n  //console.log(\"Default Department in Admin is \",department)\r\n  const [myCoordinator, setMyCoordinator] = useState(\"None\");\r\n  const [admin, setAdmin] = useState(false);\r\n  const [editor, setEditor] = useState(false);\r\n  const [imageUrl, setImageUrl] = useState(\"\");\r\n  const [instaUrl, setInstaUrl] = useState(\"\");\r\n  const [linkedinUrl, setLinkedinUrl] = useState(\"\");\r\n  const [customPosition, setCustomPosition] = useState(\"\");\r\n  const [addedBy, setAddedBy] = useState(localStorage.getItem(\"UserName\"));\r\n\r\n  const [lastEventName, setLastEventName] = useState(\"\");\r\n  const [lastEventDescription, setLastEventDescription] = useState(\"\");\r\n  const [lastEventParticipants, setLastEventParticipants] = useState(0);\r\n  const [lastEventReach, setLastEventReach] = useState(0);\r\n  const [lastEventPic1, setLastEventPic1] = useState(\"\");\r\n  const [lastEventPic2, setLastEventPic2] = useState(\"\");\r\n  const [lastEventPic3, setLastEventPic3] = useState(\"\");\r\n  const [lastEventEngagement, setLastEventEngagement] = useState(\"\");\r\n\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (!localStorage.getItem(\"User\")) {\r\n     // return history.push(\"/\");\r\n      return (window.location.href = \"/inginnv1/\");\r\n    } else {\r\n      \r\n      if (localStorage.getItem(\"UserAdmin\") !== \"true\") {\r\n       // return history.push(\"/\");\r\n        return (window.location.href = \"/inginnv1/\");\r\n      }\r\n    }\r\n  }, [history]);\r\n\r\n  const handleSubmitLastEvent = (e) => {\r\n    e.preventDefault();\r\n    setBackdropIsOpen(true)\r\n    db.collection(\"lastEvent\")\r\n      .doc(\"tOVwQrgGiOcNE2ObKED2\")\r\n      .set(\r\n        {\r\n          timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n          lastEventName,\r\n          lastEventDescription,\r\n          lastEventParticipants,\r\n          lastEventReach,\r\n          lastEventPic1,\r\n          lastEventPic2,\r\n          lastEventPic3,\r\n          lastEventEngagement,\r\n        },\r\n        { merge: true }\r\n      )\r\n      .then(() => {\r\n        setLastEventName(\"\");\r\n        setLastEventDescription(\"\");\r\n        setLastEventParticipants(0);\r\n        setLastEventReach(0);\r\n        setLastEventPic1(\"\");\r\n        setLastEventPic2(\"\");\r\n        setLastEventPic3(\"\");\r\n        setLastEventEngagement(\"\");\r\n        toast({\r\n          title: \"Successfully Updated last event\",\r\n          description: \"\",\r\n          status: \"success\",\r\n          duration: 3000,\r\n          isClosable: false,\r\n        });\r\n      });\r\n      setBackdropIsOpen(false)\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setBackdropIsOpen(true)\r\n    db.collection(\"members\")\r\n      .where(\"rno\", \"==\", rno)\r\n      .get()\r\n      .then(function (querySnapshot) {\r\n        if (querySnapshot.docs.length > 0) {\r\n          localStorage.setItem(\"userExists\", true);\r\n          setIsOpen(true);\r\n          toast({\r\n            title: \"Member already exist\",\r\n            description: \"\",\r\n            status: \"error\",\r\n            duration: 3000,\r\n            isClosable: false,\r\n          });\r\n        } else {\r\n          localStorage.setItem(\"userExists\", false);\r\n        }\r\n      })\r\n      .then(function () {\r\n        if (localStorage.getItem(\"userExists\") === \"false\") {\r\n          setIsOpen(true);\r\n          db.collection(\"members\")\r\n            .add({\r\n              timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n              email,\r\n              rno,\r\n              name,\r\n              dob,\r\n              password,\r\n              course,\r\n              contact,\r\n              status,\r\n              department,\r\n              admin,\r\n              editor,\r\n              imageUrl,\r\n              myCoordinator,\r\n              customPosition,\r\n              addedBy,\r\n              linkedinUrl,\r\n              instaUrl\r\n            })\r\n            .then(() => {\r\n              db.collection(\"members\")\r\n                .where(\"rno\", \"==\", rno)\r\n                .get()\r\n                .then(function (querySnapshot) {\r\n                  querySnapshot.forEach(function (doc) {\r\n                    successfullyAdded()\r\n                  });\r\n                });\r\n              toast({\r\n                title: \"Encrypting the password\",\r\n                description: \"Go and have some fun while we do that\",\r\n                status: \"warning\",\r\n                duration: 3000,\r\n                isClosable: false,\r\n              });\r\n            });\r\n        }\r\n      })\r\n      setBackdropIsOpen(false)\r\n  };\r\n\r\n  const successfullyAdded = () => {\r\n    setEmail(\"\");\r\n    setName(\"\");\r\n    setPassword(\"\");\r\n    setRno(\"\");\r\n    setDob(\"\");\r\n    setCourse(\"\");\r\n    setDepartment(\"None\");\r\n    setAdmin(false);\r\n    setEditor(false);\r\n    setContact(\"\");\r\n    setImageUrl(\"\");\r\n    setInstaUrl(\"\");\r\n    setLinkedinUrl(\"\");\r\n    setMyCoordinator(\"None\");\r\n    toast({\r\n      title: \"Member Successfully Added\",\r\n      description: \"\",\r\n      status: \"success\",\r\n      duration: 3000,\r\n      isClosable: false,\r\n    });\r\n  };\r\n\r\n  function ChooseCoordinator({ coordinators, feedbacks }) {\r\n    //setMyCoordinator(coordinators[0].coordinator.name);\r\n    return (\r\n      <div>\r\n        <FormControl className={classes.root} variant=\"filled\" fullWidth>\r\n          <InputLabel htmlFor=\"member-coordinator\">Coordinator</InputLabel>\r\n          <Select\r\n            className={classes.root}\r\n            InputProps={{ className: classes.root }}\r\n            native\r\n            value={myCoordinator}\r\n            onChange={(e) => setMyCoordinator(e.target.value)}\r\n            inputProps={{\r\n              name: \"coordinator\",\r\n              id: \"member-coordinator\",\r\n            }}\r\n          >\r\n            <option value=\"NONE\"> NONE </option>\r\n            {coordinators.map((coordinators) => (\r\n              <option value={coordinators.coordinator.name}>\r\n                {coordinators.coordinator.name}\r\n              </option>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const ButtonBgColor = { light: \"#1d1e1f\", dark: \"#ffffff\" };\r\n  const ButtonColor = { light: \"#ffffff\", dark: \"#1d1e1f\" };\r\n  const HoverButtonBgColor = { light: \"#ffffff\", dark: \"#1d1e1f\" };\r\n  const HoverButtonColor = { light: \"#1d1e1f\", dark: \"#ffffff\" };\r\n\r\n  const TextFieldBgColor = {  light: \"#e8e8e8\", dark: \"#383838\" };\r\n  const TextFieldColor = {light: \"#383838\", dark: \"#e8e8e8\" };\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      \"& label.Mui-focused\": {\r\n        color: TextFieldColor[colorMode],\r\n      },\r\n      \"& label\": {\r\n        color: TextFieldColor[colorMode],\r\n      },\r\n      \"& .MuiSelect-select:not([multiple]) option, .MuiSelect-select:not([multiple]) optgroup\":{\r\n          background:TextFieldBgColor[colorMode],\r\n      },\r\n      backgroundColor: TextFieldBgColor[colorMode],\r\n      color: TextFieldColor[colorMode],\r\n    },\r\n  });\r\n  const classes = useStyles();\r\n\r\n  const NavbarBgColor = { light: \"#ffffff\", dark: \"#1d1e1f\" };\r\n  const NavbarColor = { light: \"#1d1e1f\", dark: \"#ffffff\" };\r\n  var style = {\r\n    backgroundColor: NavbarBgColor[colorMode],\r\n    color: NavbarColor[colorMode],\r\n  };\r\n  var styleText = {\r\n    color: NavbarColor[colorMode],\r\n  };\r\n\r\n  return (\r\n    <div style={styleText} className=\"MyAccount\">\r\n      <Modal isOpen={isOpen} onClose={onClose} >\r\n        <ModalOverlay />\r\n        <form>\r\n          <ModalContent style={style}>\r\n            <ModalHeader>\r\n              <h3 className=\"ModalHeader\">ADD MEMBER</h3>\r\n            </ModalHeader>\r\n            <ModalBody>\r\n              <TextField\r\n                className={classes.root}\r\n                InputProps={{ className: classes.root }}\r\n                type=\"number\"\r\n                id=\"filled-basic\"\r\n                label=\"Registration Number\"\r\n                value={rno}\r\n                onChange={(e) => {\r\n                  setRno(e.target.value);\r\n                  setPassword(e.target.value + \"_inginn\");\r\n                }}\r\n                variant=\"filled\"\r\n                required\r\n                fullWidth\r\n              />\r\n\r\n              <TextField\r\n                className={classes.root}\r\n                InputProps={{ className: classes.root }}\r\n                id=\"filled-basic\"\r\n                variant=\"filled\"\r\n                fullWidth\r\n                required\r\n                type=\"text\"\r\n                label=\"Name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              />\r\n\r\n              <TextField\r\n                className={classes.root}\r\n                InputProps={{ className: classes.root }}\r\n                id=\"filled-basic\"\r\n                variant=\"filled\"\r\n                fullWidth\r\n                required\r\n                type=\"email\"\r\n                label=\"E-Mail\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n              <TextField\r\n                className={classes.root}\r\n                InputProps={{ className: classes.root }}\r\n                type=\"number\"\r\n                id=\"filled-basic\"\r\n                label=\"Contact\"\r\n                value={contact}\r\n                onChange={(e) => setContact(e.target.value)}\r\n                variant=\"filled\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                className={classes.root}\r\n                InputProps={{ className: classes.root }}\r\n                type=\"text\"\r\n                id=\"filled-basic\"\r\n                label=\"Course\"\r\n                value={course}\r\n                onChange={(e) => setCourse(e.target.value)}\r\n                variant=\"filled\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                className={classes.root}\r\n                InputProps={{ className: classes.root }}\r\n                type=\"text\"\r\n                id=\"filled-basic\"\r\n                label=\"Custom Position\"\r\n                value={customPosition}\r\n                onChange={(e) => setCustomPosition(e.target.value)}\r\n                variant=\"filled\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                className={classes.root}\r\n                InputProps={{ className: classes.root }}\r\n                InputLabelProps={{ shrink: true }}\r\n                id=\"filled-basic\"\r\n                variant=\"filled\"\r\n                fullWidth\r\n                required\r\n                label=\"Date of birth\"\r\n                type=\"date\"\r\n                value={dob}\r\n                onChange={(e) => setDob(e.target.value)}\r\n              />\r\n              <FormControl className={classes.root} variant=\"filled\" fullWidth>\r\n                <InputLabel htmlFor=\"member-status\">Status</InputLabel>\r\n                <Select\r\n                  className={classes.root}\r\n                  InputProps={{ className: classes.root }}\r\n                  value={status}\r\n                  native\r\n                  onChange={(e) => {\r\n                    setStatus(e.target.value);\r\n                  }}\r\n                >\r\n                  <option className={classes.root} value=\"Member\">\r\n                    Member\r\n                  </option>\r\n                  <option className={classes.root} value=\"Core\">\r\n                    Core\r\n                  </option>\r\n                  <option className={classes.root} value=\"Coordinator\">\r\n                    Coordinator\r\n                  </option>\r\n                </Select>\r\n              </FormControl>\r\n              <FormControl className={classes.root} variant=\"filled\" fullWidth>\r\n                <InputLabel htmlFor=\"member-department\">Department</InputLabel>\r\n                <Select\r\n                  className={classes.root}\r\n                  InputProps={{ className: classes.root }}\r\n                  native\r\n                  value={department}\r\n                  onChange={(e) => setDepartment(e.target.value)}\r\n                  inputProps={{\r\n                    name: \"Department\",\r\n                    id: \"member-department\",\r\n                  }}\r\n                >\r\n                  <option className={classes.root} value=\"None\">\r\n                    None\r\n                  </option>\r\n                  <option className={classes.root} value=\"Operations\">\r\n                    Operations\r\n                  </option>\r\n                  <option className={classes.root} value=\"Marketing\">\r\n                    Media and Marketing\r\n                  </option>\r\n                  <option className={classes.root} value=\"HR\">\r\n                    Human Resource\r\n                  </option>\r\n                  <option className={classes.root} value=\"PS\">\r\n                    Public Speaking\r\n                  </option>\r\n                  <option className={classes.root} value=\"Sponsorship\">\r\n                    Sponsorship\r\n                  </option>\r\n                </Select>\r\n              </FormControl>\r\n              {status === \"Member\" ? (\r\n                <div>\r\n                  <ChooseCoordinator coordinators={coordinators} />\r\n                </div>\r\n              ) : (\r\n                <div></div>\r\n              )}\r\n              <FormGroup row>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      checked={admin}\r\n                      onChange={(e) => setAdmin(!admin)}\r\n                      name=\"Admin\"\r\n                    />\r\n                  }\r\n                  label=\"Admin\"\r\n                />\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      checked={editor}\r\n                      onChange={(e) => setEditor(!editor)}\r\n                      name=\"Editor\"\r\n                    />\r\n                  }\r\n                  label=\"Editor\"\r\n                />\r\n              </FormGroup>\r\n              <TextField\r\n                className={classes.root}\r\n                InputProps={{ className: classes.root }}\r\n                id=\"filled-basic\"\r\n                variant=\"filled\"\r\n                fullWidth\r\n                type=\"url\"\r\n                label=\"imageUrl\"\r\n                value={imageUrl}\r\n                onChange={(e) => setImageUrl(e.target.value)}\r\n              />\r\n              <TextField\r\n                className={classes.root}\r\n                InputProps={{ className: classes.root }}\r\n                id=\"filled-basic\"\r\n                variant=\"filled\"\r\n                fullWidth\r\n                required\r\n                type=\"url\"\r\n                label=\"Instagram URL\"\r\n                value={instaUrl}\r\n                onChange={(e) => setInstaUrl(e.target.value)}\r\n              />\r\n              <TextField\r\n                className={classes.root}\r\n                InputProps={{ className: classes.root }}\r\n                id=\"filled-basic\"\r\n                variant=\"filled\"\r\n                fullWidth\r\n                required\r\n                type=\"url\"\r\n                label=\"LinkedIn URL\"\r\n                value={linkedinUrl}\r\n                onChange={(e) => setLinkedinUrl(e.target.value)}\r\n              />\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <Button\r\n                borderRadius=\"0\"\r\n                className=\"Button\"\r\n                leftIcon={MdSend}\r\n                variant=\"solid\"\r\n                borderStyle=\"none\"\r\n                bg={ButtonBgColor[colorMode]}\r\n                color={ButtonColor[colorMode]}\r\n                _hover={{\r\n                  bg: HoverButtonBgColor[colorMode],\r\n                  color: HoverButtonColor[colorMode],\r\n                }}\r\n                onClick={handleSubmit}\r\n              >\r\n                SUBMIT\r\n              </Button>\r\n              <Button\r\n                borderRadius=\"0\"\r\n                _hover={{ bg: \"#000\", color: \"#f06567\" }}\r\n                background=\"#8f0e10\"\r\n                color=\"#ffffff\"\r\n                className=\"Button\"\r\n                leftIcon={MdClose}\r\n                variant=\"solid\"\r\n                borderStyle=\"none\"\r\n                onClick={onClose}\r\n              >\r\n                Close\r\n              </Button>\r\n            </ModalFooter>\r\n          </ModalContent>\r\n        </form>\r\n      </Modal>\r\n      <Modal isOpen={isOpen2} onClose={onClose2}>\r\n        <ModalOverlay />\r\n        <form>\r\n          <ModalContent style={style}>\r\n            <ModalHeader>\r\n              <h3 className=\"ModalHeader\">Add Last Event</h3>\r\n            </ModalHeader>\r\n            <ModalBody>\r\n              <TextField\r\n                className={classes.root}\r\n                InputProps={{ className: classes.root }}\r\n                type=\"text\"\r\n                id=\"filled-basic\"\r\n                label=\"Last Event Name\"\r\n                value={lastEventName}\r\n                onChange={(e) => {\r\n                  setLastEventName(e.target.value);\r\n                }}\r\n                variant=\"filled\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                className={classes.root}\r\n                InputProps={{ className: classes.root }}\r\n                type=\"text\"\r\n                id=\"filled-basic\"\r\n                label=\"Last Event Description\"\r\n                multiline\r\n                value={lastEventDescription}\r\n                onChange={(e) => {\r\n                  setLastEventDescription(e.target.value);\r\n                }}\r\n                variant=\"filled\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                className={classes.root}\r\n                InputProps={{ className: classes.root }}\r\n                type=\"number\"\r\n                id=\"filled-basic\"\r\n                label=\"Participants\"\r\n                value={lastEventParticipants}\r\n                onChange={(e) => {\r\n                  setLastEventParticipants(e.target.value);\r\n                }}\r\n                variant=\"filled\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                className={classes.root}\r\n                InputProps={{ className: classes.root }}\r\n                type=\"number\"\r\n                id=\"filled-basic\"\r\n                label=\"Reach\"\r\n                value={lastEventReach}\r\n                onChange={(e) => {\r\n                  setLastEventReach(e.target.value);\r\n                }}\r\n                variant=\"filled\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                className={classes.root}\r\n                InputProps={{ className: classes.root }}\r\n                type=\"number\"\r\n                id=\"filled-basic\"\r\n                label=\"Engagement\"\r\n                value={lastEventEngagement}\r\n                onChange={(e) => {\r\n                  setLastEventEngagement(e.target.value);\r\n                }}\r\n                variant=\"filled\"\r\n                fullWidth\r\n              />\r\n\r\n              <TextField\r\n                className={classes.root}\r\n                InputProps={{ className: classes.root }}\r\n                id=\"filled-basic\"\r\n                variant=\"filled\"\r\n                fullWidth\r\n                type=\"url\"\r\n                label=\"Image 1\"\r\n                value={lastEventPic1}\r\n                onChange={(e) => setLastEventPic1(e.target.value)}\r\n              />\r\n              <TextField\r\n                className={classes.root}\r\n                InputProps={{ className: classes.root }}\r\n                id=\"filled-basic\"\r\n                variant=\"filled\"\r\n                fullWidth\r\n                required\r\n                type=\"url\"\r\n                label=\"Image 2\"\r\n                value={lastEventPic2}\r\n                onChange={(e) => setLastEventPic2(e.target.value)}\r\n              />\r\n              <TextField\r\n                className={classes.root}\r\n                InputProps={{ className: classes.root }}\r\n                id=\"filled-basic\"\r\n                variant=\"filled\"\r\n                fullWidth\r\n                required\r\n                type=\"url\"\r\n                label=\"Image 3\"\r\n                value={lastEventPic3}\r\n                onChange={(e) => setLastEventPic3(e.target.value)}\r\n              />\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <Button\r\n                borderRadius=\"0\"\r\n                className=\"Button\"\r\n                leftIcon={MdSend}\r\n                variant=\"solid\"\r\n                borderStyle=\"none\"\r\n                bg={ButtonBgColor[colorMode]}\r\n                color={ButtonColor[colorMode]}\r\n                _hover={{\r\n                  bg: HoverButtonBgColor[colorMode],\r\n                  color: HoverButtonColor[colorMode],\r\n                }}\r\n                onClick={handleSubmitLastEvent}\r\n              >\r\n                SUBMIT\r\n              </Button>\r\n              <Button\r\n                borderRadius=\"0\"\r\n                _hover={{ bg: \"#000\", color: \"#f06567\" }}\r\n                background=\"#8f0e10\"\r\n                color=\"#ffffff\"\r\n                className=\"Button\"\r\n                leftIcon={MdClose}\r\n                variant=\"solid\"\r\n                borderStyle=\"none\"\r\n                onClick={onClose2}\r\n              >\r\n                Close\r\n              </Button>\r\n            </ModalFooter>\r\n          </ModalContent>\r\n        </form>\r\n      </Modal>\r\n\r\n      <div className=\"VerticalPanel\">\r\n        <div className=\"ProfilePic\">\r\n          <Avatar\r\n            size=\"2xl\"\r\n            alt=\"Profile Pic\"\r\n            src={localStorage.getItem(\"UserImage\")}\r\n          />\r\n        </div>\r\n        <div className=\"VerticalPanelContent\">\r\n          <h3>{localStorage.getItem(\"UserName\")}</h3>\r\n          <h3>{localStorage.getItem(\"UserEmail\")}</h3>\r\n          <h3>{localStorage.getItem(\"UserRno\")}</h3>\r\n          <h3>{localStorage.getItem(\"UserStatus\")}</h3>\r\n          {localStorage.getItem(\"UserCustomPosition\") != \"\" ? (\r\n            <h3>{localStorage.getItem(\"UserCustomPosition\")}</h3>\r\n          ) : (\r\n            <h3>{localStorage.getItem(\"UserDepartment\")}</h3>\r\n          )}\r\n          <div className=\"ActionButton\">\r\n            <Button\r\n              bg={ButtonBgColor[colorMode]}\r\n              color={ButtonColor[colorMode]}\r\n              _hover={{\r\n                bg: HoverButtonBgColor[colorMode],\r\n                color: HoverButtonColor[colorMode],\r\n              }}\r\n              borderRadius=\"0\"\r\n              className=\"Button\"\r\n              variant=\"solid\"\r\n              borderStyle=\"none\"\r\n              onClick={onOpen2}\r\n            >\r\n              Update Last Event\r\n            </Button>\r\n          </div>\r\n          <div className=\"ActionButton\">\r\n            <Button\r\n              bg={ButtonBgColor[colorMode]}\r\n              color={ButtonColor[colorMode]}\r\n              _hover={{\r\n                bg: HoverButtonBgColor[colorMode],\r\n                color: HoverButtonColor[colorMode],\r\n              }}\r\n              borderRadius=\"0\"\r\n              className=\"Button\"\r\n              leftIcon={MdPersonAdd}\r\n              variant=\"solid\"\r\n              borderStyle=\"none\"\r\n              onClick={onOpen}\r\n            >\r\n              Add Member\r\n            </Button>\r\n          </div>\r\n          <div className=\"ActionButton\">\r\n            <Event colorMode={colorMode} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"DisplayPanel\">\r\n        <h3 className=\"DisplayPanelHeading\">Announcements</h3>\r\n        <div className=\"DisplayPanelCardContainer\">\r\n          <Announcements\r\n            colorMode={colorMode}\r\n            announcements={announcements}\r\n            calledBy=\"Admin\"\r\n            allMembers={allMembers}\r\n          />\r\n        </div>\r\n        <Search coordinators={coordinators} colorMode={colorMode} calledBy=\"Admin\" allMembers={allMembers} />\r\n        {coreMembers.length > 0 ? (\r\n          <div>\r\n            <h3 className=\"DisplayPanelHeading\">Core Members</h3>\r\n            <div className=\"DisplayPanelCardContainer\">\r\n              {coreMembers.map(({ id, coremember }) => (\r\n                <AccountMembersCard\r\n                  colorMode={colorMode}\r\n                  key={id}\r\n                  memberId={id}\r\n                  member={coremember}\r\n                  coordinators={coordinators}\r\n                  calledBy=\"Admin\"\r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n        {coordinators.length > 0 ? (\r\n          <div>\r\n            <h3 className=\"DisplayPanelHeading\">Coordinators</h3>\r\n            <div className=\"DisplayPanelCardContainer\">\r\n              {coordinators.map(({ id, coordinator }) => (\r\n                <AccountMembersCard\r\n                  colorMode={colorMode}\r\n                  key={id}\r\n                  memberId={id}\r\n                  member={coordinator}\r\n                  coordinators={coordinators}\r\n                  calledBy=\"Admin\"\r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n        <MembersUnderMe colorMode={colorMode} allMembers={allMembers} />\r\n        {members.length > 0 ? (\r\n          <div>\r\n            <h3 className=\"DisplayPanelHeading\">All Members</h3>\r\n            <div className=\"DisplayPanelCardContainer\">\r\n              {members.map(({ id, member }) => (\r\n                <AccountMembersCard\r\n                  colorMode={colorMode}\r\n                  key={id}\r\n                  memberId={id}\r\n                  member={member}\r\n                  coordinators={coordinators}\r\n                  calledBy=\"Admin\"\r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n        {(events.length > 0) ? (\r\n          <div>\r\n            <h3 className=\"DisplayPanelHeading\">Events</h3>\r\n            <div className=\"DisplayPanelCardContainer\">\r\n              {events.map(({ id, event }) => (\r\n                <EventCard\r\n                  colorMode={colorMode}\r\n                  key={id}\r\n                  eventId={id}\r\n                  event={event}\r\n                  calledBy=\"Admin\"\r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n        {feedbacks.length > 0 ? (\r\n          <div>\r\n            <h3 className=\"DisplayPanelHeading\">Feedbacks</h3>\r\n            <div className=\"DisplayPanelCardContainer\">\r\n              {feedbacks.map(({ id, feedback }) => (\r\n                <DisplayFeedback\r\n                  colorMode={colorMode}\r\n                  key={id}\r\n                  feedbackId={id}\r\n                  feedback={feedback}\r\n                  calledBy=\"Admin\"\r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n        \r\n      </div>\r\n      <Backdrop style={styleText} open={backdropIsOpen} >\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Admin;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../style/MyAccount.css\";\r\nimport firebase from \"firebase\";\r\nimport { db } from \"../firebase\";\r\nimport {\r\n    Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalHeader,\r\n    ModalFooter,\r\n    ModalBody,\r\n    Button,\r\n    useToast\r\n} from \"@chakra-ui/core\";\r\nimport \"../style/Feedback.css\"\r\nimport {\r\n    FormControl,\r\n    InputLabel,\r\n    makeStyles,\r\n    Select,\r\n    TextField\r\n} from \"@material-ui/core\";\r\nimport { MdPersonAdd, MdClose, MdSend, MdLock, MdFeedback} from \"react-icons/md\"; //material design Icon\r\n\r\nfunction Feedback({colorMode}) {\r\n    const toast = useToast();\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const onOpen = () => {\r\n        setIsOpen(true);\r\n    };\r\n    const onClose = () => {\r\n        setIsOpen(false);\r\n    };\r\n    const [description, setDescription] = useState(\"\");\r\n    const [category, setCategory] = useState(\"Feedback\")\r\n    const [addedBy, setAddedBy] = useState(localStorage.getItem(\"UserName\"))\r\n\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault()\r\n        \r\n        if(description!==\"\"){\r\n            db.collection(\"feedbacks\").add({\r\n                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                description,\r\n                category,\r\n                addedBy\r\n            })\r\n            .then(()=>{\r\n                window.Email.send({\r\n                    SecureToken : \"004ebacb-e2f1-4e69-afe3-9e02a33c6e25\",\r\n                    To : ['ankitpathak143192@gmail.com','inginn.lpu@gmail.com'],\r\n                    From : \"admin@inginn.tech\",\r\n                    Subject : category+\" Added By \"+ addedBy,\r\n                    Body : description\r\n                  })\r\n                  .then(\r\n                    successfullyAdded()\r\n                  )\r\n                                                   \r\n            })\r\n        }\r\n        else{\r\n            toast({\r\n                title: \"Feedback Adding Failed\",\r\n                description: \"\",\r\n                status: \"error\",\r\n                duration: 3000,\r\n                isClosable: false,\r\n            });\r\n        }\r\n\r\n        \r\n\r\n    }\r\n\r\n    const successfullyAdded = () => {\r\n        toast({\r\n            title: \"Feedback Successfully Added\",\r\n            description: \"\",\r\n            status: \"success\",\r\n            duration: 3000,\r\n            isClosable: false,\r\n        });\r\n    };\r\n\r\n    const ButtonBgColor = { light: \"#1d1e1f\", dark: \"#ffffff\" };\r\n    const ButtonColor = { light: \"#ffffff\", dark: \"#1d1e1f\" };\r\n    const HoverButtonBgColor = { light: \"#ffffff\", dark: \"#1d1e1f\" };\r\n    const HoverButtonColor = { light: \"#1d1e1f\", dark: \"#ffffff\" };\r\n\r\n   \r\n  const TextFieldBgColor = {  light: \"#e8e8e8\", dark: \"#383838\" };\r\n  const TextFieldColor = {light: \"#383838\", dark: \"#e8e8e8\" };\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      \"& label.Mui-focused\": {\r\n        color: TextFieldColor[colorMode],\r\n      },\r\n      \"& label\": {\r\n        color: TextFieldColor[colorMode],\r\n      },\r\n      \"& .MuiSelect-select:not([multiple]) option, .MuiSelect-select:not([multiple]) optgroup\":{\r\n          background:TextFieldBgColor[colorMode],\r\n      },\r\n      backgroundColor: TextFieldBgColor[colorMode],\r\n      color: TextFieldColor[colorMode],\r\n    },\r\n  });\r\n  const classes = useStyles();\r\n    const NavbarBgColor = {  light: \"#ffffff\", dark: \"#1d1e1f\" };\r\n    const NavbarColor = { light: \"#1d1e1f\", dark: \"#ffffff\"};\r\n    var style3={\r\n        backgroundColor: NavbarBgColor[colorMode],\r\n        color: NavbarColor[colorMode]\r\n    }\r\n    var styleText={\r\n        color: NavbarColor[colorMode]\r\n    }\r\n    return (\r\n        <div style={styleText}>\r\n            <Button\r\n            borderRadius=\"0\" \r\n            className=\"Button\"\r\n            leftIcon={MdFeedback} \r\n            variant=\"solid\" \r\n            borderStyle=\"none\"\r\n            \r\n            bg={ButtonBgColor[colorMode]}\r\n            color={ButtonColor[colorMode]}\r\n            _hover={{ bg: HoverButtonBgColor[colorMode], \r\n            color: HoverButtonColor[colorMode] }}\r\n            onClick={onOpen}>Feedback</Button>\r\n             <Modal isOpen={isOpen} onClose={onClose} isCentered>\r\n                    <ModalOverlay />\r\n                    <form>\r\n                    <ModalContent style={style3}>\r\n                    <ModalHeader><h3 className=\"ModalHeader\">Feedback/ Suggestion</h3></ModalHeader>\r\n                    <ModalBody>\r\n                    <FormControl className={classes.root} variant=\"filled\" fullWidth>\r\n                            <InputLabel htmlFor=\"category\">Category</InputLabel>\r\n                            <Select                            \r\n                            className={classes.root}\r\n                            InputProps={{ className: classes.root  }}\r\n                            value={category}\r\n                            native\r\n                            onChange={(e)=>{\r\n                                //console.log(\"status is \",status)\r\n                                setCategory(e.target.value)}}\r\n                                inputProps={{\r\n                                    name: 'Category',\r\n                                    id: 'category',\r\n                                }}\r\n                            >\r\n                            <option value=\"Feedback\">Feedback</option>\r\n                            <option value=\"Suggestion\">Suggestion</option>\r\n                            <option value=\"Complaint\">Complaint</option>\r\n                            <option value=\"EventSuggestion\">Event Suggestion</option>\r\n                            </Select>\r\n                        </FormControl>\r\n                        <TextField \r\n                            className={classes.root}\r\n                            InputProps={{ className: classes.root  }}\r\n                        type=\"text\"\r\n                        id=\"filled-basic\" \r\n                        label=\"Description\" \r\n                        value={description}\r\n                        multiline\r\n                        onChange={(e)=>{setDescription(e.target.value)}}\r\n                        variant=\"filled\" \r\n                        fullWidth /> \r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                    <Button \r\n                        borderRadius=\"0\" \r\n                        className=\"Button\" \r\n                        leftIcon={MdSend} \r\n                        variant=\"solid\" \r\n                        borderStyle=\"none\"\r\n                        \r\n                        bg={ButtonBgColor[colorMode]}\r\n                        color={ButtonColor[colorMode]}\r\n                        _hover={{ bg: HoverButtonBgColor[colorMode], \r\n                        color: HoverButtonColor[colorMode] }}\r\n                        onClick={handleSubmit}>SUBMIT</Button>\r\n                        <Button \r\n                            borderRadius=\"0\" \r\n                            _hover={{ bg: \"#000\", color:\"#f06567\" }}\r\n                            background=\"#8f0e10\" \r\n                            color=\"#ffffff\"\r\n                            className=\"Button\" \r\n                            leftIcon={MdClose} \r\n                            variant=\"solid\" \r\n                            borderStyle=\"none\"\r\n                            onClick={onClose}>Close</Button>\r\n                    </ModalFooter>\r\n                    </ModalContent>\r\n                    </form>\r\n                </Modal>\r\n               \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Feedback\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../style/MyAccount.css\";\r\nimport firebase from \"firebase\";\r\nimport { db } from \"../firebase\";\r\nimport {\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  Button,\r\n  useToast,\r\n  Avatar,\r\n} from \"@chakra-ui/core\";\r\nimport {\r\n  Backdrop,\r\n  CircularProgress,\r\n  FormControl,\r\n  InputLabel,\r\n  makeStyles,\r\n  Select,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { MdPersonAdd, MdClose, MdSend, MdLock } from \"react-icons/md\"; //material design Icon\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AccountMembersCard from \"./AccountMembersCard\";\r\nimport Event from \"./Event\";\r\nimport EventCard from \"./EventCard\";\r\nimport Announcements from \"./Announcements\";\r\nimport Feedback from \"./Feedback\";\r\nimport DisplayFeedback from \"./DisplayFeedback\";\r\nimport MembersUnderMe from \"./MembersUnderMe\";\r\nimport Search from \"./Search\";\r\n\r\nfunction Editor({\r\n  coordinators,\r\n  coreMembers,\r\n  members,\r\n  events,\r\n  announcements,\r\n  feedbacks,\r\n  allMembers,\r\n  colorMode,\r\n}) {\r\n  const toast = useToast();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const onOpen = () => {\r\n    setIsOpen(true);\r\n  };\r\n  const onClose = () => {\r\n    setIsOpen(false);\r\n  };\r\n\r\n  const [isOpen2, setIsOpen2] = useState(false);\r\n  const onOpen2 = () => {\r\n    setIsOpen2(true);\r\n  };\r\n  const onClose2 = () => {\r\n    setIsOpen2(false);\r\n  };\r\n\r\n  const [backdropIsOpen, setBackdropIsOpen] = useState(false)\r\n\r\n  const [status, setStatus] = useState(\"Member\");\r\n  const [dob, setDob] = useState(\"\");\r\n  const [rno, setRno] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState();\r\n  const [course, setCourse] = useState(\"\");\r\n  const [contact, setContact] = useState(\"\");\r\n  const [department, setDepartment] = useState(\"None\");\r\n  const [myCoordinator, setMyCoordinator] = useState(\"None\");\r\n  const [admin, setAdmin] = useState(false);\r\n  const [editor, setEditor] = useState(false);\r\n  const [imageUrl, setImageUrl] = useState(\"\");\r\n  const [instaUrl, setInstaUrl] = useState(\"\");\r\n  const [linkedinUrl, setLinkedinUrl] = useState(\"\");\r\n  const [customPosition, setCustomPosition] = useState(\"\");\r\n  const [addedBy, setAddedBy] = useState(localStorage.getItem(\"UserName\"));\r\n\r\n  const [updatePass, setUpdatePass] = useState(\"\");\r\n  const [updatePass2, setUpdatePass2] = useState(\"\");\r\n\r\n  var styleStatus;\r\n  if (localStorage.getItem(\"UserStatus\") == \"Coordinator\") {\r\n    styleStatus = {\r\n      display: \"none\",\r\n    };\r\n  }\r\n\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    //console.log(\"Does user exist? \",localStorage.getItem(\"User\"))\r\n    if (!localStorage.getItem(\"User\")) {\r\n      history.push(\"/inginnv1/\");\r\n      return (window.location.href = \"/inginnv1/\");\r\n    } else {\r\n      //console.log(\"Is user an Admin? \",(localStorage.getItem(\"UserAdmin\")!=true))\r\n      if (localStorage.getItem(\"UserEditor\") !== \"true\") {\r\n        //console.log(\"Redirecting user to homepage\")\r\n        history.push(\"/inginnv1/\");\r\n        return (window.location.href = \"/inginnv1/\");\r\n      } else {\r\n        db.collection(\"members\")\r\n          .where(\"rno\", \"==\", localStorage.getItem(\"UserRno\"))\r\n          .get()\r\n          .then(function (querySnapshot) {\r\n            //console.log(\"Length of query response \", querySnapshot.docs.length);\r\n            if (querySnapshot.docs.length > 0) {\r\n              //console.log(\"User Exists in database\");\r\n            } else {\r\n              //console.log(\"User is no more a member of inginn\");\r\n              localStorage.clear();\r\n              history.push(\"/inginnv1/\");\r\n              return (window.location.href = \"/inginnv1/\");\r\n            }\r\n          });\r\n      }\r\n    }\r\n  }, [history]);\r\n\r\n  const handleUpdatePassword = (e) => {\r\n    e.preventDefault();\r\n    setBackdropIsOpen(true)\r\n    if (updatePass === updatePass2) {\r\n      toast({\r\n        title: \"Do not Refresh or Close the tab\",\r\n        description: \"We are securing your password. Go and have some chai.\",\r\n        status: \"warning\",\r\n        duration: 3000,\r\n        isClosable: false,\r\n      });\r\n      fetch(\"https://inginnapi.herokuapp.com/hashpass\", {\r\n        method: \"post\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          id: localStorage.getItem(\"UserId\"),\r\n          password: updatePass2,\r\n        }),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          //console.log(data);\r\n          if (data.token === \"100\") {\r\n            toast({\r\n              title: \"Password Successfully Updated\",\r\n              description: \"\",\r\n              status: \"success\",\r\n              duration: 3000,\r\n              isClosable: false,\r\n            });\r\n          } else {\r\n            toast({\r\n              title: \"Some Error Occured\",\r\n              description: \"\",\r\n              status: \"error\",\r\n              duration: 3000,\r\n              isClosable: false,\r\n            });\r\n          }\r\n        });\r\n    } else {\r\n      toast({\r\n        title: \"Passwords dont match\",\r\n        description: \"\",\r\n        status: \"error\",\r\n        duration: 3000,\r\n        isClosable: false,\r\n      });\r\n    }\r\n    setBackdropIsOpen(false)\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setBackdropIsOpen(true)\r\n    db.collection(\"members\")\r\n      .where(\"rno\", \"==\", rno)\r\n      .get()\r\n      .then(function (querySnapshot) {\r\n        if (querySnapshot.docs.length > 0) {\r\n          localStorage.setItem(\"userExists\", true);\r\n          setIsOpen(true);\r\n          toast({\r\n            title: \"Member already exist\",\r\n            description: \"\",\r\n            status: \"error\",\r\n            duration: 3000,\r\n            isClosable: false,\r\n          });\r\n        } else {\r\n          localStorage.setItem(\"userExists\", false);\r\n        }\r\n      })\r\n      .then(function () {\r\n        if (localStorage.getItem(\"userExists\") === \"false\") {\r\n          setIsOpen(true);\r\n          db.collection(\"members\")\r\n            .add({\r\n              timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n              email,\r\n              rno,\r\n              name,\r\n              dob,\r\n              password,\r\n              course,\r\n              contact,\r\n              status,\r\n              department,\r\n              admin,\r\n              editor,\r\n              imageUrl,\r\n              myCoordinator,\r\n              customPosition,\r\n              addedBy,\r\n              linkedinUrl,\r\n              instaUrl,\r\n            })\r\n            .then(() => {\r\n              //console.log(\"Rno is \", rno);\r\n              db.collection(\"members\")\r\n                .where(\"rno\", \"==\", rno)\r\n                .get()\r\n                .then(function (querySnapshot) {\r\n                  querySnapshot.forEach(function (doc) {\r\n                    updatePassword(doc.id);\r\n                  });\r\n                });\r\n              toast({\r\n                title: \"Encrypting the password\",\r\n                description: \"Go and have some fun while we do that\",\r\n                status: \"warning\",\r\n                duration: 3000,\r\n                isClosable: false,\r\n              });\r\n            });\r\n        }\r\n      });\r\n      setBackdropIsOpen(false)\r\n  };\r\n\r\n  const updatePassword = (id) => {\r\n    fetch(\"https://inginnapi.herokuapp.com/hashpass\", {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        id,\r\n        password,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        //console.log(data)\r\n        if (data.token === \"100\") {\r\n          successfullyAdded();\r\n        } else {\r\n          toast({\r\n            title: \"Encrypting the password failed.\",\r\n            description: \"But member has been added. Kindly update password\",\r\n            status: \"error\",\r\n            duration: 3000,\r\n            isClosable: false,\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  const successfullyAdded = () => {\r\n    setEmail(\"\");\r\n    setName(\"\");\r\n    setPassword(\"\");\r\n    setRno(\"\");\r\n    setDob(\"\");\r\n    setCourse(\"\");\r\n    setDepartment(\"None\");\r\n    setAdmin(false);\r\n    setEditor(false);\r\n    setContact(\"\");\r\n    setImageUrl(\"\");\r\n    setInstaUrl(\"\");\r\n    setLinkedinUrl(\"\");\r\n    setMyCoordinator(\"None\");\r\n    toast({\r\n      title: \"Member Successfully Added\",\r\n      description: \"\",\r\n      status: \"success\",\r\n      duration: 3000,\r\n      isClosable: false,\r\n    });\r\n  };\r\n\r\n  function ChooseCoordinator({ coordinators }) {\r\n    return (\r\n      <div>\r\n        <FormControl className={classes.root} variant=\"filled\" fullWidth>\r\n          <InputLabel htmlFor=\"member-coordinator\">Coordinator</InputLabel>\r\n          <Select\r\n            className={classes.root}\r\n            InputProps={{ className: classes.root }}\r\n            native\r\n            value={myCoordinator}\r\n            onChange={(e) => setMyCoordinator(e.target.value)}\r\n            inputProps={{\r\n              name: \"coordinator\",\r\n              id: \"member-coordinator\",\r\n            }}\r\n          >\r\n            <option value=\"None\">NONE</option>\r\n            {coordinators.map((coordinators) => (\r\n              <option value={coordinators.coordinator.name}>\r\n                {coordinators.coordinator.name}\r\n              </option>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const ButtonBgColor = { light: \"#1d1e1f\", dark: \"#ffffff\" };\r\n  const ButtonColor = { light: \"#ffffff\", dark: \"#1d1e1f\" };\r\n  const HoverButtonBgColor = { light: \"#ffffff\", dark: \"#1d1e1f\" };\r\n  const HoverButtonColor = { light: \"#1d1e1f\", dark: \"#ffffff\" };\r\n\r\n  \r\n  const TextFieldBgColor = {  light: \"#e8e8e8\", dark: \"#383838\" };\r\n  const TextFieldColor = {light: \"#383838\", dark: \"#e8e8e8\" };\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      \"& label.Mui-focused\": {\r\n        color: TextFieldColor[colorMode],\r\n      },\r\n      \"& label\": {\r\n        color: TextFieldColor[colorMode],\r\n      },\r\n      \"& .MuiSelect-select:not([multiple]) option, .MuiSelect-select:not([multiple]) optgroup\":{\r\n          background:TextFieldBgColor[colorMode],\r\n      },\r\n      backgroundColor: TextFieldBgColor[colorMode],\r\n      color: TextFieldColor[colorMode],\r\n    },\r\n  });\r\n  const classes = useStyles();\r\n\r\n  const NavbarBgColor = { light: \"#ffffff\", dark: \"#1d1e1f\" };\r\n  const NavbarColor = { light: \"#1d1e1f\", dark: \"#ffffff\" };\r\n  var style3 = {\r\n    backgroundColor: NavbarBgColor[colorMode],\r\n    color: NavbarColor[colorMode],\r\n  };\r\n  var styleText = {\r\n    color: NavbarColor[colorMode],\r\n  };\r\n\r\n  return (\r\n    <div style={styleText} className=\"MyAccount\">\r\n      <Modal isOpen={isOpen} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <form>\r\n          <ModalContent style={style3}>\r\n            <ModalHeader>\r\n              <h3 className=\"ModalHeader\">ADD MEMBER</h3>\r\n            </ModalHeader>\r\n            <ModalBody>\r\n              <TextField\r\n                className={classes.root}\r\n                InputProps={{ className: classes.root }}\r\n                type=\"number\"\r\n                id=\"filled-basic\"\r\n                label=\"Registration Number\"\r\n                value={rno}\r\n                onChange={(e) => {\r\n                  setRno(e.target.value);\r\n                  setPassword(e.target.value + \"_inginn\");\r\n                }}\r\n                variant=\"filled\"\r\n                required\r\n                fullWidth\r\n              />\r\n\r\n              <TextField\r\n                className={classes.root}\r\n                InputProps={{ className: classes.root }}\r\n                id=\"filled-basic\"\r\n                variant=\"filled\"\r\n                fullWidth\r\n                required\r\n                type=\"text\"\r\n                label=\"Name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              />\r\n\r\n              <TextField\r\n                className={classes.root}\r\n                InputProps={{ className: classes.root }}\r\n                id=\"filled-basic\"\r\n                variant=\"filled\"\r\n                fullWidth\r\n                required\r\n                type=\"email\"\r\n                label=\"E-Mail\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n              <TextField\r\n                className={classes.root}\r\n                InputProps={{ className: classes.root }}\r\n                type=\"number\"\r\n                id=\"filled-basic\"\r\n                label=\"Contact\"\r\n                value={contact}\r\n                onChange={(e) => setContact(e.target.value)}\r\n                variant=\"filled\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                className={classes.root}\r\n                InputProps={{ className: classes.root }}\r\n                type=\"text\"\r\n                id=\"filled-basic\"\r\n                label=\"Course\"\r\n                value={course}\r\n                onChange={(e) => setCourse(e.target.value)}\r\n                variant=\"filled\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                className={classes.root}\r\n                InputProps={{ className: classes.root }}\r\n                type=\"text\"\r\n                id=\"filled-basic\"\r\n                label=\"Custom Position\"\r\n                value={customPosition}\r\n                onChange={(e) => setCustomPosition(e.target.value)}\r\n                variant=\"filled\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                className={classes.root}\r\n                InputProps={{ className: classes.root }}\r\n                InputLabelProps={{ shrink: true }}\r\n                id=\"filled-basic\"\r\n                variant=\"filled\"\r\n                fullWidth\r\n                label=\"Date of birth\"\r\n                type=\"date\"\r\n                value={dob}\r\n                onChange={(e) => setDob(e.target.value)}\r\n              />\r\n              <FormControl className={classes.root} variant=\"filled\" fullWidth>\r\n                <InputLabel htmlFor=\"member-status\">Status</InputLabel>\r\n                <Select\r\n                  className={classes.root}\r\n                  InputProps={{ className: classes.root }}\r\n                  value={status}\r\n                  native\r\n                  onChange={(e) => {\r\n                    //console.log(\"status is \",status)\r\n                    setStatus(e.target.value);\r\n                  }}\r\n                  inputProps={{\r\n                    name: \"Status\",\r\n                    id: \"member-status\",\r\n                  }}\r\n                >\r\n                  <option value=\"Member\">Member</option>\r\n                  <option value=\"Core\">Core</option>\r\n                  <option value=\"Coordinator\">Coordinator</option>\r\n                </Select>\r\n              </FormControl>\r\n              <FormControl className={classes.root} variant=\"filled\" fullWidth>\r\n                <InputLabel htmlFor=\"member-department\">Department</InputLabel>\r\n                <Select\r\n                  className={classes.root}\r\n                  InputProps={{ className: classes.root }}\r\n                  native\r\n                  value={department}\r\n                  onChange={(e) => setDepartment(e.target.value)}\r\n                  inputProps={{\r\n                    name: \"Department\",\r\n                    id: \"member-department\",\r\n                  }}\r\n                >\r\n                  <option value=\"None\">None</option>\r\n                  <option value=\"Operations\">Operations</option>\r\n                  <option value=\"Marketing\">Media and Marketing</option>\r\n                  <option value=\"HR\">Human Resource</option>\r\n                  <option value=\"PS\">Public Speaking</option>\r\n                  <option value=\"Sponsorship\">Sponsorship</option>\r\n                </Select>\r\n              </FormControl>\r\n              {status === \"Member\" ? (\r\n                <div>\r\n                  <ChooseCoordinator coordinators={coordinators} />\r\n                </div>\r\n              ) : (\r\n                <div></div>\r\n              )}\r\n\r\n              <TextField\r\n                className={classes.root}\r\n                InputProps={{ className: classes.root }}\r\n                id=\"filled-basic\"\r\n                variant=\"filled\"\r\n                fullWidth\r\n                type=\"url\"\r\n                label=\"imageUrl\"\r\n                value={imageUrl}\r\n                onChange={(e) => setImageUrl(e.target.value)}\r\n              />\r\n              <TextField\r\n                className={classes.root}\r\n                InputProps={{ className: classes.root }}\r\n                id=\"filled-basic\"\r\n                variant=\"filled\"\r\n                fullWidth\r\n                required\r\n                type=\"url\"\r\n                label=\"Instagram URL\"\r\n                value={instaUrl}\r\n                onChange={(e) => setInstaUrl(e.target.value)}\r\n              />\r\n              <TextField\r\n                className={classes.root}\r\n                InputProps={{ className: classes.root }}\r\n                id=\"filled-basic\"\r\n                variant=\"filled\"\r\n                fullWidth\r\n                required\r\n                type=\"url\"\r\n                label=\"LinkedIn URL\"\r\n                value={linkedinUrl}\r\n                onChange={(e) => setLinkedinUrl(e.target.value)}\r\n              />\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <Button\r\n                borderRadius=\"0\"\r\n                className=\"Button\"\r\n                leftIcon={MdSend}\r\n                variant=\"solid\"\r\n                borderStyle=\"none\"\r\n                bg={ButtonBgColor[colorMode]}\r\n                color={ButtonColor[colorMode]}\r\n                _hover={{\r\n                  bg: HoverButtonBgColor[colorMode],\r\n                  color: HoverButtonColor[colorMode],\r\n                }}\r\n                onClick={handleSubmit}\r\n              >\r\n                SUBMIT\r\n              </Button>\r\n              <Button\r\n                borderRadius=\"0\"\r\n                _hover={{ bg: \"#000\", color: \"#f06567\" }}\r\n                background=\"#8f0e10\"\r\n                color=\"#ffffff\"\r\n                className=\"Button\"\r\n                leftIcon={MdClose}\r\n                variant=\"solid\"\r\n                borderStyle=\"none\"\r\n                onClick={onClose}\r\n              >\r\n                Close\r\n              </Button>\r\n            </ModalFooter>\r\n          </ModalContent>\r\n        </form>\r\n      </Modal>\r\n      <Modal isOpen={isOpen2} onClose={onClose2} isCentered>\r\n        <ModalOverlay />\r\n        <form>\r\n          <ModalContent style={style3}>\r\n            <ModalHeader>\r\n              <h3 className=\"ModalHeader\">Update Password</h3>\r\n            </ModalHeader>\r\n            <ModalBody>\r\n              <TextField\r\n                className={classes.root}\r\n                InputProps={{ className: classes.root }}\r\n                type=\"text\"\r\n                id=\"filled-basic\"\r\n                label=\"Password\"\r\n                value={updatePass}\r\n                onChange={(e) => {\r\n                  setUpdatePass(e.target.value);\r\n                }}\r\n                variant=\"filled\"\r\n                required\r\n                fullWidth\r\n              />\r\n\r\n              <TextField\r\n                className={classes.root}\r\n                InputProps={{ className: classes.root }}\r\n                type=\"text\"\r\n                id=\"filled-basic\"\r\n                label=\"Confirm Password\"\r\n                value={updatePass2}\r\n                onChange={(e) => {\r\n                  setUpdatePass2(e.target.value);\r\n                }}\r\n                variant=\"filled\"\r\n                required\r\n                fullWidth\r\n              />\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <Button\r\n                borderRadius=\"0\"\r\n                className=\"Button\"\r\n                leftIcon={MdSend}\r\n                variant=\"solid\"\r\n                borderStyle=\"none\"\r\n                bg={ButtonBgColor[colorMode]}\r\n                color={ButtonColor[colorMode]}\r\n                _hover={{\r\n                  bg: HoverButtonBgColor[colorMode],\r\n                  color: HoverButtonColor[colorMode],\r\n                }}\r\n                onClick={handleUpdatePassword}\r\n              >\r\n                SUBMIT\r\n              </Button>\r\n              <Button\r\n                borderRadius=\"0\"\r\n                _hover={{ bg: \"#000\", color: \"#f06567\" }}\r\n                background=\"#8f0e10\"\r\n                color=\"#ffffff\"\r\n                className=\"Button\"\r\n                leftIcon={MdClose}\r\n                variant=\"solid\"\r\n                borderStyle=\"none\"\r\n                onClick={onClose2}\r\n              >\r\n                Close\r\n              </Button>\r\n            </ModalFooter>\r\n          </ModalContent>\r\n        </form>\r\n      </Modal>\r\n\r\n      <div className=\"VerticalPanel\">\r\n        <div className=\"ProfilePic\">\r\n          <Avatar\r\n            size=\"2xl\"\r\n            alt=\"Profile Pic\"\r\n            src={localStorage.getItem(\"UserImage\")}\r\n          />\r\n        </div>\r\n        <div className=\"VerticalPanelContent\">\r\n          <h3>{localStorage.getItem(\"UserName\")}</h3>\r\n          <h3>{localStorage.getItem(\"UserEmail\")}</h3>\r\n          <h3>{localStorage.getItem(\"UserRno\")}</h3>\r\n          <h3>{localStorage.getItem(\"UserStatus\")}</h3>\r\n          {localStorage.getItem(\"UserCustomPosition\") != \"\" ? (\r\n            <h3>{localStorage.getItem(\"UserCustomPosition\")}</h3>\r\n          ) : (\r\n            <h3>My Department: {localStorage.getItem(\"UserDepartment\")}</h3>\r\n          )}\r\n          {localStorage.getItem(\"UserCoordinator\") != \"\" ? (\r\n            <h3 style={styleStatus}>\r\n              My Coordinator: {localStorage.getItem(\"UserCoordinator\")}\r\n            </h3>\r\n          ) : (\r\n            <h3></h3>\r\n          )}\r\n          <div className=\"ActionButton\">\r\n            <Button\r\n              borderRadius=\"0\"\r\n              className=\"Button\"\r\n              leftIcon={MdPersonAdd}\r\n              variant=\"solid\"\r\n              borderStyle=\"none\"\r\n              bg={ButtonBgColor[colorMode]}\r\n              color={ButtonColor[colorMode]}\r\n              _hover={{\r\n                bg: HoverButtonBgColor[colorMode],\r\n                color: HoverButtonColor[colorMode],\r\n              }}\r\n              onClick={onOpen}\r\n            >\r\n              Add Member\r\n            </Button>\r\n          </div>\r\n          <div className=\"ActionButton\">\r\n            <Event colorMode={colorMode} />\r\n          </div>\r\n          <div className=\"ActionButton\">\r\n            <Button\r\n              borderRadius=\"0\"\r\n              className=\"Button\"\r\n              leftIcon={MdLock}\r\n              variant=\"solid\"\r\n              borderStyle=\"none\"\r\n              bg={ButtonBgColor[colorMode]}\r\n              color={ButtonColor[colorMode]}\r\n              _hover={{\r\n                bg: HoverButtonBgColor[colorMode],\r\n                color: HoverButtonColor[colorMode],\r\n              }}\r\n              onClick={onOpen2}\r\n            >\r\n              Update Password\r\n            </Button>\r\n          </div>\r\n          <div className=\"ActionButton\">\r\n            <Feedback colorMode={colorMode} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"DisplayPanel\">\r\n        <h3 className=\"DisplayPanelHeading\">Announcements</h3>\r\n        <div className=\"DisplayPanelCardContainer\">\r\n          <Announcements\r\n            colorMode={colorMode}\r\n            announcements={announcements}\r\n            calledBy=\"Editor\"\r\n            allMembers={allMembers}\r\n          />\r\n        </div>\r\n        <Search coordinators={coordinators} colorMode={colorMode} calledBy=\"Editor\" allMembers={allMembers} />\r\n        <h3 className=\"DisplayPanelHeading\">Core Members</h3>\r\n        <div className=\"DisplayPanelCardContainer\">\r\n          {coreMembers.map(({ id, coremember }) => (\r\n            <AccountMembersCard\r\n              colorMode={colorMode}\r\n              key={id}\r\n              memberId={id}\r\n              member={coremember}\r\n              coordinators={coordinators}\r\n              calledBy=\"Editor\"\r\n            />\r\n          ))}\r\n        </div>\r\n        <h3 className=\"DisplayPanelHeading\">Coordinators</h3>\r\n        <div className=\"DisplayPanelCardContainer\">\r\n          {coordinators.map(({ id, coordinator }) => (\r\n            <AccountMembersCard\r\n              colorMode={colorMode}\r\n              key={id}\r\n              memberId={id}\r\n              member={coordinator}\r\n              coordinators={coordinators}\r\n              calledBy=\"Editor\"\r\n            />\r\n          ))}\r\n        </div>\r\n        <MembersUnderMe colorMode={colorMode} allMembers={allMembers} />\r\n        <h3 className=\"DisplayPanelHeading\">All Members</h3>\r\n        <div className=\"DisplayPanelCardContainer\">\r\n          {members.map(({ id, member }) => (\r\n            <AccountMembersCard\r\n              colorMode={colorMode}\r\n              key={id}\r\n              memberId={id}\r\n              member={member}\r\n              coordinators={coordinators}\r\n              calledBy=\"Editor\"\r\n            />\r\n          ))}\r\n        </div>\r\n        {events.length > 0 ? (\r\n          <div>\r\n            <h3 className=\"DisplayPanelHeading\">Events</h3>\r\n            <div className=\"DisplayPanelCardContainer\">\r\n              {events.map(({ id, event }) => (\r\n                <EventCard\r\n                  colorMode={colorMode}\r\n                  key={id}\r\n                  eventId={id}\r\n                  event={event}\r\n                  calledBy=\"Editor\"\r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n        {feedbacks.length > 0 ? (\r\n          <div>\r\n            <h3 className=\"DisplayPanelHeading\">Feedbacks</h3>\r\n            <div className=\"DisplayPanelCardContainer\">\r\n              {feedbacks.map(({ id, feedback }) => (\r\n                <DisplayFeedback\r\n                  colorMode={colorMode}\r\n                  key={id}\r\n                  feedbackId={id}\r\n                  feedback={feedback}\r\n                  calledBy=\"Editor\"\r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n        \r\n      </div>\r\n      <Backdrop style={styleText} open={backdropIsOpen} >\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Editor;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../style/MyAccount.css\";\r\nimport firebase from \"firebase\";\r\nimport { db } from \"../firebase\";\r\nimport {\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  Button,\r\n  useToast,\r\n  Avatar,\r\n} from \"@chakra-ui/core\";\r\nimport {\r\n  FormControl,\r\n  InputLabel,\r\n  makeStyles,\r\n  Select,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { MdPersonAdd, MdClose, MdSend, MdLock } from \"react-icons/md\"; //material design Icon\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AccountMembersCard from \"./AccountMembersCard\";\r\nimport Event from \"./Event\";\r\nimport EventCard from \"./EventCard\";\r\nimport Announcements from \"./Announcements\";\r\nimport Feedback from \"./Feedback\";\r\nimport DisplayFeedback from \"./DisplayFeedback\";\r\nimport MembersUnderMe from \"./MembersUnderMe\";\r\nimport Search from \"./Search\";\r\n\r\nfunction MemberAccount({\r\n  coordinators,\r\n  coreMembers,\r\n  members,\r\n  events,\r\n  announcements,\r\n  allMembers,\r\n  colorMode,\r\n}) {\r\n  //console.log(\"Announcement in Admin \", announcements);\r\n\r\n  const toast = useToast();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const onOpen = () => {\r\n    setIsOpen(true);\r\n  };\r\n  const onClose = () => {\r\n    setIsOpen(false);\r\n  };\r\n\r\n  const [isOpen2, setIsOpen2] = useState(false);\r\n  const onOpen2 = () => {\r\n    setIsOpen2(true);\r\n  };\r\n  const onClose2 = () => {\r\n    setIsOpen2(false);\r\n  };\r\n\r\n  const [status, setStatus] = useState(\"Member\");\r\n  const [dob, setDob] = useState(\"\");\r\n  const [rno, setRno] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState();\r\n  const [course, setCourse] = useState(\"\");\r\n  const [contact, setContact] = useState(\"\");\r\n  const [department, setDepartment] = useState(\"Operations\");\r\n  const [myCoordinator, setMyCoordinator] = useState(\"\");\r\n  const [admin, setAdmin] = useState(false);\r\n  const [editor, setEditor] = useState(false);\r\n  const [imageUrl, setImageUrl] = useState(\"\");\r\n  const [instaUrl, setInstaUrl] = useState(\"\");\r\n  const [linkedinUrl, setLinkedinUrl] = useState(\"\");\r\n  const [customPosition, setCustomPosition] = useState(\"\");\r\n  const [addedBy, setAddedBy] = useState(localStorage.getItem(\"UserName\"));\r\n\r\n  const [updatePass, setUpdatePass] = useState(\"\");\r\n  const [updatePass2, setUpdatePass2] = useState(\"\");\r\n\r\n  var styleStatus;\r\n  if (localStorage.getItem(\"UserStatus\") == \"Coordinator\") {\r\n    styleStatus = {\r\n      display: \"none\",\r\n    };\r\n  }\r\n\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (!localStorage.getItem(\"User\")) {\r\n      return history.push(\"/inginnv1/\");\r\n    }\r\n  }, [history]);\r\n\r\n  const handleUpdatePassword = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (updatePass === updatePass2) {\r\n      toast({\r\n        title: \"Do not Refresh or Close the tab\",\r\n        description: \"We are securing your password. Go and have some chai.\",\r\n        status: \"warning\",\r\n        duration: 3000,\r\n        isClosable: false,\r\n      });\r\n      fetch(\"https://inginnapi.herokuapp.com/hashpass\", {\r\n        method: \"post\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          id: localStorage.getItem(\"UserId\"),\r\n          password: updatePass2,\r\n        }),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          //console.log(data);\r\n          if (data.token === \"100\") {\r\n            toast({\r\n              title: \"Password Successfully Updated\",\r\n              description: \"\",\r\n              status: \"success\",\r\n              duration: 3000,\r\n              isClosable: false,\r\n            });\r\n          } else {\r\n            toast({\r\n              title: \"Some Error Occured\",\r\n              description: \"\",\r\n              status: \"error\",\r\n              duration: 3000,\r\n              isClosable: false,\r\n            });\r\n          }\r\n        });\r\n    } else {\r\n      toast({\r\n        title: \"Passwords dont match\",\r\n        description: \"\",\r\n        status: \"error\",\r\n        duration: 3000,\r\n        isClosable: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  const ButtonBgColor = { light: \"#1d1e1f\", dark: \"#ffffff\" };\r\n  const ButtonColor = { light: \"#ffffff\", dark: \"#1d1e1f\" };\r\n  const HoverButtonBgColor = { light: \"#ffffff\", dark: \"#1d1e1f\" };\r\n  const HoverButtonColor = { light: \"#1d1e1f\", dark: \"#ffffff\" };\r\n\r\n  const TextFieldBgColor = { light: \"#e8e8e8\", dark: \"#383838\" };\r\n  const TextFieldColor = { light: \"#383838\", dark: \"#e8e8e8\" };\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      \"& label.Mui-focused\": {\r\n        color: TextFieldColor[colorMode],\r\n      },\r\n      \"& label\": {\r\n        color: TextFieldColor[colorMode],\r\n      },\r\n      \"& .MuiSelect-select:not([multiple]) option, .MuiSelect-select:not([multiple]) optgroup\": {\r\n        background: TextFieldBgColor[colorMode],\r\n      },\r\n      backgroundColor: TextFieldBgColor[colorMode],\r\n      color: TextFieldColor[colorMode],\r\n    },\r\n  });\r\n  const classes = useStyles();\r\n\r\n  const NavbarBgColor = { light: \"#ffffff\", dark: \"#1d1e1f\" };\r\n  const NavbarColor = { light: \"#1d1e1f\", dark: \"#ffffff\" };\r\n  var style3 = {\r\n    backgroundColor: NavbarBgColor[colorMode],\r\n    color: NavbarColor[colorMode],\r\n  };\r\n  var styleText = {\r\n    color: NavbarColor[colorMode],\r\n  };\r\n\r\n  return (\r\n    <div style={styleText} className=\"MyAccount\">\r\n      <Modal isOpen={isOpen2} onClose={onClose2} isCentered>\r\n        <ModalOverlay />\r\n        <form>\r\n          <ModalContent style={style3}>\r\n            <ModalHeader>\r\n              <h3 className=\"ModalHeader\">Update Password</h3>\r\n            </ModalHeader>\r\n            <ModalBody>\r\n              <TextField\r\n                className={classes.root}\r\n                InputProps={{ className: classes.root }}\r\n                type=\"text\"\r\n                id=\"filled-basic\"\r\n                label=\"Password\"\r\n                value={updatePass}\r\n                onChange={(e) => {\r\n                  setUpdatePass(e.target.value);\r\n                }}\r\n                variant=\"filled\"\r\n                required\r\n                fullWidth\r\n              />\r\n\r\n              <TextField\r\n                className={classes.root}\r\n                InputProps={{ className: classes.root }}\r\n                type=\"text\"\r\n                id=\"filled-basic\"\r\n                label=\"Confirm Password\"\r\n                value={updatePass2}\r\n                onChange={(e) => {\r\n                  setUpdatePass2(e.target.value);\r\n                }}\r\n                variant=\"filled\"\r\n                required\r\n                fullWidth\r\n              />\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <Button\r\n                borderRadius=\"0\"\r\n                className=\"Button\"\r\n                leftIcon={MdSend}\r\n                variant=\"solid\"\r\n                borderStyle=\"none\"\r\n                bg={ButtonBgColor[colorMode]}\r\n                color={ButtonColor[colorMode]}\r\n                _hover={{\r\n                  bg: HoverButtonBgColor[colorMode],\r\n                  color: HoverButtonColor[colorMode],\r\n                }}\r\n                onClick={handleUpdatePassword}\r\n              >\r\n                SUBMIT\r\n              </Button>\r\n              <Button\r\n                borderRadius=\"0\"\r\n                _hover={{ bg: \"#000\", color: \"#f06567\" }}\r\n                background=\"#8f0e10\"\r\n                color=\"#ffffff\"\r\n                className=\"Button\"\r\n                leftIcon={MdClose}\r\n                variant=\"solid\"\r\n                borderStyle=\"none\"\r\n                onClick={onClose2}\r\n              >\r\n                Close\r\n              </Button>\r\n            </ModalFooter>\r\n          </ModalContent>\r\n        </form>\r\n      </Modal>\r\n\r\n      <div className=\"VerticalPanel\">\r\n        <div className=\"ProfilePic\">\r\n          <Avatar\r\n            size=\"2xl\"\r\n            alt=\"Profile Pic\"\r\n            src={localStorage.getItem(\"UserImage\")}\r\n          />\r\n        </div>\r\n        <div className=\"VerticalPanelContent\">\r\n          <h3>{localStorage.getItem(\"UserName\")}</h3>\r\n          <h3>{localStorage.getItem(\"UserEmail\")}</h3>\r\n          <h3>{localStorage.getItem(\"UserRno\")}</h3>\r\n          <h3>{localStorage.getItem(\"UserStatus\")}</h3>\r\n          {localStorage.getItem(\"UserCustomPosition\") != \"\" ? (\r\n            <h3>{localStorage.getItem(\"UserCustomPosition\")}</h3>\r\n          ) : (\r\n            <h3>My Department: {localStorage.getItem(\"UserDepartment\")}</h3>\r\n          )}\r\n          {localStorage.getItem(\"UserCoordinator\") != \"\" ? (\r\n            <h3 style={styleStatus}>\r\n              My Coordinator: {localStorage.getItem(\"UserCoordinator\")}\r\n            </h3>\r\n          ) : (\r\n            <h3></h3>\r\n          )}\r\n\r\n          <div className=\"ActionButton\">\r\n            <Button\r\n              borderRadius=\"0\"\r\n              bg={ButtonBgColor[colorMode]}\r\n              color={ButtonColor[colorMode]}\r\n              _hover={{\r\n                bg: HoverButtonBgColor[colorMode],\r\n                color: HoverButtonColor[colorMode],\r\n              }}\r\n              className=\"Button\"\r\n              leftIcon={MdLock}\r\n              variant=\"solid\"\r\n              borderStyle=\"none\"\r\n              onClick={onOpen2}\r\n            >\r\n              Update Password\r\n            </Button>\r\n          </div>\r\n          <div className=\"ActionButton\">\r\n            <Feedback colorMode={colorMode} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"DisplayPanel\">\r\n        <h3 className=\"DisplayPanelHeading\">Announcements</h3>\r\n        <div className=\"DisplayPanelCardContainer\">\r\n          <Announcements\r\n            colorMode={colorMode}\r\n            announcements={announcements}\r\n            calledBy=\"Member\"\r\n            allMembers={allMembers}\r\n          />\r\n        </div>\r\n        <Search coordinators={coordinators} colorMode={colorMode} calledBy=\"Member\" allMembers={allMembers} />\r\n        <h3 className=\"DisplayPanelHeading\">Core Members</h3>\r\n        <div className=\"DisplayPanelCardContainer\">\r\n          {coreMembers.map(({ id, coremember }) => (\r\n            <AccountMembersCard\r\n              colorMode={colorMode}\r\n              key={id}\r\n              memberId={id}\r\n              member={coremember}\r\n              coordinators={coordinators}\r\n              calledBy=\"Member\"\r\n            />\r\n          ))}\r\n        </div>\r\n        <h3 className=\"DisplayPanelHeading\">Coordinators</h3>\r\n        <div className=\"DisplayPanelCardContainer\">\r\n          {coordinators.map(({ id, coordinator }) => (\r\n            <AccountMembersCard\r\n              colorMode={colorMode}\r\n              key={id}\r\n              memberId={id}\r\n              member={coordinator}\r\n              coordinators={coordinators}\r\n              calledBy=\"Member\"\r\n            />\r\n          ))}\r\n        </div>\r\n        <MembersUnderMe colorMode={colorMode} allMembers={allMembers} />\r\n        <h3 className=\"DisplayPanelHeading\">All Members</h3>\r\n        <div className=\"DisplayPanelCardContainer\">\r\n          {members.map(({ id, member }) => (\r\n            <AccountMembersCard\r\n              colorMode={colorMode}\r\n              key={id}\r\n              memberId={id}\r\n              member={member}\r\n              coordinators={coordinators}\r\n              calledBy=\"Member\"\r\n            />\r\n          ))}\r\n        </div>\r\n        {events.length > 0 ? (\r\n          <div>\r\n            <h3 className=\"DisplayPanelHeading\">Events</h3>\r\n            <div className=\"DisplayPanelCardContainer\">\r\n              {events.map(({ id, event }) => (\r\n                <EventCard\r\n                  colorMode={colorMode}\r\n                  key={id}\r\n                  eventId={id}\r\n                  event={event}\r\n                  calledBy=\"Member\"\r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MemberAccount;\r\n","import React from 'react'\r\nimport '../style/Footer.css'\r\nimport {ThemeProvider, ColorModeProvider} from \"@chakra-ui/core\"\r\n\r\nfunction Footer({colorMode}) {\r\n    \r\n    const FooterBgColor = {  light: \"#ffffff\", dark: \"#1d1e1f\" };\r\n    const FooterColor = { light: \"#1d1e1f\", dark: \"#ffffff\"};\r\n    var style={\r\n        backgroundColor: FooterBgColor[colorMode],\r\n        color: FooterColor[colorMode]\r\n    }\r\n    \r\n    return (\r\n        <ThemeProvider>\r\n            <ColorModeProvider>\r\n               <a href=\"https://www.pathakankit.com\">\r\n               <div style={style} className=\"Footer\">\r\n                    <a href=\"https://www.youtube.com/pathakankit\" target=\"_blank\">\r\n                    <h2>Made with 💓 by AK99 ✨ </h2> \r\n                    </a>       \r\n                </div>\r\n               </a>\r\n            </ColorModeProvider>\r\n        </ThemeProvider>\r\n    )\r\n}\r\nexport default Footer\r\n","import React from 'react'\r\nimport \"../style/Error.css\"\r\n\r\nfunction Error() {\r\n   \r\n    return (\r\n        <div className=\"ErrorPage\">\r\n           <div>\r\n           <h1>Page Not Found 😱 </h1>\r\n           <h1>😧 Let Me Search....</h1> \r\n           </div>\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default Error\r\n\r\n\r\n","import React from \"react\";\r\nimport \"../style/LastEvent.css\";\r\n\r\nfunction LastEvent({ lastEvents, colorMode }) {\r\n  const Color = { light: \"#1d1e1f\", dark: \"#ffffff\" };\r\n  var style = {\r\n    color: Color[colorMode],\r\n  };\r\n  return (\r\n    <div style={style} className=\"LastEvents\">\r\n      {lastEvents.length > 0 ? (\r\n        <div>\r\n          <h3 className=\"PreviousEventHeader\">Previous Events</h3>\r\n          <div className=\"PreviousEventContent\">\r\n            {lastEvents.map(({ id, lastEvent }) => (\r\n              <div>\r\n                <h1>{lastEvent.lastEventName}</h1>\r\n                <h3>{lastEvent.lastEventDescription}</h3>\r\n                <div className=\"LastEventImagesContainer\">\r\n                  <img\r\n                    className=\"LastEventImage\"\r\n                    src={lastEvent.lastEventPic1}\r\n                    alt={lastEvent.lastEventName}\r\n                  />\r\n                  <img\r\n                    className=\"LastEventImage\"\r\n                    src={lastEvent.lastEventPic2}\r\n                    alt={lastEvent.lastEventName}\r\n                  />\r\n                  <img\r\n                    className=\"LastEventImage\"\r\n                    src={lastEvent.lastEventPic3}\r\n                    alt={lastEvent.lastEventName}\r\n                  />\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LastEvent;\r\n{\r\n  /* <AccountMembersCard\r\nkey={id}\r\nmemberId={id}\r\nmember={coremember}\r\ncoordinators={coordinators}\r\ncalledBy=\"Admin\"\r\n/> */\r\n}\r\n","import React from 'react'\r\nimport HomepageMembersCard from \"./HomepageMembersCard\"\r\n\r\nfunction DisplayAllMembers({members, colorMode}) {\r\n\r\n  const NavbarBgColor = { light: \"#ffffff\", dark: \"#1d1e1f\" };\r\n  const NavbarColor = { light: \"#1d1e1f\", dark: \"#ffffff\" };\r\n  var style3 = {\r\n    color: NavbarColor[colorMode],\r\n  };\r\n\r\n  var style={\r\n    paddingTop: \"70px\"\r\n  }\r\n    return (\r\n        <div style={style}>\r\n            {members.length > 0 ? (\r\n        <div>\r\n          <h3 style={style3} className=\"DisplayPanelHeading\">Members</h3>\r\n          <div className=\"CoreMembersContainer\">\r\n            {members.map(({ id, member }) => (\r\n              <HomepageMembersCard\r\n                key={id}\r\n                colorMode={colorMode}\r\n                member={member}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DisplayAllMembers\r\n","import React from 'react'\r\n\r\nfunction JudgesCard({colorMode, name, description, url, insta}) {\r\n    const NavbarBgColor = { light: \"#ffffff\", dark: \"#1d1e1f\" };\r\n    const NavbarColor = { light: \"#1d1e1f\", dark: \"#ffffff\" };\r\n    var style = {\r\n        backgroundColor: NavbarBgColor[colorMode],\r\n        color: NavbarColor[colorMode],\r\n      };\r\n      var styleText = {\r\n        color: NavbarColor[colorMode],\r\n      };\r\n    return (\r\n        <div className=\"JudgeCard\">\r\n            <a href={insta} target=\"_blank\">\r\n            <img src={url} alt=\"INGINN Event Judge\" />\r\n            <div className=\"JudgeDetail\">\r\n                <h4>{name}</h4>\r\n                <h5>{description}</h5>\r\n            </div>\r\n            </a>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JudgesCard\r\n","import React, { useState } from \"react\";\r\nimport \"../style/PhotographyReloaded.css\";\r\nimport { Button } from \"@chakra-ui/core\";\r\nimport {IconButton} from \"@material-ui/core\"\r\nimport JudgesCard from \"./JudgesCard\"\r\nimport { FaArrowCircleDown, FaArrowCircleUp } from \"react-icons/fa\";\r\n\r\nfunction PhotographyReloaded({ colorMode }) {\r\n  const ButtonBgColor = { light: \"#1d1e1f\", dark: \"#ffffff\" };\r\n  const ButtonColor = { light: \"#ffffff\", dark: \"#1d1e1f\" };\r\n  const HoverButtonBgColor = { light: \"#ffffff\", dark: \"#1d1e1f\" };\r\n  const HoverButtonColor = { light: \"#1d1e1f\", dark: \"#ffffff\" };\r\n\r\n  const NavbarBgColor = { light: \"#ffffff\", dark: \"#1d1e1f\" };\r\n  const NavbarColor = { light: \"#1d1e1f\", dark: \"#ffffff\" };\r\n\r\n  const imgBrightness = { light: \"brightness(100%)\", dark: \"brightness(20%)\" };\r\n  var imgStyle = {\r\n    filter: imgBrightness[colorMode],\r\n  };\r\n  var style = {\r\n    backgroundColor: NavbarBgColor[colorMode],\r\n    color: NavbarColor[colorMode],\r\n  };\r\n  var styleText = {\r\n    color: NavbarColor[colorMode],\r\n  };\r\n  return (\r\n    <div className=\"PhotographyReloaded\">\r\n      <div className=\"PhotographyReloadedSec1\">\r\n        <img src=\"images/PhotographyReloaded.webp\" alt=\"INGINN Event\" />\r\n      </div>\r\n      <div className=\"PhotographyReloadedSec1Content\">\r\n        <div>\r\n          <h1>\r\n            Photography<br></br>Reloaded<br></br>2020\r\n          </h1>\r\n          <div className=\"ButtonCenter\">\r\n            <a href=\"https://www.shortto.com/photographyreloaded2020\" target=\"_blank\">\r\n              <Button\r\n                bg={ButtonBgColor[colorMode]}\r\n                color={ButtonColor[colorMode]}\r\n                _hover={{\r\n                  bg: HoverButtonBgColor[colorMode],\r\n                  color: HoverButtonColor[colorMode],\r\n                }}\r\n                borderRadius=\"0\"\r\n                variant=\"solid\"\r\n                borderStyle=\"none\"\r\n              >\r\n                Register Now\r\n              </Button>\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div style={style} className=\"PhotographyReloadedMasterBackground\">\r\n      <div style={style} className=\"PhotographyReloadedSec2\">\r\n        <h1 className=\"SectionHeading\">Event Process</h1>\r\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n          <div className=\"PhotographyReloadedSec2Content\">\r\n            <div>\r\n              <h3>October 22: Registration Close</h3>\r\n              <h5 style={{ \"padding-bottom\": \"5px\" }}>Read Rules and Regulations before Registering</h5>\r\n              <h5 style={{ \"padding-top\": \"5px\" }}>UPI ID for registeration fee 7031785903@upi</h5>\r\n              <hr></hr>\r\n            </div>\r\n            <div>\r\n              <h3>October 24: TOP 30 participants Announced</h3>\r\n              <h5 style={{ \"padding-bottom\": \"5px\" }}>\r\n                The submission of these winners will be sent to the Semi-Final\r\n                judges\r\n              </h5>\r\n              <h5 style={{ \"padding-top\": \"5px\" }}>\r\n                Submissions are selected on basis of Originality, Composition,\r\n                color, lighting, Focus, Creativity\r\n              </h5>\r\n              <hr></hr>\r\n            </div>\r\n            <div>\r\n              <h3>October 27: TOP 10 participants Announced</h3>\r\n              <h5 style={{ \"padding-bottom\": \"5px\" }}>\r\n                The submission of these winners will be sent to Finals judges\r\n              </h5>\r\n              <h5 style={{ \"padding-top\": \"5px\" }}>\r\n                2 Submissions with the highest number of likes and comments will\r\n                directly move to FINALS\r\n              </h5>\r\n              <hr></hr>\r\n            </div>\r\n            <div>\r\n              <h3>October 30: TOP 3 participants Announced</h3>\r\n              <h5>\r\n                Prizes worth Rs 1000/- will be distributed among the winners\r\n              </h5>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div style={style} className=\"PhotographyReloadedSec3\">\r\n        <h1 className=\"SectionHeading\">Judges</h1>\r\n          <div className=\"PhotographyReloadedSec3Content\">\r\n              <JudgesCard \r\n               url=\"https://instagram.fccu4-2.fna.fbcdn.net/v/t51.2885-15/e35/p1080x1080/118787518_356280248742753_6081687888158181072_n.jpg?_nc_ht=instagram.fccu4-2.fna.fbcdn.net&amp;_nc_cat=109&amp;_nc_ohc=uZ4reQEtqskAX8m5izy&amp;tp=19&amp;oh=7fedbbec04c8c803961eaecd73573145&amp;oe=5FB51718\"\r\n               colorMode={colorMode}\r\n               name=\"Surbhi Kaushik\"\r\n               insta=\"https://www.instagram.com/surbhikaushik/\"\r\n               description=\"Surbhi is a Passionate Photographer and loves to travel. She is also the Co-Founder of goodshotz\"/>\r\n              <JudgesCard \r\n              url=\"https://instagram.fccu4-2.fna.fbcdn.net/v/t51.2885-15/e35/s1080x1080/121512828_125484429050950_462911500385947020_n.jpg?_nc_ht=instagram.fccu4-2.fna.fbcdn.net&amp;_nc_cat=110&amp;_nc_ohc=2giP0SotKhMAX9p5rgp&amp;_nc_tp=15&amp;oh=91afe50e8c322b2a7504a0d335b7357a&amp;oe=5FB1BB96\"\r\n               colorMode={colorMode}\r\n               name=\"Aarzoo Khurana\"\r\n               insta=\"https://www.instagram.com/aarzoo_khurana_photography/\"\r\n               description=\"Aarzoo Khurana, a Wildlife Photographer, has been into photography for half a decade.\r\n               \"/>\r\n              <JudgesCard \r\n              url=\"https://www.rathikaramasamy.com/img/s/v-12/u623165990-o611927231-53.jpg\"\r\n               colorMode={colorMode}\r\n               name=\"Rathika Ramasamy\"\r\n               insta=\"https://www.instagram.com/rathikaramasamy/\"\r\n               description=\"Rathika is arguably one of India's foremost wildlife photographers. She is passionate about birds and is specializing in bird photography.\"/>\r\n              <JudgesCard \r\n              url=\"https://instagram.fccu4-2.fna.fbcdn.net/v/t51.2885-15/e35/15877297_1876850472594597_5426965132984975360_n.jpg?_nc_ht=instagram.fccu4-2.fna.fbcdn.net&amp;_nc_cat=109&amp;_nc_ohc=BzvsMJHo70gAX8AG6uc&amp;_nc_tp=18&amp;oh=9dd3d8daec33ac99674dbcd1987e1742&amp;oe=5FB3EF2F\"\r\n               colorMode={colorMode}\r\n               name=\"Vivek Nigam\"\r\n               insta=\"https://www.instagram.com/nigamclicks/\"\r\n               description=\"Vivek is a passionate and creative photographer with over 30K+ followers on Instagram\"/>\r\n              <JudgesCard \r\n               url=\"https://satyambhuyan.com/wp-content/uploads/2020/07/DSC_28h41-copy-2-scaled.jpg\"\r\n               colorMode={colorMode}\r\n               name=\"Satyam Bhuyan\"\r\n               insta=\"https://www.instagram.com/i.satyam5/\"\r\n               description=\"Published in @natgeoindia,@lonelyplanet @historytv18\r\n               Runners up 2019 Nikon Shutterbug competition\"/>\r\n          </div>\r\n      </div>\r\n      <div style={style} className=\"PhotographyReloadedSec4\">\r\n      <h1 className=\"SectionHeading\">Rules and Regulations</h1>\r\n        <div className=\"PhotographyReloadedSec4Content\">\r\n          <ol>\r\n          <li>The Decision of the judge is final</li>\r\n          <li>Minimum 10:1 Like:comment ratio needs to be maintained</li>\r\n          <li>Registration Fee once paid will not be refunded</li>\r\n          </ol>\r\n        </div>\r\n      </div>\r\n      <div style={style} className=\"PhotographyReloadedSec5\">\r\n      <h1 className=\"SectionHeading\">FAQ</h1>\r\n        <div className=\"PhotographyReloadedSec5Content\">\r\n         <Faq colorMode={colorMode} question=\"What's the judging process?\" \r\n         answer=\"The judges give every submission a score out of 10. We collect all submissions and add all the scores and determine the winner\"/>\r\n         <Faq colorMode={colorMode} question=\"Whom should I contact for help?\" answer=\"Email at inginn.lpu@gmail.com or call at 8130220138 / 8793394172\"/>\r\n         <Faq colorMode={colorMode} question=\"What will happen if I use Bot/Promotion Groups for promotion?\" \r\n         answer=\"You will lose your chance of moving directly to the Finals. You will not be disqualified though\"/>\r\n         <Faq colorMode={colorMode} question=\"How to get Refund?\" answer=\"No refunds under any circumstances\"/>\r\n         \r\n        </div>\r\n      </div>\r\n   \r\n      </div>\r\n       </div>\r\n  );\r\n}\r\n\r\nfunction Faq({colorMode, question, answer}){\r\n  const [faq,setFaq]=useState(false)\r\n  const faqStatus = () => {\r\n    setFaq(!faq);\r\n  };\r\n  const NavbarBgColor = { light: \"#1d1e1f\", dark: \"#ffffff\" };\r\n  const NavbarColor = { light: \"#ffffff\", dark: \"#1d1e1f\" };\r\n  var style;\r\n  if(faq==true){\r\n   style={\r\n     \"display\":\"block\"\r\n   }\r\n  }\r\n  else{\r\n    style={\r\n      \"display\":\"none\"\r\n    }\r\n  }\r\n\r\n  var style1 = {\r\n    backgroundColor: NavbarBgColor[colorMode],\r\n    color: NavbarColor[colorMode],\r\n  };\r\n  var styleText = {\r\n    color: NavbarColor[colorMode],\r\n  };\r\n  return(\r\n    <div className=\"FAQTab\">\r\n            <div onClick={faqStatus} className=\"FAQQuestion\">\r\n              <h5>\r\n                {question}\r\n              </h5>\r\n              {\r\n                faq==true?(\r\n                  <IconButton style={{\"color\":\"#fff\"}} onClick={faqStatus}>\r\n                  <FaArrowCircleUp/>\r\n                  </IconButton>\r\n                ):(\r\n                  <IconButton style={{\"color\":\"#fff\"}} onClick={faqStatus}>\r\n                  <FaArrowCircleDown/>\r\n                  </IconButton>\r\n                )\r\n              }\r\n            </div>\r\n            <div style={style} className=\"FAQAnswer\">\r\n              <h5 style={style1}>{answer}</h5>\r\n            </div>\r\n    </div>\r\n  )\r\n}\r\nexport default PhotographyReloaded;\r\n","import { Button } from '@chakra-ui/core';\r\nimport React from 'react'\r\nimport {Link} from \"react-router-dom\"\r\nimport \"../style/UpcomingEvent.css\"\r\n\r\nfunction UpcomingEvent({colorMode, events}) {\r\n    const Color = { light: \"#1d1e1f\", dark: \"#ffffff\" };\r\n  var style = {\r\n    color: Color[colorMode],\r\n  };\r\n  const ButtonBgColor = { light: \"#1d1e1f\", dark: \"#ffffff\" };\r\n  const ButtonColor = { light: \"#ffffff\", dark: \"#1d1e1f\" };\r\n  const HoverButtonBgColor = { light: \"#ffffff\", dark: \"#1d1e1f\" };\r\n  const HoverButtonColor = { light: \"#1d1e1f\", dark: \"#ffffff\" };\r\n    return (\r\n        <div style={style} className=\"UpcomingEvent\">\r\n            {\r\n            events.map(({ id, event }) =>\r\n            event.eventStatus === \"Upcoming\" && event.eventUrl != \"\" ? (\r\n                <div>\r\n            <h3 style={style} className=\"DisplayPanelHeading\"> Upcoming Event   </h3>\r\n            <div className=\"UpcomingEventContent\">\r\n                <div className=\"UpcomingEventDetail\">\r\n                    <h3>{event.eventName}</h3>\r\n                    <h5>{event.eventDescription}</h5>\r\n                    <a\r\n                              target=\"_blank\"\r\n                              rel=\"noopener noreferrer\"\r\n                              href={event.eventUrl}\r\n                            >\r\n                              <Button\r\n                                borderRadius=\"0\"\r\n                                className=\"Button\"\r\n                                variant=\"solid\"\r\n                                borderStyle=\"none\"\r\n                                bg={ButtonBgColor[colorMode]}\r\n                                color={ButtonColor[colorMode]}\r\n                                _hover={{\r\n                                  bg: HoverButtonBgColor[colorMode],\r\n                                  color: HoverButtonColor[colorMode],\r\n                                }}\r\n                              >\r\n                                Join Event\r\n                              </Button>\r\n                            </a>\r\n                            <EventPage colorMode={colorMode} event={event} />\r\n\r\n                </div>\r\n                <div className=\"UpcomingEventPoster\">\r\n                    <img\r\n                    src={event.eventPoster}\r\n                    alt=\"INGINN Event Poster\"/>\r\n                </div>\r\n            </div>\r\n            </div> \r\n            ):(<div></div>)\r\n            )}\r\n                   \r\n        </div>\r\n    )\r\n}\r\n\r\nfunction EventPage({colorMode,event}){\r\n  const Color = { light: \"#1d1e1f\", dark: \"#ffffff\" };\r\n  var style = {\r\n    color: Color[colorMode],\r\n  };\r\n  const ButtonBgColor = { light: \"#1d1e1f\", dark: \"#ffffff\" };\r\n  const ButtonColor = { light: \"#ffffff\", dark: \"#1d1e1f\" };\r\n  const HoverButtonBgColor = { light: \"#ffffff\", dark: \"#1d1e1f\" };\r\n  const HoverButtonColor = { light: \"#1d1e1f\", dark: \"#ffffff\" };\r\n  if(event.eventPage!==\"\"){\r\n    style={\r\n      \"display\":\"block\"\r\n    }\r\n  }\r\n  else{\r\n    style={\r\n      \"display\":\"none\"\r\n    }\r\n  }\r\n  return(\r\n    <Link to={event.eventPage}>\r\n      <Button\r\n        borderRadius=\"0\"\r\n        className=\"Button\"\r\n        variant=\"solid\"\r\n        borderStyle=\"none\"\r\n        bg={ButtonBgColor[colorMode]}\r\n        color={ButtonColor[colorMode]}\r\n        _hover={{\r\n          bg: HoverButtonBgColor[colorMode],\r\n          color: HoverButtonColor[colorMode],\r\n        }}\r\n      >\r\n        Event Details\r\n      </Button>\r\n      </Link>\r\n  )\r\n}\r\n\r\nexport default UpcomingEvent\r\n","import React, { useEffect, useState } from \"react\";\n//import logo from './logo.svg';\nimport \"./App.css\";\nimport { db } from \"./firebase\";\nimport {\n  ColorModeProvider,\n  ThemeProvider,\n  useColorMode,\n  useToast,\n} from \"@chakra-ui/core\";\nimport { FiSun } from \"react-icons/fi\";\n\n//import Navbar from \"./components/Navbar\"\nimport Section1 from \"./components/HomepageSec1\";\nimport Section2 from \"./components/HomepageSec2\";\nimport Section3 from \"./components/HomePageSec3\";\nimport Section4 from \"./components/HomepageSec4\";\nimport Admin from \"./components/Admin\";\nimport Editor from \"./components/Editor\";\nimport MemberAccount from \"./components/MemberAccount\";\nimport Footer from \"./components/Footer\";\nimport Error from \"./components/Error\";\nimport LastEvent from \"./components/LastEvent\";\nimport DisplayAllMembers from \"./components/DisplayAllMembers\";\nimport PhotographyReloaded from \"./components/PhotographyReloaded\"\nimport UpcomingEvent from \"./components/UpcomingEvent\"\n\nimport { Button } from \"@chakra-ui/core\";\nimport { Backdrop, CircularProgress, IconButton, TextField } from \"@material-ui/core\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport \"./style/Navbar.css\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useHistory,\n} from \"react-router-dom\";\n\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n} from \"@chakra-ui/core\";\nimport { MdHome, MdPerson, MdClose, MdSend } from \"react-icons/md\"; //material design Icon\nimport { FaMoon } from \"react-icons/fa\";\n\nfunction App() {\n  return (\n    <Router>\n      <ThemeProvider>\n        <ColorModeProvider>\n          <Navbar />\n        </ColorModeProvider>\n      </ThemeProvider>\n    </Router>\n  );\n}\n\nfunction Navbar() {\n  const toast = useToast();\n  const [isOpen, setIsOpen] = useState(false);\n  const onOpen = () => {\n    setIsOpen(true);\n  };\n  const onClose = () => {\n    setIsOpen(false);\n  };\n\n  const [isOpen2, setIsOpen2] = useState(false);\n\n  let history = useHistory();\n\n  const [user, setUser] = useState(localStorage.getItem(\"User\") || false);\n\n  const [rno, setRno] = useState(localStorage.getItem(\"UserRno\") || \"\");\n  const [password, setPassword] = useState(\n    localStorage.getItem(\"UserPassword\") || \"\"\n  );\n\n  const [status, setStatus] = useState(\n    localStorage.getItem(\"UserStatus\") || \"\"\n  );\n\n  const [admin, setAdmin] = useState(\n    localStorage.getItem(\"UserAdmin\") || false\n  );\n\n  const [editor, setEditor] = useState(\n    localStorage.getItem(\"UserEditor\") || false\n  );\n\n  const [allMembers, setAllMembers] = useState([]);\n  const [members, setMembers] = useState([]);\n  const [coreMembers, setCoreMembers] = useState([]);\n  const [coordinators, setCoordinators] = useState([]);\n  const [events, setEvents] = useState([]);\n  const [announcements, setAnnouncements] = useState([]);\n  const [feedbacks, setFeedbacks] = useState([]);\n  const [lastEvents, setLastEvents] = useState([]);\n\n  const { colorMode, toggleColorMode } = useColorMode();\n  \n\n  useEffect(() => {\n    db.collection(\"members\").onSnapshot((snapshot) => {\n      setAllMembers(\n        snapshot.docs.map((doc) => ({\n          id: doc.id,\n          allmember: doc.data(),\n        }))\n      );\n    });\n\n    db.collection(\"feedbacks\")\n      .orderBy(\"timestamp\", \"desc\")\n      .onSnapshot((snapshot) => {\n        setFeedbacks(\n          snapshot.docs.map((doc) => ({\n            id: doc.id,\n            feedback: doc.data(),\n          }))\n        );\n      });\n\n    db.collection(\"announcements\")\n      .orderBy(\"timestamp\", \"desc\")\n      .onSnapshot((snapshot) => {\n        setAnnouncements(\n          snapshot.docs.map((doc) => ({\n            id: doc.id,\n            announcement: doc.data(),\n          }))\n        );\n      });\n\n    db.collection(\"members\")\n      .where(\"status\", \"==\", \"Core\")\n      .onSnapshot((snapshot) => {\n        setCoreMembers(\n          snapshot.docs.map((doc) => ({\n            id: doc.id,\n            coremember: doc.data(),\n          }))\n        );\n      });\n\n    db.collection(\"events\").onSnapshot((snapshot) => {\n      setEvents(\n        snapshot.docs.map((doc) => ({\n          id: doc.id,\n          event: doc.data(),\n        }))\n      );\n    });\n\n    db.collection(\"members\")\n      .where(\"status\", \"==\", \"Coordinator\")\n      .onSnapshot((snapshot) => {\n        setCoordinators(\n          snapshot.docs.map((doc) => ({\n            id: doc.id,\n            coordinator: doc.data(),\n          }))\n        );\n      });\n\n    db.collection(\"members\")\n      .where(\"status\", \"==\", \"Member\")\n      .onSnapshot((snapshot) => {\n        setMembers(\n          snapshot.docs.map((doc) => ({\n            id: doc.id,\n            member: doc.data(),\n          }))\n        )\n      })\n\n\n    db.collection(\"lastEvent\").onSnapshot((snapshot) => {\n      setLastEvents(\n        snapshot.docs.map((doc) => ({\n          id: doc.id,\n          lastEvent: doc.data(),\n        }))\n      )\n    })\n\n    \n  }, []);\n  \n\n  const logIn = (e) => {\n    e.preventDefault();\n   if(rno!==\"\"){\n          setIsOpen2(true);\n          db.collection(\"members\")\n            .where(\"rno\", \"==\", rno)\n            .get()\n            .then(function (querySnapshot) {\n              querySnapshot.forEach(function (doc) {\n                if(password==doc.data().password){\n                    setUser(\"true\");\n                    setStatus(doc.data().status);\n                    setAdmin(doc.data().admin);\n                    setEditor(doc.data().editor);\n                    localStorage.setItem(\"UserId\", doc.id);\n                    localStorage.setItem(\"UserName\", doc.data().name);\n                    localStorage.setItem(\"UserEmail\", doc.data().email);\n                    localStorage.setItem(\"UserDepartment\", doc.data().department);\n                    localStorage.setItem(\"UserContact\", doc.data().contact);\n                    localStorage.setItem(\"UserCourse\", doc.data().course);\n                    localStorage.setItem(\n                      \"UserCoordinator\",\n                      doc.data().myCoordinator\n                    );\n                    localStorage.setItem(\"UserDob\", doc.data().dob);\n                    localStorage.setItem(\"UserImage\", doc.data().imageUrl);\n                    localStorage.setItem(\"UserRno\", doc.data().rno);\n                    localStorage.setItem(\"UserPassword\", doc.data().password);\n                    localStorage.setItem(\"User\", \"true\");\n                    localStorage.setItem(\"UserStatus\", doc.data().status);\n                    localStorage.setItem(\"UserAdmin\", doc.data().admin);\n                    localStorage.setItem(\"UserEditor\", doc.data().editor);\n                    localStorage.setItem(\n                      \"UserCustomPosition\",\n                      doc.data().customPosition\n                    );\n                    setIsOpen2(false);\n                    toast({\n                      title: \"Login Successful\",\n                      description: \"\",\n                      status: \"success\",\n                      duration: 3000,\n                      isClosable: false,\n                    });\n                }\n                else{\n                  toast({\n                    title: \"Check rno/password\",\n                    description: \"\",\n                    status: \"error\",\n                    duration: 3000,\n                    isClosable: false,\n                  });\n                }\n                \n              });\n            });\n  }\n   \n   else{\n    toast({\n      title: \"Please Fill the form\",\n      description: \"LOGIN is available only for INGINN Members\",\n      status: \"error\",\n      duration: 3000,\n      isClosable: false,\n    });\n   }\n   setIsOpen2(false);\n  };\n \n  const logOut = (e) => {\n    localStorage.clear();\n    history.push(\"/inginnv1/\");\n    return (window.location.href = \"/inginnv1/\");\n  };\n\n  function goHome() {\n    history.push(\"/inginnv1/\");\n    window.location.reload(false);\n    return (window.location.href = \"/inginnv1/\");\n  }\n\n  const gotoAccount = (e) => {\n    if (\n      localStorage.getItem(\"UserAdmin\") === \"false\" &&\n      localStorage.getItem(\"UserEditor\") === \"false\"\n    ) {\n      return history.push(\"/inginnv1/account\");\n    }\n    if (localStorage.getItem(\"UserEditor\") === \"true\") {\n      return history.push(\"/inginnv1/editor\");\n    }\n    if (localStorage.getItem(\"UserAdmin\") === \"true\") {\n      return history.push(\"/inginnv1/admin\");\n    }\n  };\n  const ButtonBgColor = { light: \"#1d1e1f\", dark: \"#ffffff\" };\n  const ButtonColor = { light: \"#ffffff\", dark: \"#1d1e1f\" };\n  const HoverButtonBgColor = { light: \"#ffffff\", dark: \"#1d1e1f\" };\n  const HoverButtonColor = { light: \"#1d1e1f\", dark: \"#ffffff\" };\n\n\n  const NavbarBgColor = { light: \"#ffffff\", dark: \"#1d1e1f\" };\n  const NavbarColor = { light: \"#1d1e1f\", dark: \"#ffffff\" };\n  var style = {\n    backgroundColor: NavbarBgColor[colorMode],\n    color: NavbarColor[colorMode],\n  };\n  var styleText = {\n    color: NavbarColor[colorMode],\n  };\n\n  const BodyBgColor = { light: \"#e8e8e8\", dark: \"#383838\" };\n  const BodyColor = { light: \"#383838\", dark: \"#e8e8e8\" };\n  var bodyStyle = {\n    backgroundColor: BodyBgColor[colorMode],\n    color: BodyColor[colorMode],\n  };\n\n  const logoDisplay1 = { light: \"none\", dark: \"inline\" };\n  const logoDisplay2 = { light: \"inline\", dark: \"none\" };\n  var logoStyle1 = {\n    display: logoDisplay1[colorMode],\n  };\n  var logoStyle2 = {\n    display: logoDisplay2[colorMode],\n  };\n\n  const TextFieldBgColor = { light: \"#e8e8e8\", dark: \"#383838\" };\n  const TextFieldColor = { light: \"#383838\", dark: \"#e8e8e8\" };\n  const useStyles = makeStyles({\n    root: {\n      \"& label.Mui-focused\": {\n        color: TextFieldColor[colorMode],\n      },\n      \"& label\": {\n        color: TextFieldColor[colorMode],\n      },\n      \"& #modal-1\": {\n        backgroundColor: \"#000000\",\n      },\n      backgroundColor: TextFieldBgColor[colorMode],\n      color: TextFieldColor[colorMode],\n    },\n  });\n  const classes = useStyles();\n\n  return (\n    <div>\n      <div style={style} className=\"Navbar\">\n        <div className=\"NavbarContent\">\n          <Link style={logoStyle1} to=\"/inginnv1/\">\n            <img\n              className=\"NavbarImage\"\n              onClick={goHome}\n              src=\"/inginnv1/images/ShortLogoWhite.webp\"\n              alt=\"INGINN Logo\"\n            />\n          </Link>\n          <Link style={logoStyle2} to=\"/\">\n            <img\n              className=\"NavbarImage\"\n              onClick={goHome}\n              src=\"/inginnv1/images/ShortLogoBlack.webp\"\n              alt=\"INGINN Logo\"\n            />\n          </Link>\n\n          <div style={style} className=\"NavbarIcon\">\n            <Link to=\"/inginnv1/\">\n              <IconButton style={style}>\n                <MdHome style={style} />\n              </IconButton>\n            </Link>\n          </div>\n          <IconButton style={style} onClick={toggleColorMode}>\n            {colorMode === \"dark\" ? <FiSun /> : <FaMoon />}\n          </IconButton>\n          <div>\n            {user === \"true\" ? (\n              <div className=\"ButtonContainer\">\n                <Button\n                size=\"sm\"\n                  bg={ButtonBgColor[colorMode]}\n                  color={ButtonColor[colorMode]}\n                  _hover={{\n                    bg: HoverButtonBgColor[colorMode],\n                    color: HoverButtonColor[colorMode],\n                  }}\n                  marginRight=\"10px\"\n                  borderRadius=\"0\"\n                  className=\"Button\"\n                  leftIcon={MdPerson}\n                  onClick={gotoAccount}\n                  variant=\"solid\"\n                  borderStyle=\"none\"\n                >\n                  My Account\n                </Button>\n                <Button\n                size=\"sm\"\n                  bg={ButtonBgColor[colorMode]}\n                  color={ButtonColor[colorMode]}\n                  _hover={{\n                    bg: HoverButtonBgColor[colorMode],\n                    color: HoverButtonColor[colorMode],\n                  }}\n                  type=\"button\"\n                  borderRadius=\"0\"\n                  className=\"Button\"\n                  leftIcon={MdClose}\n                  variant=\"solid\"\n                  borderStyle=\"none\"\n                  onClick={logOut}\n                >\n                  Log Out\n                </Button>\n              </div>\n            ) : (\n              <Button\n                bg={ButtonBgColor[colorMode]}\n                color={ButtonColor[colorMode]}\n                _hover={{\n                  bg: HoverButtonBgColor[colorMode],\n                  color: HoverButtonColor[colorMode],\n                }}\n                borderRadius=\"0\"\n                className=\"Button\"\n                leftIcon={MdPerson}\n                variant=\"solid\"\n                borderStyle=\"none\"\n                onClick={onOpen}\n              >\n                Log In\n              </Button>\n            )}\n          </div>\n        </div>\n        <Modal\n          style={style}\n          className={classes.root}\n          isOpen={isOpen}\n          onClose={onClose}\n          isCentered\n        >\n          <ModalOverlay />\n          <ModalContent style={style} className={classes.root}>\n            <form>\n              <ModalHeader>\n                <h3 style={styleText} className=\"ModalHeader\">\n                  LOGIN\n                </h3>\n              </ModalHeader>\n              <ModalBody style={style}>\n                <TextField\n                  className={classes.root}\n                  onChange={(e) => setRno(e.target.value)}\n                  value={rno}\n                  type=\"number\"\n                  label=\"Registration Number\"\n                  variant=\"filled\"\n                  required\n                  InputProps={{\n                    className: classes.root,\n                  }}\n                  fullWidth\n                />\n                <TextField\n                  className={classes.root}\n                  onChange={(e) => setPassword(e.target.value)}\n                  value={password}\n                  type=\"password\"\n                  label=\"Password\"\n                  variant=\"filled\"\n                  required\n                  InputProps={{\n                    className: classes.root,\n                  }}\n                  fullWidth\n                />\n              </ModalBody>\n\n              <ModalFooter>\n                <Button\n                  bg={ButtonBgColor[colorMode]}\n                  color={ButtonColor[colorMode]}\n                  _hover={{\n                    bg: HoverButtonBgColor[colorMode],\n                    color: HoverButtonColor[colorMode],\n                  }}\n                  borderRadius=\"0\"\n                  type=\"submit\"\n                  className=\"Button\"\n                  leftIcon={MdSend}\n                  variant=\"solid\"\n                  borderStyle=\"none\"\n                  onClick={logIn}\n                >\n                  Log In\n                </Button>\n                <Button\n                  borderRadius=\"0\"\n                  _hover={{ bg: \"#000\", color: \"#f06567\" }}\n                  background=\"#8f0e10\"\n                  color=\"#ffffff\"\n                  className=\"Button\"\n                  leftIcon={MdClose}\n                  variant=\"solid\"\n                  borderStyle=\"none\"\n                  onClick={onClose}\n                >\n                  Close\n                </Button>\n              </ModalFooter>\n            </form>\n          </ModalContent>\n        </Modal>\n      </div>\n      <div style={bodyStyle} className=\"HeroContainer\">\n      </div>\n      <Switch>\n        <Route exact path=\"/inginnv1/\">\n          <Home\n            coordinators={coordinators}\n            coreMembers={coreMembers}\n            members={members}\n            events={events}\n            allMembers={allMembers}\n            feedbacks={feedbacks}\n            announcements={announcements}\n            lastEvents={lastEvents}\n            colorMode={colorMode}\n          />\n        </Route>\n        <Route exact path=\"/inginnv1/admin\">\n          <Admin\n            coordinators={coordinators}\n            coreMembers={coreMembers}\n            members={members}\n            events={events}\n            allMembers={allMembers}\n            announcements={announcements}\n            feedbacks={feedbacks}\n            lastEvents={lastEvents}\n            colorMode={colorMode}\n          />\n        </Route>\n        <Route exact path=\"/inginnv1/editor\">\n          <Editor\n            coordinators={coordinators}\n            coreMembers={coreMembers}\n            members={members}\n            events={events}\n            allMembers={allMembers}\n            announcements={announcements}\n            feedbacks={feedbacks}\n            colorMode={colorMode}\n          />\n        </Route>\n        <Route exact path=\"/inginnv1/account\">\n          <MemberAccount\n            coordinators={coordinators}\n            coreMembers={coreMembers}\n            members={members}\n            events={events}\n            allMembers={allMembers}\n            announcements={announcements}\n            colorMode={colorMode}\n          />\n          \n        </Route>\n        <Route path=\"/inginnv1/allmembers\">\n          <DisplayAllMembers\n            coordinators={coordinators}\n            coreMembers={coreMembers}\n            members={members}\n            events={events}\n            allMembers={allMembers}\n            announcements={announcements}\n            colorMode={colorMode}\n          />\n          \n        </Route>\n        <Route path=\"/inginnv1/photographyreloaded\">\n          <PhotographyReloaded\n            colorMode={colorMode}\n          />\n          \n        </Route>\n        <Route component={NoMatchPage} />\n      </Switch>\n      <Backdrop style={styleText} open={isOpen2} >\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n      <Footer colorMode={colorMode} allMembers={allMembers} />\n    </div>\n  );\n}\nfunction NoMatchPage() {\n  return <Error />;\n}\n\nfunction Home({\n  coreMembers,\n  colorMode,\n  coordinators,\n  members,\n  allMembers,\n  events,\n  announcements,\n  lastEvents,\n  feedbacks\n}) {\n  return (\n    <div className=\"Section1\">\n      <Section1 colorMode={colorMode} events={events} />\n      <UpcomingEvent colorMode={colorMode} events={events}/>\n      <LastEvent colorMode={colorMode} lastEvents={lastEvents} />\n      <Section2 colorMode={colorMode} lastEvents={lastEvents} />\n      <Section3\n        colorMode={colorMode}\n        coreMembers={coreMembers}\n        coordinators={coordinators}\n        members={members}\n      />\n      \n      <Section4 colorMode={colorMode} events={events} calledBy=\"Home\" />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}